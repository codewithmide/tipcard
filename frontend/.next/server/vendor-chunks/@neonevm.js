"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@neonevm";
exports.ids = ["vendor-chunks/@neonevm"];
exports.modules = {

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/api/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NeonClientApi: () => (/* reexport safe */ _neon_client_api__WEBPACK_IMPORTED_MODULE_0__.NeonClientApi),\n/* harmony export */   NeonProxyRpcApi: () => (/* reexport safe */ _neon_proxy_rpc_api__WEBPACK_IMPORTED_MODULE_1__.NeonProxyRpcApi),\n/* harmony export */   getProxyState: () => (/* reexport safe */ _neon_proxy_rpc_api__WEBPACK_IMPORTED_MODULE_1__.getProxyState)\n/* harmony export */ });\n/* harmony import */ var _neon_client_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./neon-client.api */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/neon-client.api.js\");\n/* harmony import */ var _neon_proxy_rpc_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./neon-proxy-rpc.api */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/neon-proxy-rpc.api.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vYXBpL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWtDO0FBQ0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBjYXJkLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BuZW9uZXZtL3NvbGFuYS1zaWduL2Rpc3QvZXNtL2FwaS9pbmRleC5qcz9kMTYyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vbmVvbi1jbGllbnQuYXBpJztcbmV4cG9ydCAqIGZyb20gJy4vbmVvbi1wcm94eS1ycGMuYXBpJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/neon-client.api.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/api/neon-client.api.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NeonClientApi: () => (/* binding */ NeonClientApi)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n\n/**\n * @deprecated use NeonProxyRpcApi\n * A client API for interacting with **Neon EVM infrastructure**.\n *\n * This class provides a set of methods to **emulate transactions**, **query balances**,\n * **fetch storage values**, **retrieve holder accounts**, and **execute transaction trees** on **Neon EVM**.\n *\n * @class\n * @example\n * ```typescript\n * const neonClient = new NeonClientApi(\"https://neon-api.example.com\");\n * const balance = await neonClient.getBalance(\"0xNeonAddress\", 245022926);\n * console.log(balance);\n * ```\n\n **/\nclass NeonClientApi {\n    url;\n    /**\n     * **Emulates the execution** of a given Ethereum-like transaction on Neon EVM.\n     *\n     * This function is used to simulate the execution of a transaction **without broadcasting** it.\n     *\n     * @param {EmulateTransactionData} transaction - The **transaction data** to emulate.\n     * @param {number} [maxStepsToExecute=500000] - The **maximum number of execution steps**.\n     * @param {any} [provideAccountInfo=null] - Optional **account information** to include.\n     * @returns {Promise<any>} A **promise** resolving to the **emulation result**.\n     */\n    async emulate(transaction, maxStepsToExecute = 500000, provideAccountInfo = null) {\n        const body = {\n            step_limit: maxStepsToExecute,\n            tx: transaction,\n            accounts: [],\n            provide_account_info: provideAccountInfo\n        };\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.post)(`${this.url}/emulate`, body);\n    }\n    /**\n     * **Retrieves the storage value** at a given index for a specified Neon contract.\n     *\n     * @param {NeonAddress} contract - The **Neon contract address**.\n     * @param {number} index - The **storage index** to query.\n     * @returns {Promise<any>} A **promise** resolving to the **storage value**.\n     *\n     * @example\n     * ```typescript\n     * const storageValue = await neonClient.getStorageAt(\"0xContractAddress\", 1);\n     * console.log(storageValue);\n     * ```\n     */\n    async getStorageAt(contract, index) {\n        const body = { contract, index };\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.post)(`${this.url}/storage`, body);\n    }\n    /**\n     * **Fetches holder account information** based on the given Solana public key.\n     *\n     * @param {PublicKey} publicKey - The **Solana public key** of the holder account.\n     * @returns {Promise<NeonApiResponse<HolderAccount>>} A **promise** resolving to the **holder account details**.\n     *\n     * @example\n     * ```typescript\n     * const holder = await neonClient.getHolder(new PublicKey(\"SolanaPublicKey\"));\n     * console.log(holder);\n     * ```\n     */\n    async getHolder(publicKey) {\n        const body = { pubkey: publicKey.toBase58() };\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.post)(`${this.url}/holder`, body);\n    }\n    /**\n     * **Retrieves the balance** of a given Neon EVM account.\n     *\n     * @param {NeonAddress} address - The **Neon wallet address**.\n     * @param {number} chainId - The **Chain ID** of the Neon network.\n     * @returns {Promise<NeonApiResponse<NeonBalance>>} A **promise** resolving to the **account balance**.\n     *\n     * @example\n     * ```typescript\n     * const balance = await neonClient.getBalance(\"0xNeonAddress\", 245022926);\n     * console.log(balance);\n     * ```\n     */\n    async getBalance(address, chainId) {\n        const body = { account: [{ address, chain_id: chainId }] };\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.post)(`${this.url}/balance`, body);\n    }\n    /**\n     * **Retrieves the transaction tree** associated with a specific transaction origin.\n     *\n     * @param {TransferTreeData} origin - The **origin transaction data**.\n     * @param {number} nonce - The **nonce value** of the transaction.\n     * @returns {Promise<NeonApiResponse<TransactionTreeResponse>>} A **promise** resolving to the **transaction tree details**.\n     *\n     * @example\n     * ```typescript\n     * const tree = await neonClient.transactionTree(originData, 1);\n     * console.log(tree);\n     * ```\n     */\n    async transactionTree(origin, nonce) {\n        const body = { origin, nonce };\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.post)(`${this.url}/transaction_tree`, body);\n    }\n    /**\n     * **Waits for the execution of a scheduled transaction tree**.\n     *\n     * This function **polls** the transaction tree and **accumulates its execution results** over time.\n     *\n     * @param {TransferTreeData} origin - The **origin transaction data**.\n     * @param {number} nonce - The **nonce value** of the transaction.\n     * @param {number} timeout - The **maximum waiting time** in milliseconds.\n     * @returns {Promise<ScheduledTransactionStatus[]>} A **promise** resolving to an array of **executed transaction statuses**.\n     */\n    async waitTransactionTreeExecution(origin, nonce, timeout) {\n        const start = Date.now();\n        const result = [];\n        while (timeout > Date.now() - start) {\n            const { value, status } = await this.transactionTree(origin, nonce);\n            const { transactions } = value;\n            if (transactions.length > 0) {\n                for (const tx of transactions) {\n                    const index = result.findIndex(i => i.transaction_hash === tx.transaction_hash);\n                    if (index === -1) {\n                        result.push(tx);\n                    }\n                    else {\n                        result[index] = tx;\n                    }\n                }\n            }\n            else {\n                return result;\n            }\n            await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.delay)(100);\n        }\n        return result;\n    }\n    /**\n     * Creates an instance of **NeonClientApi**.\n     *\n     * @param {string} url - The **base API URL** for the Neon EVM service.\n     */\n    constructor(url) {\n        this.url = url;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/neon-client.api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/neon-proxy-rpc.api.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/api/neon-proxy-rpc.api.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NeonProxyRpcApi: () => (/* binding */ NeonProxyRpcApi),\n/* harmony export */   getProxyState: () => (/* binding */ getProxyState)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var fetch_retry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fetch-retry */ \"(ssr)/./node_modules/fetch-retry/index.js\");\n/* harmony import */ var fetch_retry__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fetch_retry__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/providers/provider-jsonrpc.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n/* harmony import */ var _neon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../neon */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/index.js\");\n/* harmony import */ var _solana__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../solana */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/index.js\");\n\n\n\n\n\n\nconst neonProxyRpcOptionsDefault = {\n    showRequestLog: true,\n    space: undefined,\n    retries: 5,\n    retryDelay: 1e3\n};\nclass NeonProxyRpcApi {\n    chainId;\n    programAddress;\n    tokenMintAddress;\n    params;\n    provider;\n    _solanaUser;\n    rpcUrl;\n    options;\n    get solanaUser() {\n        if (this._solanaUser instanceof _solana__WEBPACK_IMPORTED_MODULE_4__.SolanaNeonAccount) {\n            return this._solanaUser;\n        }\n        else {\n            throw new Error(`SolanaNeonAccount is not initialized`);\n        }\n    }\n    set solanaUser(solanaUser) {\n        this._solanaUser = solanaUser;\n    }\n    async evmParams() {\n        return this.neonRpc('neon_getEvmParams', []).then(({ result }) => result);\n    }\n    getAccount(account, nonce) {\n        return this.neonRpc('neon_getAccount', [account, nonce]);\n    }\n    getTransactionReceipt(transactionHash) {\n        return this.neonRpc('neon_getTransactionReceipt', [transactionHash]);\n    }\n    gasPrice() {\n        return this.neonRpc('neon_gasPrice', []);\n    }\n    async nativeTokenList() {\n        return this.neonRpc('neon_getNativeTokenList', []).then(({ result }) => result);\n    }\n    sendRawScheduledTransaction(transaction) {\n        return this.neonRpc('neon_sendRawScheduledTransaction', [transaction]);\n    }\n    getNeonTransactionByAddress(pubkey) {\n        return this.neonRpc('neon_getTransactionByHash', [pubkey.toBase58()]);\n    }\n    estimateScheduledTransaction(transaction) {\n        return this.neonRpc('neon_estimateScheduledTransaction', [transaction]);\n    }\n    getPendingTransactions(solanaWallet) {\n        return this.neonRpc('neon_getPendingTransactions', [solanaWallet.toBase58()]);\n    }\n    async getTransactionCount(neonWallet, block = 'latest') {\n        const { result } = await this.neonRpc('eth_getTransactionCount', [neonWallet, block]);\n        return result;\n    }\n    getTransactionByHash(signature) {\n        return this.neonRpc('eth_getTransactionByHash', [signature]);\n    }\n    async waitTransactionByHash(signature, duration, delayTimeout = 300) {\n        const start = Date.now();\n        while (duration > Date.now() - start) {\n            const { result } = await this.getTransactionByHash(signature);\n            if (result?.hash) {\n                return result;\n            }\n            await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.delay)(delayTimeout);\n        }\n        return null;\n    }\n    async waitTransactionTreeExecution(address, nonce, duration, delayTimeout = 300) {\n        const start = Date.now();\n        const trx = [];\n        while (duration > Date.now() - start) {\n            const { result } = await this.getScheduledTreeAccount(address, nonce);\n            if (!result) {\n                return trx;\n            }\n            const { transactions } = result;\n            if (result?.activeStatus) {\n                for (const tx of transactions) {\n                    const index = trx.findIndex(i => i.transactionHash === tx.transactionHash);\n                    if (index === -1) {\n                        trx.push(tx);\n                    }\n                    else {\n                        trx[index] = tx;\n                    }\n                }\n                if (['Success', 'Empty', 'Failed'].includes(result.activeStatus)) {\n                    return trx;\n                }\n            }\n            await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.delay)(delayTimeout);\n        }\n        return trx;\n    }\n    getScheduledTreeAccount(address, nonce) {\n        return this.neonRpc('neon_getScheduledTreeAccount', [address, nonce, 'latest']);\n    }\n    estimateScheduledGas(estimatedData) {\n        const { solanaPayer, transactions, preparatorySolanaTransactions } = estimatedData;\n        const scheduledSolanaPayer = solanaPayer.toBase58();\n        const data = { scheduledSolanaPayer, transactions, preparatorySolanaTransactions };\n        return this.neonRpc('neon_estimateScheduledGas', [data]);\n    }\n    maxPriorityFeePerGas() {\n        return this.neonRpc(`eth_maxPriorityFeePerGas`, []);\n    }\n    getBlockByNumber(block, detail = false) {\n        return this.neonRpc(`eth_getBlockByNumber`, [block, detail]);\n    }\n    async getMaxFeePerGas() {\n        const { result: maxPriorityFeePerGasHex } = await this.maxPriorityFeePerGas();\n        const { result } = await this.getBlockByNumber(`latest`, false);\n        const a = parseInt(maxPriorityFeePerGasHex, 16);\n        const b = _neon__WEBPACK_IMPORTED_MODULE_3__.MAX_PRIORITY_FEE_PER_GAS_DEFAULT;\n        const maxPriorityFeePerGas = a > b ? a : b;\n        const maxFeePerGas = Math.floor(parseInt(result.baseFeePerGas, 16) * 1.5 + maxPriorityFeePerGas);\n        return { maxPriorityFeePerGas, maxFeePerGas };\n    }\n    ethGetTransactionReceipt(transaction) {\n        return this.neonRpc('eth_getTransactionReceipt', [transaction]);\n    }\n    /**\n     * Sends ScheduledTransactions to the Proxy for subsequent execution.\n     * @param {HexString[]} transactions - an array of {ScheduledTransaction} in hex format\n     * @return {RPCResponse<HexString>[]} - an array of {RPCResponse} containing a list of transactions for NeonEVM\n     * that can potentially be executed and found in the explorer.\n     * @example\n     * ```typescript\n     * const transactionsData: TransactionData[] = [{\n     *   from: solanaUser.neonWallet,\n     *   to: contractAddress_0,\n     *   data: contractData_0\n     * }, {\n     *   from: solanaUser.neonWallet,\n     *   to: contractAddress_1,\n     *   data: contractData_1\n     * }];\n     * const transactionGas = await proxyApi.estimateScheduledTransactionGas({\n     *   scheduledSolanaPayer: solanaUser.publicKey.toBase58(),\n     *   transactions: transactionsData\n     * });\n     * const { scheduledTransaction, transactions } = await proxyApi.createMultipleTransaction({\n     *   transactionsData,\n     *   transactionGas\n     * });\n     * const result = await proxyApi.sendRawScheduledTransactions(transactions);\n     * console.log(result)\n     * ```\n     */\n    async sendRawScheduledTransactions(transactions) {\n        const method = `neon_sendRawScheduledTransaction`;\n        const body = transactions.map(tx => {\n            const id = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.uuid)();\n            return { id, jsonrpc: '2.0', method, params: [tx.serialize()] };\n        });\n        return this.neonMethodsRpc(body);\n    }\n    /**\n     * Calculates the gas fee\n     *\n     * @param {EstimatedScheduledGasPayData} data - transaction data used for gas fee estimation\n     * @return {TransactionGas}\n     */\n    async estimateScheduledTransactionGas(data) {\n        let { maxPriorityFeePerGas, maxFeePerGas } = await this.getMaxFeePerGas();\n        let gasLimit = data.transactions.map(_ => 1e7);\n        try {\n            const { result, error } = await this.estimateScheduledGas(data);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_2__.logJson)(error);\n            if (result) {\n                (0,_utils__WEBPACK_IMPORTED_MODULE_2__.logJson)(result);\n                maxFeePerGas = parseInt(result.maxFeePerGas, 16);\n                maxPriorityFeePerGas = parseInt(result.maxPriorityFeePerGas, 16);\n                gasLimit = result.gasList.map(i => parseInt(i, 16));\n            }\n        }\n        catch (e) {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_2__.log)(e);\n        }\n        return { gasLimit, maxFeePerGas, maxPriorityFeePerGas };\n    }\n    /**\n     * A simple way to create a {ScheduledTransaction}\n     *\n     * @param {CreateScheduledTransaction} createData - data used to create the transaction\n     * @return {ScheduledTransactionResult}\n     */\n    async createScheduledTransaction(createData) {\n        const { transactionGas, transactionData } = createData;\n        const solanaUser = createData.solanaUser ? createData.solanaUser : this.solanaUser;\n        const nonce = createData.nonce ? createData.nonce : await this.provider.getTransactionCount(solanaUser.neonWallet);\n        const instructions = createData.solanaInstructions ? createData.solanaInstructions : [];\n        const chainId = createData.chainId ? createData.chainId : this.chainId;\n        const programAddress = createData.programAddress ? createData.programAddress : this.programAddress;\n        const tokenMintAddress = createData.tokenMintAddress ? createData.tokenMintAddress : this.tokenMintAddress;\n        const { from, to, data } = transactionData;\n        const { maxFeePerGas, maxPriorityFeePerGas, gasLimit } = transactionGas;\n        const transaction = new _neon__WEBPACK_IMPORTED_MODULE_3__.ScheduledTransaction({\n            chainId,\n            nonce,\n            from,\n            to,\n            data,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit: gasLimit[0]\n        });\n        const scheduledTransaction = (0,_solana__WEBPACK_IMPORTED_MODULE_4__.createScheduledNeonEvmTransaction)({\n            chainId,\n            signerAddress: solanaUser.publicKey,\n            neonEvmProgram: programAddress,\n            tokenMintAddress: tokenMintAddress,\n            neonWallet: solanaUser.neonWallet,\n            neonWalletNonce: nonce,\n            neonTransaction: transaction.serialize()\n        });\n        if (instructions.length > 0) {\n            for (const instruction of instructions) {\n                scheduledTransaction.instructions.unshift(instruction);\n            }\n        }\n        return { scheduledTransaction, transaction };\n    }\n    /**\n     * A simple way to create a {MultipleTransaction}\n     *\n     * @param {CreateScheduledTransaction} createData - data used to create the transaction\n     * @return {ScheduledTransactionsResult}\n     */\n    async createMultipleTransaction(createData) {\n        const { transactionGas, transactionsData } = createData;\n        const solanaUser = createData.solanaUser ? createData.solanaUser : this.solanaUser;\n        const nonce = createData.nonce ? createData.nonce : await this.provider.getTransactionCount(solanaUser.neonWallet);\n        const instructions = createData.solanaInstructions ? createData.solanaInstructions : [];\n        const chainId = createData.chainId ? createData.chainId : this.chainId;\n        const programAddress = createData.programAddress ? createData.programAddress : this.programAddress;\n        const tokenMintAddress = createData.tokenMintAddress ? createData.tokenMintAddress : this.tokenMintAddress;\n        const selectedMethod = typeof createData.method === 'function' ?\n            createData.method : (0,_solana__WEBPACK_IMPORTED_MODULE_4__.selectMultipleTransactionMethod)(createData.method);\n        const { multiple, transactions } = selectedMethod({ nonce, chainId, transactionsData, transactionGas });\n        const scheduledTransaction = (0,_solana__WEBPACK_IMPORTED_MODULE_4__.createScheduledNeonEvmMultipleTransaction)({\n            chainId,\n            neonWalletNonce: nonce,\n            neonEvmProgram: programAddress,\n            neonTransaction: multiple.data,\n            signerAddress: solanaUser.publicKey,\n            tokenMintAddress: tokenMintAddress,\n            neonWallet: solanaUser.neonWallet\n        });\n        if (instructions.length > 0) {\n            for (const instruction of instructions) {\n                scheduledTransaction.instructions.unshift(instruction);\n            }\n        }\n        return {\n            scheduledTransaction,\n            transactions\n        };\n    }\n    /**\n     * Initializes all necessary components for creating a {ScheduledTransaction}.\n     * Retrieves {chainId}, {NeonEvmParams}, {neonProgramAddress}, {tokenMintAddress}, and {JsonRpcProvider}.\n     *\n     * @param {PublicKey | Keypair} solanaAddress - (optional) if provided, creates a {SolanaNeonAccount} used in the {ScheduledTransaction}\n     * @return {NeonProxyRpcInitData}\n     */\n    async init(solanaAddress) {\n        const requests = [\n            { jsonrpc: '2.0', id: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.uuid)(), method: 'eth_chainId', params: [] },\n            { jsonrpc: '2.0', id: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.uuid)(), method: 'neon_getEvmParams', params: [] },\n            { jsonrpc: '2.0', id: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.uuid)(), method: 'neon_getNativeTokenList', params: [] }\n        ];\n        const [{ result: chainId }, { result: evmParams }, { result: nativeTokenList }] = await this.neonMethodsRpc(requests);\n        this.chainId = Number(chainId);\n        this.params = evmParams;\n        this.programAddress = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(this.params.neonEvmProgramId);\n        const { tokenMintAddress } = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getGasToken)(nativeTokenList, this.chainId);\n        this.tokenMintAddress = tokenMintAddress;\n        if (solanaAddress) {\n            if (solanaAddress instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey) {\n                this._solanaUser = new _solana__WEBPACK_IMPORTED_MODULE_4__.SolanaNeonAccount(solanaAddress, this.programAddress, this.tokenMintAddress, this.chainId);\n            }\n            if (solanaAddress instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair) {\n                this._solanaUser = _solana__WEBPACK_IMPORTED_MODULE_4__.SolanaNeonAccount.fromKeypair(solanaAddress, this.programAddress, this.tokenMintAddress, this.chainId);\n            }\n        }\n        return {\n            provider: this.provider,\n            chainId: this.chainId,\n            params: this.params,\n            programAddress: this.programAddress,\n            tokenMintAddress: this.tokenMintAddress,\n            solanaUser: this.solanaUser\n        };\n    }\n    async neonRpc(method, params = []) {\n        return NeonProxyRpcApi.rpc(this.rpcUrl, method, params, this.options);\n    }\n    async neonMethodsRpc(methods) {\n        return NeonProxyRpcApi.fetch(this.rpcUrl, methods, this.options);\n    }\n    static async rpc(url, method, params = [], options) {\n        const id = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.uuid)();\n        return NeonProxyRpcApi.fetch(url, { id, jsonrpc: '2.0', method, params }, options);\n    }\n    static async fetch(url, request, options) {\n        const [headers, headersString] = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.prepareHeaders)({});\n        const body = JSON.stringify(request, null, options?.space);\n        const fetchData = {\n            headers,\n            body,\n            method: 'POST',\n            mode: 'cors'\n        };\n        if (options?.showRequestLog) {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_2__.log)(`curl ${url} -X POST ${headersString} -d '${body}' | jq .`);\n        }\n        const retry = fetch_retry__WEBPACK_IMPORTED_MODULE_1___default()(fetch, { retries: options?.retries || 5, retryDelay: options?.retryDelay || 1e3 });\n        const response = await retry(url, fetchData);\n        const result = await response.text();\n        return JSON.parse(result);\n    }\n    constructor(url, options = {}) {\n        this.rpcUrl = url;\n        this.provider = new ethers__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(this.rpcUrl);\n        this.options = { ...neonProxyRpcOptionsDefault, ...options };\n    }\n}\nasync function getProxyState(proxyUrl, options = {}) {\n    const provider = new ethers__WEBPACK_IMPORTED_MODULE_5__.JsonRpcProvider(proxyUrl);\n    const proxyApi = new NeonProxyRpcApi(proxyUrl, options);\n    const proxyStatus = await proxyApi.evmParams();\n    const tokensList = await proxyApi.nativeTokenList();\n    const { chainId } = await provider.getNetwork();\n    const evmProgramAddress = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(proxyStatus.neonEvmProgramId);\n    const gasToken = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getGasToken)(tokensList, Number(chainId));\n    return { proxyApi, provider, chainId: Number(chainId), proxyStatus, gasToken, tokensList, evmProgramAddress };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/neon-proxy-rpc.api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/account.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/models/account.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL2FjY291bnQuanMiLCJtYXBwaW5ncyI6IjtBQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwY2FyZC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AbmVvbmV2bS9zb2xhbmEtc2lnbi9kaXN0L2VzbS9tb2RlbHMvYWNjb3VudC5qcz85NDZlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/api.js":
/*!******************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/models/api.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL2FwaS5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBjYXJkLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BuZW9uZXZtL3NvbGFuYS1zaWduL2Rpc3QvZXNtL21vZGVscy9hcGkuanM/MmQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/models/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _account__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/account.js\");\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/api.js\");\n/* harmony import */ var _instruction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instruction */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/instruction.js\");\n/* harmony import */ var _token__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./token */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/token.js\");\n/* harmony import */ var _transaction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transaction */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/transaction.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQjtBQUNKO0FBQ1E7QUFDTjtBQUNNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwY2FyZC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AbmVvbmV2bS9zb2xhbmEtc2lnbi9kaXN0L2VzbS9tb2RlbHMvaW5kZXguanM/MWU0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2FjY291bnQnO1xuZXhwb3J0ICogZnJvbSAnLi9hcGknO1xuZXhwb3J0ICogZnJvbSAnLi9pbnN0cnVjdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL3Rva2VuJztcbmV4cG9ydCAqIGZyb20gJy4vdHJhbnNhY3Rpb24nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/instruction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/models/instruction.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL2luc3RydWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL2luc3RydWN0aW9uLmpzPzBhZWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/instruction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/token.js":
/*!********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/models/token.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL3Rva2VuLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL3Rva2VuLmpzPzVlM2EiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/transaction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/models/transaction.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbW9kZWxzL3RyYW5zYWN0aW9uLmpzPzVjYWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/neon/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GAS_LIMIT_DEFAULT: () => (/* reexport safe */ _transaction__WEBPACK_IMPORTED_MODULE_0__.GAS_LIMIT_DEFAULT),\n/* harmony export */   MAX_FEE_PER_GAS_DEFAULT: () => (/* reexport safe */ _transaction__WEBPACK_IMPORTED_MODULE_0__.MAX_FEE_PER_GAS_DEFAULT),\n/* harmony export */   MAX_PRIORITY_FEE_PER_GAS_DEFAULT: () => (/* reexport safe */ _transaction__WEBPACK_IMPORTED_MODULE_0__.MAX_PRIORITY_FEE_PER_GAS_DEFAULT),\n/* harmony export */   MultipleTransaction: () => (/* reexport safe */ _transaction__WEBPACK_IMPORTED_MODULE_0__.MultipleTransaction),\n/* harmony export */   MultipleTransactions: () => (/* reexport safe */ _transaction__WEBPACK_IMPORTED_MODULE_0__.MultipleTransactions),\n/* harmony export */   ScheduledTransaction: () => (/* reexport safe */ _transaction__WEBPACK_IMPORTED_MODULE_0__.ScheduledTransaction),\n/* harmony export */   getTransactionReceipt: () => (/* reexport safe */ _wallet__WEBPACK_IMPORTED_MODULE_1__.getTransactionReceipt),\n/* harmony export */   privateKeyFromWallet: () => (/* reexport safe */ _wallet__WEBPACK_IMPORTED_MODULE_1__.privateKeyFromWallet),\n/* harmony export */   signNeonTransaction: () => (/* reexport safe */ _wallet__WEBPACK_IMPORTED_MODULE_1__.signNeonTransaction)\n/* harmony export */ });\n/* harmony import */ var _transaction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transaction */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/transaction.js\");\n/* harmony import */ var _wallet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/wallet.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbmVvbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwY2FyZC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AbmVvbmV2bS9zb2xhbmEtc2lnbi9kaXN0L2VzbS9uZW9uL2luZGV4LmpzP2M1Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi90cmFuc2FjdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL3dhbGxldCc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/transaction.js":
/*!************************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/neon/transaction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GAS_LIMIT_DEFAULT: () => (/* binding */ GAS_LIMIT_DEFAULT),\n/* harmony export */   MAX_FEE_PER_GAS_DEFAULT: () => (/* binding */ MAX_FEE_PER_GAS_DEFAULT),\n/* harmony export */   MAX_PRIORITY_FEE_PER_GAS_DEFAULT: () => (/* binding */ MAX_PRIORITY_FEE_PER_GAS_DEFAULT),\n/* harmony export */   MultipleTransaction: () => (/* binding */ MultipleTransaction),\n/* harmony export */   MultipleTransactions: () => (/* binding */ MultipleTransactions),\n/* harmony export */   ScheduledTransaction: () => (/* binding */ ScheduledTransaction)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/utils/maths.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/utils/rlp-encode.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/crypto/keccak.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/utils/rlp-decode.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n\n\n/**\n * ScheduledTransaction is used to create a transaction that will be executed\n * @constructor {Partial<ScheduledTransactionData>} data - The data required to create a ScheduledTransaction.\n * @constructor {string} data.from - The address of the account that will pay for the transaction.\n * @constructor {string} data.sender - The address of the account that will send the transaction.\n * @constructor {number} data.nonce - The nonce counter of the transaction.\n * @constructor {number} data.index - The index of the transaction.\n * @constructor {string} data.intent - The intent of the transaction.\n * @constructor {string} data.intentCallData - The call data of the intent.\n * @constructor {string} data.to - The target address of the transaction (contract address or destination account address).\n * @constructor {string} data.data - The call data of the transaction.\n * @constructor {number} data.value - The value of the transaction.\n * @constructor {number} data.chainId - The chain ID of the transaction.\n * @constructor {number} data.gasLimit - The gas limit of the transaction.\n * @constructor {number} data.maxFeePerGas - The maximum fee per gas of the transaction.\n * @constructor {number} data.maxPriorityFeePerGas - The maximum fee to increase the priority of the transaction.\n * @constructor {string} data.hash - The hash of the transaction.\n * @return {ScheduledTransaction} - The ScheduledTransaction object.\n * @example\n * ```typescript\n * const transaction = new ScheduledTransaction({\n *  nonce: 1,\n *  from: \"0xSenderAddress\",\n *  to: \"0xTargetAddress\",\n *  data: \"0xCallData\",\n *  chainId: 245022927\n *  });\n *  ```\n */\nconst GAS_LIMIT_DEFAULT = 5e4;\nconst MAX_FEE_PER_GAS_DEFAULT = 1250000001;\nconst MAX_PRIORITY_FEE_PER_GAS_DEFAULT = 1250000000;\nclass ScheduledTransaction {\n    type = 0x7F;\n    neonSubType = 0x01;\n    data;\n    defaultData = {\n        value: '0x',\n        chainId: (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(245022927 /* NeonChainId.devnetSol */),\n        gasLimit: (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(GAS_LIMIT_DEFAULT),\n        maxFeePerGas: (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(MAX_FEE_PER_GAS_DEFAULT),\n        maxPriorityFeePerGas: (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(MAX_PRIORITY_FEE_PER_GAS_DEFAULT)\n    };\n    /**\n     * Encode the ScheduledTransaction object into a RLP array string.\n     */\n    encode() {\n        const result = [];\n        for (const key of ScheduledTransaction.keys) {\n            // @ts-ignore\n            result.push(this.data[key]);\n        }\n        return (0,ethers__WEBPACK_IMPORTED_MODULE_2__.encodeRlp)(result);\n    }\n    /**\n     * Get the hash of the serialized ScheduledTransaction object.\n     * This hash is used to identify the transaction.\n     */\n    hash() {\n        return (0,ethers__WEBPACK_IMPORTED_MODULE_3__.keccak256)(`0x${this.serialize()}`);\n    }\n    /**\n     * Serialize the ScheduledTransaction object into a hex string.\n     */\n    serialize() {\n        const type = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.numberToBuffer)(this.type);\n        const subType = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.numberToBuffer)(this.neonSubType);\n        const encode = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBuffer)(this.encode());\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.bufferConcat)([type, subType, encode]).toString('hex');\n    }\n    /**\n     * Serialize and return the node as bytes with the following layout:\n     * - gasLimit: 32 bytes\n     * - value: 32 bytes\n     * - childIndex: 2 bytes\n     * - successLimit: 2 bytes\n     * - trxHash: 32 bytes\n     * @param {number} childIndex - The index of dependent transactions that must be executed\n     * before this one. Use the constant `NO_CHILD_INDEX` if there are no dependencies.\n     * @param {number} successLimit - The number of successful preceding transactions required before this one can\n     * @return {Buffer} - The serialized node as a buffer.\n     */\n    serializedNode(childIndex, successLimit) {\n        const gasLimit = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toBytes64BE)(BigInt(this.data.gasLimit), 32, 24);\n        const value = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toBytes64BE)(BigInt(this.data.value == '0x' ? 0 : this.data.value), 32, 24);\n        const index = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toBytes16LE)(childIndex, 2);\n        const success = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toBytes16LE)(successLimit, 2);\n        const hash = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBuffer)(this.hash());\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.bufferConcat)([gasLimit, value, index, success, hash]);\n    }\n    feeEstimateData() {\n        const { from, to, data } = this.data;\n        return { from, to, data };\n    }\n    setGasPrice({ gasLimit, maxFeePerGas, maxPriorityFeePerGas }) {\n        const data = { ...this.data };\n        if (gasLimit) {\n            data.gasLimit = GAS_LIMIT_DEFAULT > gasLimit ? (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(GAS_LIMIT_DEFAULT) : (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(gasLimit);\n        }\n        if (maxFeePerGas) {\n            data.maxFeePerGas = MAX_FEE_PER_GAS_DEFAULT > maxFeePerGas ?\n                (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(MAX_FEE_PER_GAS_DEFAULT) : (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(maxFeePerGas);\n        }\n        if (maxPriorityFeePerGas) {\n            data.maxPriorityFeePerGas = MAX_PRIORITY_FEE_PER_GAS_DEFAULT > maxPriorityFeePerGas ?\n                (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(MAX_PRIORITY_FEE_PER_GAS_DEFAULT) : (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(maxPriorityFeePerGas);\n        }\n        this.data = data;\n    }\n    constructor(data) {\n        this.data = {};\n        for (const key of ScheduledTransaction.keys) {\n            // @ts-ignore\n            this.data[key] = data.hasOwnProperty(key) ? this.convertData(data[key]) :\n                // @ts-ignore\n                this.defaultData.hasOwnProperty(key) ? this.defaultData[key] : '0x';\n        }\n    }\n    static keys = [\n        'from', 'sender', 'nonce', 'index', 'intent', 'intentCallData', 'to',\n        'data', 'value', 'chainId', 'gasLimit', 'maxFeePerGas', 'maxPriorityFeePerGas'\n    ];\n    convertData(data) {\n        const result = '0x';\n        if (typeof data === 'string' && data.length > 0 && data.startsWith('0x')) {\n            return data;\n        }\n        else if (typeof data === 'number' && data > 0) {\n            return (0,ethers__WEBPACK_IMPORTED_MODULE_1__.toBeHex)(data);\n        }\n        else if (Buffer.isBuffer(data)) {\n            return `0x${data.toString('hex')}`;\n        }\n        return result;\n    }\n    /**\n     * Decode a RLP array string into a ScheduledTransaction object.\n     */\n    static from(items) {\n        const model = {};\n        for (const [i, key] of ScheduledTransaction.keys.entries()) {\n            // @ts-ignore\n            model[key] = items[i];\n        }\n        return new ScheduledTransaction(model);\n    }\n    /**\n     * Decode a RLP string into a ScheduledTransaction object.\n     */\n    static decodeFrom(data) {\n        const items = (0,ethers__WEBPACK_IMPORTED_MODULE_4__.decodeRlp)(data);\n        const model = {};\n        for (const [i, key] of ScheduledTransaction.keys.entries()) {\n            // @ts-ignore\n            model[key] = items[i];\n        }\n        return new ScheduledTransaction(model);\n    }\n    /**\n     * Decode a RLP string into a RlpStructuredData object.\n     */\n    static decodeRpl(data) {\n        return (0,ethers__WEBPACK_IMPORTED_MODULE_4__.decodeRlp)(data);\n    }\n}\n/**\n * MultipleTransaction is used to create a list of transactions that will be executed in a specific order.\n * @constructor {number} nonce - The nonce of the transaction.\n * @constructor {number} maxFeePerGas - The maximum transaction fee (must match the fee of ScheduleTransaction).\n * @constructor {number} maxPriorityFeePerGas - The maximum fee to increase the priority of the transaction.\n */\nclass MultipleTransaction {\n    nonce;\n    maxFeePerGas;\n    maxPriorityFeePerGas;\n    _data;\n    /*\n    * @return {HexString} Converts MultipleTransactions to a hex string.\n    * */\n    get data() {\n        return `0x${this._data.toString('hex')}`;\n    }\n    hash() {\n        return (0,ethers__WEBPACK_IMPORTED_MODULE_3__.keccak256)(this.data);\n    }\n    /**\n     * Adds a ScheduledTransaction to the list of multiple transactions.\n     * @param {ScheduledTransaction} transaction - The Scheduled transaction object.\n     * @param {number} childIndex - The index of dependent transactions that must be executed before this one. Use the constant `NO_CHILD_INDEX` if there are no dependencies.\n     * @param {number} successLimit - The number of successful preceding transactions required before this one can be executed.\n     * @return void;\n     **/\n    addTransaction(transaction, childIndex, successLimit) {\n        this._data = Buffer.concat([this._data, transaction.serializedNode(childIndex, successLimit)]);\n    }\n    constructor(nonce, maxFeePerGas = MAX_FEE_PER_GAS_DEFAULT, maxPriorityFeePerGas = MAX_PRIORITY_FEE_PER_GAS_DEFAULT) {\n        this.nonce = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toBytes64BE)(nonce, 8);\n        this.maxFeePerGas = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toBytes64BE)(maxFeePerGas, 32, 24);\n        this.maxPriorityFeePerGas = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toBytes64BE)(maxPriorityFeePerGas, 32, 24);\n        this._data = Buffer.concat([this.nonce, this.maxFeePerGas, this.maxPriorityFeePerGas]);\n    }\n}\n/**\n* MultipleTransactions is used to create a list of transactions that will be executed in a specific order.\n* */\nconst MultipleTransactions = MultipleTransaction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/wallet.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/neon/wallet.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTransactionReceipt: () => (/* binding */ getTransactionReceipt),\n/* harmony export */   privateKeyFromWallet: () => (/* binding */ privateKeyFromWallet),\n/* harmony export */   signNeonTransaction: () => (/* binding */ signNeonTransaction)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/crypto/keccak.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/wallet/wallet.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n\n\nfunction privateKeyFromWallet(solanaWallet, neonWallet) {\n    return (0,ethers__WEBPACK_IMPORTED_MODULE_1__.keccak256)(Buffer.from(`${neonWallet.slice(2)}${solanaWallet.toBase58()}`, 'utf-8'));\n}\nfunction getTransactionReceipt(provider, transactionHash) {\n    return provider.waitForTransaction(transactionHash);\n}\nasync function signNeonTransaction(provider, solanaWallet, neonWallet, transaction) {\n    try {\n        const privateKey = privateKeyFromWallet(solanaWallet.publicKey, neonWallet.address);\n        const walletSigner = new ethers__WEBPACK_IMPORTED_MODULE_2__.Wallet(privateKey, provider);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_0__.log)(privateKey, walletSigner);\n        const result = await walletSigner.signTransaction(transaction);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_0__.log)(result);\n        return result;\n    }\n    catch (e) {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_0__.log)(e);\n    }\n    return ``;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vbmVvbi93YWxsZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBQ1o7QUFDeEI7QUFDUCxXQUFXLGlEQUFTLGdCQUFnQixvQkFBb0IsRUFBRSx3QkFBd0I7QUFDbEY7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxpQ0FBaUMsMENBQU07QUFDdkMsUUFBUSwyQ0FBRztBQUNYO0FBQ0EsUUFBUSwyQ0FBRztBQUNYO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMkNBQUc7QUFDWDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBjYXJkLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BuZW9uZXZtL3NvbGFuYS1zaWduL2Rpc3QvZXNtL25lb24vd2FsbGV0LmpzP2VhNmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2VjY2FrMjU2LCBXYWxsZXQgfSBmcm9tICdldGhlcnMnO1xuaW1wb3J0IHsgbG9nIH0gZnJvbSAnLi4vdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHByaXZhdGVLZXlGcm9tV2FsbGV0KHNvbGFuYVdhbGxldCwgbmVvbldhbGxldCkge1xuICAgIHJldHVybiBrZWNjYWsyNTYoQnVmZmVyLmZyb20oYCR7bmVvbldhbGxldC5zbGljZSgyKX0ke3NvbGFuYVdhbGxldC50b0Jhc2U1OCgpfWAsICd1dGYtOCcpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2FjdGlvblJlY2VpcHQocHJvdmlkZXIsIHRyYW5zYWN0aW9uSGFzaCkge1xuICAgIHJldHVybiBwcm92aWRlci53YWl0Rm9yVHJhbnNhY3Rpb24odHJhbnNhY3Rpb25IYXNoKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduTmVvblRyYW5zYWN0aW9uKHByb3ZpZGVyLCBzb2xhbmFXYWxsZXQsIG5lb25XYWxsZXQsIHRyYW5zYWN0aW9uKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcHJpdmF0ZUtleSA9IHByaXZhdGVLZXlGcm9tV2FsbGV0KHNvbGFuYVdhbGxldC5wdWJsaWNLZXksIG5lb25XYWxsZXQuYWRkcmVzcyk7XG4gICAgICAgIGNvbnN0IHdhbGxldFNpZ25lciA9IG5ldyBXYWxsZXQocHJpdmF0ZUtleSwgcHJvdmlkZXIpO1xuICAgICAgICBsb2cocHJpdmF0ZUtleSwgd2FsbGV0U2lnbmVyKTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgd2FsbGV0U2lnbmVyLnNpZ25UcmFuc2FjdGlvbih0cmFuc2FjdGlvbik7XG4gICAgICAgIGxvZyhyZXN1bHQpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBsb2coZSk7XG4gICAgfVxuICAgIHJldHVybiBgYDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/account.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/solana/account.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SolanaNeonAccount: () => (/* binding */ SolanaNeonAccount),\n/* harmony export */   TreasuryPoolAddress: () => (/* binding */ TreasuryPoolAddress),\n/* harmony export */   authAccountAddress: () => (/* binding */ authAccountAddress),\n/* harmony export */   balanceAccountNonce: () => (/* binding */ balanceAccountNonce),\n/* harmony export */   holderAddressWithSeed: () => (/* binding */ holderAddressWithSeed),\n/* harmony export */   neonAuthorityPoolAddressSync: () => (/* binding */ neonAuthorityPoolAddressSync),\n/* harmony export */   neonBalanceProgramAddressSync: () => (/* binding */ neonBalanceProgramAddressSync),\n/* harmony export */   neonTreeAccountAddressSync: () => (/* binding */ neonTreeAccountAddressSync),\n/* harmony export */   neonWalletProgramAddress: () => (/* binding */ neonWalletProgramAddress),\n/* harmony export */   solanaToNeonAddress: () => (/* binding */ solanaToNeonAddress),\n/* harmony export */   treasuryPoolAddressSync: () => (/* binding */ treasuryPoolAddressSync)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/utils/data.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/crypto/keccak.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/layout.js\");\n/* harmony import */ var _transactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transactions */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/transactions.js\");\n\n\n\n\n\n/**\n * Derives a synchronous Treasury Pool address for the given Neon EVM program and pool index.\n *\n * This function computes a **program-derived address (PDA)** for a specific **treasury pool**\n * using a predefined seed (`\"treasury_pool\"`) and the provided pool index.\n * The resulting address is used to manage Neon EVM's treasury pools within Solana.\n *\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {number} treasuryPoolIndex - The index of the treasury pool.\n * @returns {[PublicKey, number]} A tuple containing:\n *   - `PublicKey`: The derived treasury pool address.\n *   - `number`: The bump seed used in PDA derivation.\n *\n * @example\n * ```typescript\n * const [poolAddress, bump] = treasuryPoolAddressSync(neonEvmProgram, 3);\n * console.log(\"Treasury Pool Address:\", poolAddress.toBase58());\n * ```\n */\nfunction treasuryPoolAddressSync(neonEvmProgram, treasuryPoolIndex) {\n    const a = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBuffer)('treasury_pool');\n    const b = Buffer.from((0,_utils__WEBPACK_IMPORTED_MODULE_1__.toBytesInt32)(treasuryPoolIndex));\n    return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddressSync([a, b], neonEvmProgram);\n}\n/**\n * Derives a synchronous Neon balance program address for a given Neon wallet and chain ID.\n *\n * This function computes a **program-derived address (PDA)** for a specific **Neon balance account**,\n * The derivation is based on the **Neon wallet address**, **Neon EVM program**, and **chain ID**,\n * ensuring a unique balance account per chain.\n *\n * @param {NeonAddress} neonWallet - The Ethereum-style Neon wallet address in hexadecimal format.\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {number} chainId - The chain ID associated with the Neon network.\n * @returns {[PublicKey, number]} A tuple containing:\n *   - `PublicKey`: The derived balance program address.\n *   - `number`: The bump seed used in PDA derivation.\n *\n * @example\n * ```typescript\n * const [balanceAddress, bump] = neonBalanceProgramAddressSync(\"0x1234567890abcdef1234567890abcdef12345678\", neonEvmProgram, 245022926);\n * console.log(\"Neon Balance Address:\", balanceAddress.toBase58());\n * ```\n */\nfunction neonBalanceProgramAddressSync(neonWallet, neonEvmProgram, chainId) {\n    const neonWalletBuffer = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBuffer)(neonWallet);\n    const chainIdBytes = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toU256BE)(BigInt(chainId)); //chain_id as u256be\n    const seed = [(0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(3 /* AccountSeedTag.SeedVersion */), neonWalletBuffer, chainIdBytes];\n    return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddressSync(seed, neonEvmProgram);\n}\n/**\n * Derives a synchronous Neon authority pool address for the given Neon EVM program.\n *\n * This function computes a **program-derived address (PDA)** for the **authority pool**,\n * which is responsible for managing deposits within the Neon EVM on Solana. The derivation\n * is based on a predefined seed (`\"Deposit\"`) to ensure a unique and consistent authority pool address.\n *\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @returns {[PublicKey, number]} A tuple containing:\n *   - `PublicKey`: The derived authority pool address.\n *   - `number`: The bump seed used in PDA derivation.\n *\n * @example\n * ```typescript\n * const [authorityPoolAddress, bump] = neonAuthorityPoolAddressSync(neonEvmProgram);\n * console.log(\"Neon Authority Pool Address:\", authorityPoolAddress.toBase58());\n * ```\n */\nfunction neonAuthorityPoolAddressSync(neonEvmProgram) {\n    const seed = [(0,_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBuffer)('Deposit')];\n    return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddressSync(seed, neonEvmProgram);\n}\n/**\n * Derives a synchronous Neon tree account address for the given Neon wallet, EVM program, chain ID, and nonce.\n *\n * This function computes a **program-derived address (PDA)** for a **tree account** within the Neon EVM.\n * The address derivation is based on multiple seed components:\n * - **Seed version**: Ensures compatibility with account derivation logic.\n * - **Tag (`\"TREE\"`)**: Identifies this PDA as a tree account.\n * - **Neon wallet address**: The Ethereum-style address corresponding to the Solana wallet.\n * - **Chain ID**: Differentiates accounts across different Neon chains.\n * - **Nonce**:  The last scheduled nonce for Solana user\n *\n * @param {NeonAddress} neonWallet - The Ethereum-style Neon wallet address in hexadecimal format.\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {number} chainId - The chain ID associated with the Neon network.\n * @param {number} nonce - A unique identifier is required to validate the address of the TreeAccount.\n * @returns {[PublicKey, number]} A tuple containing:\n *   - `PublicKey`: The derived tree account address.\n *   - `number`: The bump seed used in PDA derivation.\n *\n * @example\n * ```typescript\n * const [treeAccount, bump] = neonTreeAccountAddressSync(\n *   \"0x1234567890abcdef1234567890abcdef12345678\",\n *   neonEvmProgram,\n *   245022926,\n *   1\n * );\n * console.log(\"Neon Tree Account Address:\", treeAccount.toBase58());\n * ```\n */\nfunction neonTreeAccountAddressSync(neonWallet, neonEvmProgram, chainId, nonce) {\n    const version = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(3 /* AccountSeedTag.SeedVersion */);\n    const tag = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBuffer)('TREE');\n    const address = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBuffer)(neonWallet);\n    const _chainId = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toBytes64LE)(chainId, 8);\n    const _nonce = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toBytes64LE)(nonce, 8);\n    const seed = [version, tag, address, _chainId, _nonce];\n    return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddressSync(seed, neonEvmProgram);\n}\n/**\n * Derives a synchronous Neon wallet program address for a given Neon wallet.\n *\n * This function computes a **program-derived address (PDA)** for a **Neon wallet** within the Neon EVM.\n * The PDA is generated based on:\n * - **Seed version**: Ensures compatibility with account derivation logic.\n * - **Neon wallet address**: The Ethereum-style wallet address used within Neon EVM.\n *\n * @param {NeonAddress} neonWallet - The Ethereum-style Neon wallet address in hexadecimal format.\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @returns {[PublicKey, number]} A tuple containing:\n *   - `PublicKey`: The derived Neon wallet program address.\n *   - `number`: The bump seed used in PDA derivation.\n *\n * @example\n * ```typescript\n * const [walletPDA, bump] = neonWalletProgramAddress(\n *   \"0x1234567890abcdef1234567890abcdef12345678\",\n *   neonEvmProgram\n * );\n * console.log(\"Neon Wallet PDA:\", walletPDA.toBase58());\n * ```\n */\nfunction neonWalletProgramAddress(neonWallet, neonEvmProgram) {\n    const seeds = [(0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(3 /* AccountSeedTag.SeedVersion */), (0,_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBuffer)(neonWallet)];\n    return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddressSync(seeds, neonEvmProgram);\n}\n/**\n * Retrieves the nonce value from a Neon wallet balance account.\n *\n * This function fetches the **Neon wallet balance account** from the Solana blockchain\n * and extracts its **nonce** value. The nonce is used in transaction processing to\n * ensure uniqueness.\n *\n * @param {Connection} connection - The Solana connection object used for querying account data.\n * @param {NeonAddress} neonWallet - The Ethereum-style Neon wallet address in hexadecimal format.\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {number} chainId - The chain ID associated with the Neon network.\n * @returns {Promise<bigint>} A promise resolving to the nonce value, or `0n` if the balance account does not exist.\n *\n * @example\n * ```typescript\n * const [balanceAddress, nonce] = await balanceAccountNonce(connection, \"0x1234567890abcdef1234567890abcdef12345678\", neonEvmProgram, 245022926);\n * console.log(\"Balance Account Nonce:\", nonce);\n * ```\n */\nasync function balanceAccountNonce(connection, neonWallet, neonEvmProgram, chainId) {\n    const [neonWalletBalanceAddress] = neonBalanceProgramAddressSync(neonWallet, neonEvmProgram, chainId);\n    const neonWalletBalanceAccount = await connection.getAccountInfo(neonWalletBalanceAddress);\n    if (neonWalletBalanceAccount) {\n        const balanceAccountLayout = _layout__WEBPACK_IMPORTED_MODULE_2__.BalanceAccountLayout.decode(neonWalletBalanceAccount.data);\n        return [neonWalletBalanceAddress, balanceAccountLayout.nonce];\n    }\n    return [neonWalletBalanceAddress, 0];\n}\n/**\n * Generates a program-derived holder address using a randomly generated seed.\n *\n * This function creates a **program-derived address (PDA)** for a **holder account** associated with a given Solana wallet.\n * A random numeric seed is generated and used to derive the address with `PublicKey.createWithSeed()`.\n *\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {PublicKey} solanaWallet - The Solana wallet public key that owns the holder account.\n * @returns {Promise<[PublicKey, string]>} A promise resolving to a tuple containing:\n *   - `PublicKey`: The derived holder account address.\n *   - `string`: The random seed used to generate the address.\n *\n * @example\n * ```typescript\n * const [holderAddress, seed] = await holderAddressWithSeed(neonEvmProgram, solanaWallet);\n * console.log(\"Holder Address:\", holderAddress.toBase58());\n * console.log(\"Seed Used:\", seed);\n * ```\n */\nasync function holderAddressWithSeed(neonEvmProgram, solanaWallet) {\n    const seed = Math.floor(Math.random() * 1e12).toString();\n    const holder = await _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.createWithSeed(solanaWallet, seed, neonEvmProgram);\n    return [holder, seed];\n}\nfunction authAccountAddress(neonEvmProgram, neonWallet, tokenAddress) {\n    const neonAccountAddressBytes = Buffer.concat([Buffer.alloc(12), Buffer.from((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isValidHex)(neonWallet) ? neonWallet.replace(/^0x/i, '') : neonWallet, 'hex')]);\n    const neonContractAddressBytes = Buffer.from((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isValidHex)(tokenAddress) ? tokenAddress.replace(/^0x/i, '') : tokenAddress, 'hex');\n    const seed = [\n        new Uint8Array([3 /* AccountSeedTag.SeedVersion */]),\n        new Uint8Array(Buffer.from('AUTH', 'utf-8')),\n        new Uint8Array(neonContractAddressBytes),\n        new Uint8Array(neonAccountAddressBytes)\n    ];\n    return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddressSync(seed, neonEvmProgram);\n}\n/**\n * Converts a Solana public key into a Neon EVM-compatible address.\n *\n * This function generates an Ethereum-style Neon wallet address from a given Solana `PublicKey`.\n * It applies the `keccak256` hash function to the Solana public key bytes and extracts\n * the last 20 bytes (12 to 32) to create a valid **Neon EVM address**.\n *\n * @param {PublicKey} publicKey - The Solana public key to be converted.\n * @returns {NeonAddress} A 20-byte Ethereum-style Neon wallet address.\n *\n * @example\n * ```typescript\n * const solanaPubKey = new PublicKey(\"8ab7...a1b3\");\n * const neonAddress = solanaToNeonAddress(solanaPubKey);\n * console.log(\"Neon Address:\", neonAddress); // 0x...\n * ```\n */\nfunction solanaToNeonAddress(publicKey) {\n    return (0,ethers__WEBPACK_IMPORTED_MODULE_4__.dataSlice)((0,ethers__WEBPACK_IMPORTED_MODULE_5__.keccak256)(publicKey.toBytes()), 12, 32);\n}\n/**\n * Represents a **Treasury Pool Address** within the Neon EVM ecosystem.\n *\n * This class is responsible for managing a specific **treasury pool** account.\n * It provides utilities for deriving, retrieving, and representing treasury pool addresses.\n */\nclass TreasuryPoolAddress {\n    /** The index of the treasury pool. */\n    index;\n    /** The derived public key representing the treasury pool address. */\n    publicKey;\n    /**\n     * Retrieves the buffer representation of the treasury pool index.\n     *\n     * This buffer is typically used as a seed for PDA derivation.\n     *\n     * @returns {Buffer} A buffer representation of the treasury pool index.\n     *\n     * @example\n     * ```typescript\n     * const treasuryPool = new TreasuryPoolAddress(somePublicKey, 3);\n     * console.log(\"Index Buffer:\", treasuryPool.buffer);\n     * ```\n     */\n    get buffer() {\n        return Buffer.from((0,_utils__WEBPACK_IMPORTED_MODULE_1__.toBytesInt32)(this.index));\n    }\n    /**\n     * Finds and returns a random **Treasury Pool Address** from the available pool count.\n     *\n     * This method selects a random **pool index** and derives the associated **public key**\n     * using `treasuryPoolAddressSync()`.\n     *\n     * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n     * @param {number} count - The total number of treasury pools available.\n     * @returns {TreasuryPoolAddress} A `TreasuryPoolAddress` instance representing the derived treasury pool.\n     *\n     * @example\n     * ```typescript\n     * const treasuryPool = TreasuryPoolAddress.find(neonEvmProgram, 10);\n     * console.log(\"Treasury Pool Address:\", treasuryPool.publicKey.toBase58());\n     * console.log(\"Treasury Pool Index:\", treasuryPool.index);\n     * ```\n     */\n    static find(neonEvmProgram, count) {\n        const index = Math.floor(Math.random() * count) % count;\n        const publicKey = treasuryPoolAddressSync(neonEvmProgram, index)[0];\n        return new TreasuryPoolAddress(publicKey, index);\n    }\n    /**\n     * Creates an instance of `TreasuryPoolAddress`.\n     *\n     * @param {PublicKey} publicKey - The derived public key representing the treasury pool.\n     * @param {number} index - The index of the treasury pool.\n     *\n     * @example\n     * ```typescript\n     * const treasuryPool = new TreasuryPoolAddress(somePublicKey, 5);\n     * ```\n     */\n    constructor(publicKey, index) {\n        this.publicKey = publicKey;\n        this.index = index;\n    }\n}\n/**\n * Represents a Solana account associated with a Neon EVM wallet.\n *\n * This class provides utilities for managing a Solana account that interacts with the Neon EVM.\n * It includes methods for retrieving balance addresses, handling key pairs, signing transactions,\n * and creating balance accounts if they do not exist.\n */\nclass SolanaNeonAccount {\n    /** The Ethereum-style Neon wallet address derived from the Solana address. */\n    neonWallet;\n    /** The public key of the Solana account. */\n    publicKey;\n    /** The public key of the Neon EVM program. */\n    neonEvmProgram;\n    /** The public key of the token mint associated with the account. */\n    tokenMint;\n    /** The Neon EVM chain ID. */\n    chainId;\n    /** The optional keypair for signing transactions (if available). */\n    _keypair;\n    /**\n     * Retrieves the balance program address for the Neon wallet.\n     *\n     * @returns {PublicKey} The derived public key of the balance account.\n     */\n    get balanceAddress() {\n        return neonBalanceProgramAddressSync(this.neonWallet, this.neonEvmProgram, this.chainId)[0];\n    }\n    /**\n     * Retrieves the associated keypair, if initialized.\n     *\n     * @throws {Error} If the keypair is not initialized.\n     * @returns {Keypair} The keypair instance.\n     */\n    get keypair() {\n        if (!this._keypair) {\n            throw new Error(`Keypair isn't initialized`);\n        }\n        return this._keypair;\n    }\n    /**\n     * Retrieves the signer object from the keypair.\n     *\n     * @returns {Signer | null} A `Signer` object if the keypair exists, otherwise `null`.\n     */\n    get signer() {\n        if (this._keypair) {\n            return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toSigner)(this._keypair);\n        }\n        return null;\n    }\n    /**\n     * Extracts the nonce from a given account's balance data.\n     *\n     * @param {AccountInfo<Buffer>} account - The Solana account information.\n     * @returns {number} The extracted nonce, or `0` if the account is not provided.\n     */\n    nonce(account) {\n        if (account) {\n            // @ts-ignore\n            const layout = _layout__WEBPACK_IMPORTED_MODULE_2__.BalanceAccountLayout.decode(account.data);\n            return Number(layout.nonce);\n        }\n        return 0;\n    }\n    /**\n     * Ensures the balance account exists, and if not, attempts to create it.\n     *\n     * If the account does not exist and a valid signer is available, a transaction is\n     * created and signed to create the balance account.\n     *\n     * @param {Connection} connection - The Solana connection object.\n     * @returns {Promise<AccountInfo<Buffer> | null>} The balance account information if successful, otherwise `null`.\n     */\n    async balanceAccountCreate(connection) {\n        let account = await connection.getAccountInfo(this.balanceAddress);\n        if (account === null && this.signer) {\n            const transaction = (0,_transactions__WEBPACK_IMPORTED_MODULE_3__.createBalanceAccountTransaction)(this.neonEvmProgram, this.publicKey, this.neonWallet, this.chainId);\n            const { blockhash, lastValidBlockHeight } = await connection.getLatestBlockhash('confirmed');\n            transaction.feePayer = this.publicKey;\n            transaction.recentBlockhash = blockhash;\n            transaction.sign(this.signer);\n            const signature = await connection.sendRawTransaction(transaction.serialize());\n            await connection.confirmTransaction({ signature, lastValidBlockHeight, blockhash }, 'finalized');\n            account = await connection.getAccountInfo(this.balanceAddress);\n            if (account) {\n                console.log(_layout__WEBPACK_IMPORTED_MODULE_2__.BalanceAccountLayout.decode(account.data));\n            }\n        }\n        return account;\n    }\n    /**\n     * Creates a `SolanaNeonAccount` instance from a keypair.\n     *\n     * This method generates a new account using the given keypair and required parameters.\n     *\n     * @param {Keypair} keypair - The Solana keypair.\n     * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n     * @param {PublicKey} mint - The token mint associated with the account.\n     * @param {number} chainId - The chain ID for Neon EVM.\n     * @returns {SolanaNeonAccount} A new instance of `SolanaNeonAccount`.\n     *\n     * @example\n     * ```typescript\n     * const gasToken = tokenList.find(i => parseInt(i.tokenChainId, 16) === chainId);\n     * const mint = new PublicKey(gasToken.tokenMint);\n     * const account = SolanaNeonAccount.fromKeypair(keypair, neonEvmProgram, mint, chainId);\n     * console.log(\"Created Neon Account:\", account);\n     * ```\n     */\n    static fromKeypair(keypair, neonEvmProgram, mint, chainId) {\n        return new SolanaNeonAccount(keypair.publicKey, neonEvmProgram, mint, chainId, keypair);\n    }\n    /**\n     * Creates a `SolanaNeonAccount` instance.\n     *\n     * @param {PublicKey} solanaAddress - The Solana public key associated with the account.\n     * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n     * @param {PublicKey} mint - The token mint associated with the account.\n     * @param {number} chainId - The chain ID for Neon EVM.\n     * @param {Keypair} [keypair] - Optional keypair for signing transactions.\n     */\n    constructor(solanaAddress, neonEvmProgram, mint, chainId, keypair) {\n        this.publicKey = solanaAddress;\n        this.neonEvmProgram = neonEvmProgram;\n        this.tokenMint = mint;\n        this.chainId = chainId;\n        this.neonWallet = solanaToNeonAddress(this.publicKey);\n        if (keypair instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair) {\n            this._keypair = keypair;\n        }\n    }\n}\n/**\n * Represents a **Tree Account** for transactions in the Neon EVM ecosystem.\n *\n * This class encapsulates details of a transaction related to a **Tree Account**,\n * including its status, transaction hash, gas limit, execution results, and hierarchical structure.\n */\nclass TreeAccountTransaction {\n    /** The execution status of the transaction (`success`, `failed`, `skipped`, `in processing`, `not started`). */\n    status;\n    /** The hash of the transaction execution result. */\n    resultHash;\n    /** The unique hash of scheduled Neon transaction. */\n    transactionHash;\n    /** The gas limit allocated for executing of all scheduled transactions. */\n    gasLimit;\n    /** The value transferred in the transaction. */\n    value;\n    /** The index of a child scheduled Neon transaction, the parentCount of which should be decreased by 1 on completing the current transaction **/\n    childTransaction;\n    /** The number of success parent Neon transactions, to start the execution **/\n    successExecuteLimit;\n    /**  The number of the not-processed parent Neon transactions **/\n    parentCount;\n    /**\n     * Determines if the transaction was successfully executed.\n     *\n     * @returns {boolean} `true` if the transaction was successful, otherwise `false`.\n     */\n    get isSuccessful() {\n        return this.status === 'Success';\n    }\n    /**\n     * Determines if the transaction execution has failed.\n     *\n     * @returns {boolean} `true` if the transaction failed, otherwise `false`.\n     */\n    get isFailed() {\n        return this.status === 'Failed';\n    }\n    /**\n     * Creates a `TreeAccountTransaction` instance.\n     *\n     * @param {TreeAccountTransactionData} data - The transaction data object.\n     *\n     * @example\n     * ```typescript\n     * const transaction = new TreeAccountTransaction({\n     *   status: \"Success\",\n     *   result_hash: \"0xabc...\",\n     *   transaction_hash: \"0x123...\",\n     *   gas_limit: 1e5,\n     *   child_transaction: 2,\n     *   success_execute_limit: 5,\n     *   parent_count: 1\n     * });\n     * ```\n     */\n    constructor(data) {\n        this.status = data.status;\n        this.resultHash = data.result_hash;\n        this.transactionHash = data.transaction_hash;\n        this.gasLimit = data.gas_limit;\n        this.value = data.value;\n        this.childTransaction = data.child_transaction;\n        this.successExecuteLimit = data.success_execute_limit;\n        this.parentCount = data.parent_count;\n    }\n    /**\n     * Creates a new `TreeAccountTransaction` instance from a plain object.\n     *\n     * @param {TreeAccountTransactionData} data - The raw transaction data object.\n     * @returns {TreeAccountTransaction} A new instance populated with the provided data.\n     */\n    static fromObject(data) {\n        return new TreeAccountTransaction(data);\n    }\n}\n/**\n * Represents a **Tree Account** within the Neon EVM ecosystem.\n *\n * A `TreeAccount` is a structured representation of a blockchain account that maintains\n * transaction history, gas fees, balance, and execution status. It also provides utility\n * methods to analyze transaction statuses.\n */\nclass TreeAccount {\n    result;\n    status;\n    pubkey;\n    payer;\n    lastSlot;\n    chainId;\n    maxFeePerGas;\n    maxPriorityFeePerGas;\n    balance;\n    lastIndex;\n    transactions;\n    get count() {\n        return this.transactions.length;\n    }\n    get statuses() {\n        return Object.fromEntries(this.transactions.map(tx => [tx.transactionHash, tx.status]));\n    }\n    get isAllSuccessful() {\n        return this.transactions.every(tx => tx.isSuccessful);\n    }\n    constructor(data) {\n        const value = data.value;\n        this.result = data.result;\n        this.status = value.status;\n        this.pubkey = value.pubkey;\n        this.payer = value.payer;\n        this.lastSlot = value.last_slot;\n        this.chainId = value.chain_id;\n        this.maxFeePerGas = value.max_fee_per_gas;\n        this.maxPriorityFeePerGas = value.max_priority_fee_per_gas;\n        this.balance = parseInt(value.balance, 16);\n        this.lastIndex = value.last_index;\n        this.transactions = value.transactions.map(TreeAccountTransaction.fromObject);\n    }\n    static fromObject(data) {\n        return new TreeAccount(data);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/solana/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BalanceAccountLayout: () => (/* reexport safe */ _layout__WEBPACK_IMPORTED_MODULE_2__.BalanceAccountLayout),\n/* harmony export */   SolanaNeonAccount: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.SolanaNeonAccount),\n/* harmony export */   TreasuryPoolAddress: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.TreasuryPoolAddress),\n/* harmony export */   authAccountAddress: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.authAccountAddress),\n/* harmony export */   balanceAccountNonce: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.balanceAccountNonce),\n/* harmony export */   createAccountWithSeedInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.createAccountWithSeedInstruction),\n/* harmony export */   createBalanceAccountInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.createBalanceAccountInstruction),\n/* harmony export */   createBalanceAccountTransaction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createBalanceAccountTransaction),\n/* harmony export */   createHolderAccountInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.createHolderAccountInstruction),\n/* harmony export */   createHolderAccountTransaction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createHolderAccountTransaction),\n/* harmony export */   createMultipleTransactionDependLast: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createMultipleTransactionDependLast),\n/* harmony export */   createMultipleTransactionParallel: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createMultipleTransactionParallel),\n/* harmony export */   createMultipleTransactionSequential: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createMultipleTransactionSequential),\n/* harmony export */   createPartialCallOrContinueFromRawEthereumInstruction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createPartialCallOrContinueFromRawEthereumInstruction),\n/* harmony export */   createPartialCallOrContinueFromRawEthereumTransaction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createPartialCallOrContinueFromRawEthereumTransaction),\n/* harmony export */   createScheduledNeonEvmMultipleTransaction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createScheduledNeonEvmMultipleTransaction),\n/* harmony export */   createScheduledNeonEvmTransaction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createScheduledNeonEvmTransaction),\n/* harmony export */   createScheduledTransactionInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.createScheduledTransactionInstruction),\n/* harmony export */   createScheduledTransactionStartFromAccountInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.createScheduledTransactionStartFromAccountInstruction),\n/* harmony export */   createScheduledTransactionStartFromAccountTransaction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.createScheduledTransactionStartFromAccountTransaction),\n/* harmony export */   createScheduledTransactionStartFromInstructionInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.createScheduledTransactionStartFromInstructionInstruction),\n/* harmony export */   createWriteToHolderAccountInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.createWriteToHolderAccountInstruction),\n/* harmony export */   deleteHolderAccountInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.deleteHolderAccountInstruction),\n/* harmony export */   destroyScheduledNeonEvmMultipleTransaction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.destroyScheduledNeonEvmMultipleTransaction),\n/* harmony export */   destroyScheduledTransactionInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.destroyScheduledTransactionInstruction),\n/* harmony export */   executeScheduledTransactionFromAccount: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.executeScheduledTransactionFromAccount),\n/* harmony export */   executeTransactionStepsFromAccount: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.executeTransactionStepsFromAccount),\n/* harmony export */   finishScheduledTransactionInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.finishScheduledTransactionInstruction),\n/* harmony export */   hexStringLayout: () => (/* reexport safe */ _layout__WEBPACK_IMPORTED_MODULE_2__.hexStringLayout),\n/* harmony export */   holderAddressWithSeed: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.holderAddressWithSeed),\n/* harmony export */   neonAuthorityPoolAddressSync: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.neonAuthorityPoolAddressSync),\n/* harmony export */   neonBalanceProgramAddressSync: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.neonBalanceProgramAddressSync),\n/* harmony export */   neonTreeAccountAddressSync: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.neonTreeAccountAddressSync),\n/* harmony export */   neonWalletProgramAddress: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.neonWalletProgramAddress),\n/* harmony export */   prepareSolanaInstruction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.prepareSolanaInstruction),\n/* harmony export */   prepareSolanaInstructions: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.prepareSolanaInstructions),\n/* harmony export */   prepareSolanaTransaction: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.prepareSolanaTransaction),\n/* harmony export */   selectMultipleTransactionMethod: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.selectMultipleTransactionMethod),\n/* harmony export */   skipScheduledTransactionInstruction: () => (/* reexport safe */ _instructions__WEBPACK_IMPORTED_MODULE_1__.skipScheduledTransactionInstruction),\n/* harmony export */   solanaToNeonAddress: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.solanaToNeonAddress),\n/* harmony export */   treasuryPoolAddressSync: () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.treasuryPoolAddressSync),\n/* harmony export */   writeTransactionToHoldAccount: () => (/* reexport safe */ _transactions__WEBPACK_IMPORTED_MODULE_3__.writeTransactionToHoldAccount)\n/* harmony export */ });\n/* harmony import */ var _account__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/account.js\");\n/* harmony import */ var _instructions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instructions */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/instructions.js\");\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/layout.js\");\n/* harmony import */ var _transactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transactions */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/transactions.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vc29sYW5hL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMEI7QUFDSztBQUNOO0FBQ00iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBjYXJkLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BuZW9uZXZtL3NvbGFuYS1zaWduL2Rpc3QvZXNtL3NvbGFuYS9pbmRleC5qcz81ODgyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYWNjb3VudCc7XG5leHBvcnQgKiBmcm9tICcuL2luc3RydWN0aW9ucyc7XG5leHBvcnQgKiBmcm9tICcuL2xheW91dCc7XG5leHBvcnQgKiBmcm9tICcuL3RyYW5zYWN0aW9ucyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/instructions.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/solana/instructions.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAccountWithSeedInstruction: () => (/* binding */ createAccountWithSeedInstruction),\n/* harmony export */   createBalanceAccountInstruction: () => (/* binding */ createBalanceAccountInstruction),\n/* harmony export */   createHolderAccountInstruction: () => (/* binding */ createHolderAccountInstruction),\n/* harmony export */   createScheduledTransactionInstruction: () => (/* binding */ createScheduledTransactionInstruction),\n/* harmony export */   createScheduledTransactionStartFromAccountInstruction: () => (/* binding */ createScheduledTransactionStartFromAccountInstruction),\n/* harmony export */   createScheduledTransactionStartFromInstructionInstruction: () => (/* binding */ createScheduledTransactionStartFromInstructionInstruction),\n/* harmony export */   createWriteToHolderAccountInstruction: () => (/* binding */ createWriteToHolderAccountInstruction),\n/* harmony export */   deleteHolderAccountInstruction: () => (/* binding */ deleteHolderAccountInstruction),\n/* harmony export */   destroyScheduledTransactionInstruction: () => (/* binding */ destroyScheduledTransactionInstruction),\n/* harmony export */   finishScheduledTransactionInstruction: () => (/* binding */ finishScheduledTransactionInstruction),\n/* harmony export */   skipScheduledTransactionInstruction: () => (/* binding */ skipScheduledTransactionInstruction)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n/* harmony import */ var _account__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/account.js\");\n\n\n\n/**\n * Create a new scheduled transaction instruction\n * @param data {CreateScheduledTransactionInstructionData} The data for the instruction\n * @param data.neonEvmProgram {PublicKey} The program ID of the Neon EVM program\n * @param data.signerAddress {PublicKey} The signer address solana wallet public key\n * @param data.balanceAddress {PublicKey} The balance address public key - contain information about neon wallet\n * @param data.treeAccountAddress {PublicKey} The tree account address public key - contain information about scheduled transactions\n * @param data.associatedTokenAddress {PublicKey} The associated token address public key - token address that will used for fee payment\n * @param data.neonTransaction {HexString} The scheduled transaction hex string\n * @returns {TransactionInstruction}\n */\nfunction createScheduledTransactionInstruction(data) {\n    const { neonEvmProgram: programId, signerAddress, balanceAddress, treeAccountAddress, associatedTokenAddress, neonTransaction, isMultiple } = data;\n    const treasuryPool = _account__WEBPACK_IMPORTED_MODULE_2__.TreasuryPoolAddress.find(programId, _utils__WEBPACK_IMPORTED_MODULE_1__.NEON_TREASURY_POOL_COUNT);\n    const keys = [\n        { pubkey: signerAddress, isSigner: true, isWritable: true },\n        { pubkey: balanceAddress, isSigner: false, isWritable: true },\n        { pubkey: treasuryPool.publicKey, isSigner: false, isWritable: true },\n        { pubkey: treeAccountAddress, isSigner: false, isWritable: true },\n        { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.programId, isSigner: false, isWritable: false }\n    ];\n    const type = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(isMultiple ? 75 /* ScheduledTransactionTag.CreateMultiple */ : 74 /* ScheduledTransactionTag.Create */);\n    const count = treasuryPool.buffer;\n    const transaction = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBuffer)(neonTransaction);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ keys, programId, data: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.bufferConcat)([type, count, transaction]) });\n}\n/**\n * Creates a **transaction instruction** to finalize a scheduled transaction.\n *\n * It specifies the **holder address, tree account, signer, and balance account** required to complete the transaction.\n *\n * @param {FinishScheduledTransactionData} data - The necessary data for finalizing the scheduled transaction.\n * @param {PublicKey} data.neonEvmProgram - The public key of the Neon EVM program.\n * @param {PublicKey} data.holderAddress - The public key of the holder account storing the scheduled transaction.\n * @param {PublicKey} data.treeAccountAddress - The public key of the tree account managing the transaction.\n * @param {PublicKey} data.signerAddress - The public key of the signer executing the transaction - solana wallet.\n * @param {PublicKey} data.balanceAddress - The public key of the balance account involved in the transaction - contain information about neon wallet.\n * @returns {TransactionInstruction} A Solana `TransactionInstruction` to finalize the scheduled transaction.\n *\n * @example\n * ```typescript\n * const instruction = finishScheduledTransactionInstruction({\n *   neonEvmProgram,\n *   holderAddress,\n *   treeAccountAddress,\n *   signerAddress,\n *   balanceAddress\n * });\n * transaction.add(instruction);\n * ```\n */\nfunction finishScheduledTransactionInstruction(data) {\n    const { neonEvmProgram: programId, holderAddress, treeAccountAddress, signerAddress, balanceAddress } = data;\n    const type = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(73 /* ScheduledTransactionTag.Finish */);\n    const keys = [\n        { pubkey: holderAddress, isSigner: false, isWritable: true },\n        { pubkey: treeAccountAddress, isSigner: false, isWritable: true },\n        { pubkey: signerAddress, isSigner: true, isWritable: true },\n        { pubkey: balanceAddress, isSigner: false, isWritable: true }\n    ];\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ keys, programId, data: type });\n}\n/**\n * Creates a **transaction instruction** to skip a scheduled transaction.\n *\n * This function constructs a **Solana transaction instruction** that marks a scheduled transaction as **skipped**.\n * It specifies the **holder account, tree account, signer, and transaction index** required to perform the operation.\n *\n * @param {SkipScheduledTransactionData} data - The necessary data for skipping the scheduled transaction.\n * @param {PublicKey} data.neonEvmProgram - The public key of the Neon EVM program.\n * @param {PublicKey} data.signerAddress - The public key of the signer executing the skip operation - solana wallet.\n * @param {PublicKey} data.holderAccount - The public key of the holder account storing the scheduled transaction.\n * @param {PublicKey} data.treeAccountAddress - The public key of the tree account managing the transaction.\n * @param {number} data.transactionIndex - The index of the transaction to be skipped.\n * @returns {TransactionInstruction} A Solana `TransactionInstruction` to skip the scheduled transaction.\n *\n * @example\n * ```typescript\n * const instruction = skipScheduledTransactionInstruction({\n *   neonEvmProgram,\n *   signerAddress,\n *   holderAccount,\n *   treeAccountAddress,\n *   transactionIndex: 2\n * });\n * transaction.add(instruction);\n * ```\n */\nfunction skipScheduledTransactionInstruction(data) {\n    const { neonEvmProgram: programId, signerAddress, holderAccount, treeAccountAddress, transactionIndex } = data;\n    const type = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(72 /* ScheduledTransactionTag.Skip */);\n    const index = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(transactionIndex);\n    const keys = [\n        { pubkey: holderAccount, isSigner: false, isWritable: true },\n        { pubkey: treeAccountAddress, isSigner: false, isWritable: true },\n        { pubkey: signerAddress, isSigner: true, isWritable: true }\n    ];\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ keys, programId, data: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.bufferConcat)([type, index]) });\n}\n/**\n * Creates a **transaction instruction** to destroy a scheduled transaction.\n *\n * @param {DestroyScheduledTransactionData} data - The necessary data for destroying the scheduled transaction.\n * @param {PublicKey} data.neonEvmProgram - The public key of the Neon EVM program.\n * @param {PublicKey} data.signerAddress - The public key of the signer executing the destroy operation - solana wallet.\n * @param {PublicKey} data.balanceAddress - The public key of the balance account involved in the transaction.\n * @param {PublicKey} data.treeAccountAddress - The public key of the tree account managing the transaction.\n * @returns {TransactionInstruction} A Solana `TransactionInstruction` to destroy the scheduled transaction.\n *\n * @example\n * ```typescript\n * const instruction = destroyScheduledTransactionInstruction({\n *   neonEvmProgram,\n *   signerAddress,\n *   balanceAddress,\n *   treeAccountAddress\n * });\n * transaction.add(instruction);\n * ```\n */\nfunction destroyScheduledTransactionInstruction(data) {\n    const { neonEvmProgram: programId, signerAddress, balanceAddress, treeAccountAddress } = data;\n    const treasuryPool = _account__WEBPACK_IMPORTED_MODULE_2__.TreasuryPoolAddress.find(programId, _utils__WEBPACK_IMPORTED_MODULE_1__.NEON_TREASURY_POOL_COUNT);\n    const type = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(76 /* ScheduledTransactionTag.Destroy */);\n    const count = treasuryPool.buffer;\n    const keys = [\n        { pubkey: signerAddress, isSigner: true, isWritable: true },\n        { pubkey: balanceAddress, isSigner: false, isWritable: true },\n        { pubkey: treasuryPool.publicKey, isSigner: false, isWritable: true },\n        { pubkey: treeAccountAddress, isSigner: false, isWritable: true }\n    ];\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ keys, programId, data: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.bufferConcat)([type, count]) });\n}\n/**\n * Create balance account instruction\n * @param neonEvmProgram {PublicKey} The program ID of the Neon EVM program\n * @param solanaWallet {PublicKey} The solana wallet public key\n * @param neonAddress {NeonAddress} The neon wallet address\n * @param chainId {number} The chain ID\n */\nfunction createBalanceAccountInstruction(neonEvmProgram, solanaWallet, neonAddress, chainId) {\n    const [balanceAddress] = (0,_account__WEBPACK_IMPORTED_MODULE_2__.neonBalanceProgramAddressSync)(neonAddress, neonEvmProgram, chainId);\n    const [neonWalletAddress] = (0,_account__WEBPACK_IMPORTED_MODULE_2__.neonWalletProgramAddress)(neonAddress, neonEvmProgram);\n    const keys = [\n        { pubkey: solanaWallet, isSigner: true, isWritable: true },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: balanceAddress, isSigner: false, isWritable: true },\n        { pubkey: neonWalletAddress, isSigner: false, isWritable: true }\n    ];\n    const a = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(48 /* InstructionTag.AccountBalanceCreate */);\n    const b = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBuffer)(neonAddress);\n    const c = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toBytes64LE)(chainId, 8);\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.bufferConcat)([a, b, c]);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ programId: neonEvmProgram, keys, data });\n}\n/**\n * Generate a transaction instruction that creates a new account at an address generated with from, a seed, and programId\n */\nfunction createAccountWithSeedInstruction(neonEvmProgram, operator, holderAccount, seed, space, lamports = 0) {\n    return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.createAccountWithSeed({\n        fromPubkey: operator,\n        newAccountPubkey: holderAccount,\n        basePubkey: operator,\n        seed, // should be the same as for derived account\n        lamports,\n        space,\n        programId: neonEvmProgram\n    });\n}\n/**\n * Creates a **transaction instruction** to initialize a new holder account.\n *\n * This function constructs a **Solana transaction instruction** that **creates a holder account**\n * using a specific seed. The holder account is used to store intermediate transaction data\n *\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {PublicKey} operator - The public key of the operator responsible for creating the holder account - instance of the SolanaNeonAccount.\n * @param {PublicKey} holderAddress - The public key of the holder account to be created.\n * @param {string} seed - The seed used to derive the holder account address.\n * @returns {TransactionInstruction} A Solana `TransactionInstruction` to create the holder account.\n *\n * @example\n * ```typescript\n * const instruction = createHolderAccountInstruction(\n *   neonEvmProgram,\n *   operator,\n *   holderAddress,\n *   \"unique-seed-value\"\n * );\n * transaction.add(instruction);\n * ```\n */\nfunction createHolderAccountInstruction(neonEvmProgram, operator, holderAddress, seed) {\n    const instruction = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(36 /* InstructionTag.HolderCreate */);\n    const seedLength = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toBytes64LE)(seed.length, 8);\n    const seedBuffer = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBuffer)(seed);\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.bufferConcat)([instruction, seedLength, seedBuffer]);\n    const keys = [\n        { pubkey: holderAddress, isSigner: false, isWritable: true },\n        { pubkey: operator, isSigner: true, isWritable: false }\n    ];\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ programId: neonEvmProgram, keys, data });\n}\n/**\n * Creates a **transaction instruction** to delete a holder account.\n *\n * The transaction requires the **Solana wallet** (operator) to sign the instruction to authorize the deletion.\n *\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {PublicKey} solanaWallet - The public key of the Solana wallet authorizing the deletion.\n * @param {PublicKey} holderAddress - The public key of the holder account to be deleted.\n * @returns {TransactionInstruction} A Solana `TransactionInstruction` to delete the holder account.\n *\n * @example\n * ```typescript\n * const instruction = deleteHolderAccountInstruction(\n *   neonEvmProgram,\n *   solanaWallet,\n *   holderAddress\n * );\n * transaction.add(instruction);\n * ```\n */\nfunction deleteHolderAccountInstruction(neonEvmProgram, solanaWallet, holderAddress) {\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(37 /* InstructionTag.HolderDelete */);\n    const keys = [\n        { pubkey: holderAddress, isSigner: false, isWritable: true },\n        { pubkey: solanaWallet, isSigner: true, isWritable: false }\n    ];\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ programId: neonEvmProgram, keys, data });\n}\n/**\n * Creates a **transaction instruction** to write data to a holder account.\n *\n * This function constructs a **Solana transaction instruction** that writes a part of a **transaction payload**\n * into a holder account.\n *\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {PublicKey} operator - The public key of the operator executing the write operation - instance of the SolanaNeonAccount.\n * @param {PublicKey} holderAddress - The public key of the holder account where data will be written.\n * @param {string} transactionHash - The unique transaction hash associated with this write operation.\n * @param {Buffer} transactionPart - A chunk of transaction data to be stored in the holder account.\n * @param {number} offset - The byte offset at which the transaction part should be written.\n * @returns {TransactionInstruction} A Solana `TransactionInstruction` to write data to the holder account.\n *\n * @example\n * ```typescript\n * const instruction = createWriteToHolderAccountInstruction(\n *   neonEvmProgram,\n *   operator,\n *   holderAddress,\n *   \"0xabcdef1234567890\",\n *   Buffer.from(\"transaction data\"),\n *   0\n * );\n * transaction.add(instruction);\n * ```\n */\nfunction createWriteToHolderAccountInstruction(neonEvmProgram, operator, holderAddress, transactionHash, transactionPart, offset) {\n    const type = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(38 /* InstructionTag.HolderWrite */);\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.bufferConcat)([type, (0,_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBuffer)(transactionHash), (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toBytes64LE)(offset, 8), transactionPart]);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({\n        keys: [\n            { pubkey: holderAddress, isSigner: false, isWritable: true },\n            { pubkey: operator, isSigner: true, isWritable: false }\n        ],\n        programId: neonEvmProgram,\n        data\n    });\n}\n/**\n * Creates a **transaction instruction** to start a scheduled transaction from an account.\n *\n * This function constructs a **Solana transaction instruction** that initiates a scheduled transaction\n * using a **tree structure**. It requires the **holder account**, **tree account**, **operator**,\n * and **balance account** to be provided. Additional accounts can be included as needed.\n *\n * @param {PublicKey} neonEvmProgram - The public key of the Neon EVM program.\n * @param {PublicKey} operator - The public key of the operator executing the transaction - instance of the SolanaNeonAccount.\n * @param {PublicKey} balanceAddress - The public key of the balance account involved in the transaction.\n * @param {PublicKey} holderAddress - The public key of the holder account storing transaction data.\n * @param {PublicKey} treeAddress - The public key of the tree account managing the transaction.\n * @param {number} index - The nonce of the scheduled transaction.\n * @param {PublicKey[]} [additionAccounts=[]] - An optional list of additional accounts required for execution.\n * @returns {TransactionInstruction} A Solana `TransactionInstruction` to start the scheduled transaction.\n *\n * @example\n * ```typescript\n * const instruction = createScheduledTransactionStartFromAccountInstruction(\n *   neonEvmProgram,\n *   operator,\n *   balanceAddress,\n *   holderAddress,\n *   treeAddress,\n *   1,  // Transaction nonce\n *   [additionalAccount1, additionalAccount2] // Optional additional accounts\n * );\n * transaction.add(instruction);\n * ```\n */\nfunction createScheduledTransactionStartFromAccountInstruction(neonEvmProgram, operator, balanceAddress, holderAddress, treeAddress, index, additionAccounts = []) {\n    const type = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(70 /* ScheduledTransactionTag.StartFromAccount */);\n    const indexBuffer = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(index);\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.bufferConcat)([type, indexBuffer]);\n    const keys = [\n        { pubkey: holderAddress, isSigner: false, isWritable: true },\n        { pubkey: treeAddress, isSigner: false, isWritable: true },\n        { pubkey: operator, isSigner: true, isWritable: true },\n        { pubkey: balanceAddress, isSigner: false, isWritable: true },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.programId, isSigner: false, isWritable: false }\n    ];\n    for (const account of additionAccounts) {\n        keys.push({ pubkey: account, isSigner: false, isWritable: true });\n    }\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ programId: neonEvmProgram, keys, data });\n}\nfunction createScheduledTransactionStartFromInstructionInstruction(neonEvmProgram, signerAddress, balanceAddress, holderAddress, treeAddress, index, neonTransaction, additionAccounts = []) {\n    const type = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(71 /* ScheduledTransactionTag.StartFromInstruction */);\n    const indexBuffer = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.numberToBuffer)(index);\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.bufferConcat)([type, indexBuffer, neonTransaction]);\n    const keys = [\n        { pubkey: holderAddress, isSigner: false, isWritable: true },\n        { pubkey: treeAddress, isSigner: false, isWritable: true },\n        { pubkey: signerAddress, isSigner: true, isWritable: true },\n        { pubkey: balanceAddress, isSigner: false, isWritable: true },\n        { pubkey: _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.programId, isSigner: false, isWritable: false }\n    ];\n    for (const account of additionAccounts) {\n        keys.push({ pubkey: account, isSigner: false, isWritable: true });\n    }\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ programId: neonEvmProgram, keys, data });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/instructions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/layout.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/solana/layout.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BalanceAccountLayout: () => (/* binding */ BalanceAccountLayout),\n/* harmony export */   hexStringLayout: () => (/* binding */ hexStringLayout)\n/* harmony export */ });\n/* harmony import */ var _solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/buffer-layout */ \"(ssr)/./node_modules/@solana/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/buffer-layout-utils */ \"(ssr)/./node_modules/@solana/buffer-layout-utils/lib/esm/index.mjs\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n\n\n\n/**\n * Creates a **custom binary layout** for encoding and decoding **hexadecimal strings**.\n *\n * This function provides a structured way to store and retrieve **HexString** values\n * within binary data layouts, commonly used for **binary serialization** in **Neon EVM transactions**.\n *\n * @param {number} length - The **length (in bytes)** of the expected hexadecimal string.\n * @param {string} [property] - An optional **property** for the layout.\n * @returns {Layout<HexString>} A **binary layout structure** capable of encoding and decoding hex strings.\n *\n * ### **How It Works**\n * - **Encodes hex strings into binary format** for efficient storage.\n * - **Decodes binary data back into a prefixed `0x` hex string** for readability.\n * - Uses **buffer operations** to **manipulate hex data** in a structured format.\n *\n * ### **Example Usage**\n * ```typescript\n * const layout = hexStringLayout(32, \"publicKey\");\n * const buffer = Buffer.alloc(32);\n * layout.encode(\"0xabcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890\", buffer, 0);\n * const decodedHex = layout.decode(buffer, 0);\n * console.log(decodedHex); // Outputs: \"0xabcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890\"\n * ```\n */\nconst hexStringLayout = (length, property) => {\n    const layout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob)(length, property);\n    const { encode, decode } = (0,_solana_buffer_layout_utils__WEBPACK_IMPORTED_MODULE_1__.encodeDecode)(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return `0x${Buffer.from(src).toString('hex')}`;\n    };\n    publicKeyLayout.encode = (hex, buffer, offset) => {\n        const src = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.hexToBuffer)(hex);\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\nconst BalanceAccountLayout = (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct)([\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('type'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u8)('headerVersion'),\n    hexStringLayout(20, 'address'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.ns64)('chainId'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.ns64)('nonce'),\n    (0,_solana_buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32)('balance')\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vc29sYW5hL2xheW91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvRTtBQUNUO0FBQ3BCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxtQkFBbUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDTztBQUNQLG1CQUFtQiwyREFBSTtBQUN2QixZQUFZLGlCQUFpQixFQUFFLHlFQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpQ0FBaUM7QUFDckQ7QUFDQTtBQUNBLG9CQUFvQixtREFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZCQUE2Qiw2REFBTTtBQUMxQyxJQUFJLHlEQUFFO0FBQ04sSUFBSSx5REFBRTtBQUNOO0FBQ0EsSUFBSSwyREFBSTtBQUNSLElBQUksMkRBQUk7QUFDUixJQUFJLDBEQUFHO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBjYXJkLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BuZW9uZXZtL3NvbGFuYS1zaWduL2Rpc3QvZXNtL3NvbGFuYS9sYXlvdXQuanM/Zjg2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBibG9iLCBuczY0LCBzdHJ1Y3QsIHUzMiwgdTggfSBmcm9tICdAc29sYW5hL2J1ZmZlci1sYXlvdXQnO1xuaW1wb3J0IHsgZW5jb2RlRGVjb2RlIH0gZnJvbSAnQHNvbGFuYS9idWZmZXItbGF5b3V0LXV0aWxzJztcbmltcG9ydCB7IGhleFRvQnVmZmVyIH0gZnJvbSAnLi4vdXRpbHMnO1xuLyoqXG4gKiBDcmVhdGVzIGEgKipjdXN0b20gYmluYXJ5IGxheW91dCoqIGZvciBlbmNvZGluZyBhbmQgZGVjb2RpbmcgKipoZXhhZGVjaW1hbCBzdHJpbmdzKiouXG4gKlxuICogVGhpcyBmdW5jdGlvbiBwcm92aWRlcyBhIHN0cnVjdHVyZWQgd2F5IHRvIHN0b3JlIGFuZCByZXRyaWV2ZSAqKkhleFN0cmluZyoqIHZhbHVlc1xuICogd2l0aGluIGJpbmFyeSBkYXRhIGxheW91dHMsIGNvbW1vbmx5IHVzZWQgZm9yICoqYmluYXJ5IHNlcmlhbGl6YXRpb24qKiBpbiAqKk5lb24gRVZNIHRyYW5zYWN0aW9ucyoqLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGggLSBUaGUgKipsZW5ndGggKGluIGJ5dGVzKSoqIG9mIHRoZSBleHBlY3RlZCBoZXhhZGVjaW1hbCBzdHJpbmcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW3Byb3BlcnR5XSAtIEFuIG9wdGlvbmFsICoqcHJvcGVydHkqKiBmb3IgdGhlIGxheW91dC5cbiAqIEByZXR1cm5zIHtMYXlvdXQ8SGV4U3RyaW5nPn0gQSAqKmJpbmFyeSBsYXlvdXQgc3RydWN0dXJlKiogY2FwYWJsZSBvZiBlbmNvZGluZyBhbmQgZGVjb2RpbmcgaGV4IHN0cmluZ3MuXG4gKlxuICogIyMjICoqSG93IEl0IFdvcmtzKipcbiAqIC0gKipFbmNvZGVzIGhleCBzdHJpbmdzIGludG8gYmluYXJ5IGZvcm1hdCoqIGZvciBlZmZpY2llbnQgc3RvcmFnZS5cbiAqIC0gKipEZWNvZGVzIGJpbmFyeSBkYXRhIGJhY2sgaW50byBhIHByZWZpeGVkIGAweGAgaGV4IHN0cmluZyoqIGZvciByZWFkYWJpbGl0eS5cbiAqIC0gVXNlcyAqKmJ1ZmZlciBvcGVyYXRpb25zKiogdG8gKiptYW5pcHVsYXRlIGhleCBkYXRhKiogaW4gYSBzdHJ1Y3R1cmVkIGZvcm1hdC5cbiAqXG4gKiAjIyMgKipFeGFtcGxlIFVzYWdlKipcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGNvbnN0IGxheW91dCA9IGhleFN0cmluZ0xheW91dCgzMiwgXCJwdWJsaWNLZXlcIik7XG4gKiBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoMzIpO1xuICogbGF5b3V0LmVuY29kZShcIjB4YWJjZGVmMTIzNDU2Nzg5MGFiY2RlZjEyMzQ1Njc4OTBhYmNkZWYxMjM0NTY3ODkwYWJjZGVmMTIzNDU2Nzg5MFwiLCBidWZmZXIsIDApO1xuICogY29uc3QgZGVjb2RlZEhleCA9IGxheW91dC5kZWNvZGUoYnVmZmVyLCAwKTtcbiAqIGNvbnNvbGUubG9nKGRlY29kZWRIZXgpOyAvLyBPdXRwdXRzOiBcIjB4YWJjZGVmMTIzNDU2Nzg5MGFiY2RlZjEyMzQ1Njc4OTBhYmNkZWYxMjM0NTY3ODkwYWJjZGVmMTIzNDU2Nzg5MFwiXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGhleFN0cmluZ0xheW91dCA9IChsZW5ndGgsIHByb3BlcnR5KSA9PiB7XG4gICAgY29uc3QgbGF5b3V0ID0gYmxvYihsZW5ndGgsIHByb3BlcnR5KTtcbiAgICBjb25zdCB7IGVuY29kZSwgZGVjb2RlIH0gPSBlbmNvZGVEZWNvZGUobGF5b3V0KTtcbiAgICBjb25zdCBwdWJsaWNLZXlMYXlvdXQgPSBsYXlvdXQ7XG4gICAgcHVibGljS2V5TGF5b3V0LmRlY29kZSA9IChidWZmZXIsIG9mZnNldCkgPT4ge1xuICAgICAgICBjb25zdCBzcmMgPSBkZWNvZGUoYnVmZmVyLCBvZmZzZXQpO1xuICAgICAgICByZXR1cm4gYDB4JHtCdWZmZXIuZnJvbShzcmMpLnRvU3RyaW5nKCdoZXgnKX1gO1xuICAgIH07XG4gICAgcHVibGljS2V5TGF5b3V0LmVuY29kZSA9IChoZXgsIGJ1ZmZlciwgb2Zmc2V0KSA9PiB7XG4gICAgICAgIGNvbnN0IHNyYyA9IGhleFRvQnVmZmVyKGhleCk7XG4gICAgICAgIHJldHVybiBlbmNvZGUoc3JjLCBidWZmZXIsIG9mZnNldCk7XG4gICAgfTtcbiAgICByZXR1cm4gcHVibGljS2V5TGF5b3V0O1xufTtcbmV4cG9ydCBjb25zdCBCYWxhbmNlQWNjb3VudExheW91dCA9IHN0cnVjdChbXG4gICAgdTgoJ3R5cGUnKSxcbiAgICB1OCgnaGVhZGVyVmVyc2lvbicpLFxuICAgIGhleFN0cmluZ0xheW91dCgyMCwgJ2FkZHJlc3MnKSxcbiAgICBuczY0KCdjaGFpbklkJyksXG4gICAgbnM2NCgnbm9uY2UnKSxcbiAgICB1MzIoJ2JhbGFuY2UnKVxuXSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/layout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/transactions.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/solana/transactions.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBalanceAccountTransaction: () => (/* binding */ createBalanceAccountTransaction),\n/* harmony export */   createHolderAccountTransaction: () => (/* binding */ createHolderAccountTransaction),\n/* harmony export */   createMultipleTransactionDependLast: () => (/* binding */ createMultipleTransactionDependLast),\n/* harmony export */   createMultipleTransactionParallel: () => (/* binding */ createMultipleTransactionParallel),\n/* harmony export */   createMultipleTransactionSequential: () => (/* binding */ createMultipleTransactionSequential),\n/* harmony export */   createPartialCallOrContinueFromRawEthereumInstruction: () => (/* binding */ createPartialCallOrContinueFromRawEthereumInstruction),\n/* harmony export */   createPartialCallOrContinueFromRawEthereumTransaction: () => (/* binding */ createPartialCallOrContinueFromRawEthereumTransaction),\n/* harmony export */   createScheduledNeonEvmMultipleTransaction: () => (/* binding */ createScheduledNeonEvmMultipleTransaction),\n/* harmony export */   createScheduledNeonEvmTransaction: () => (/* binding */ createScheduledNeonEvmTransaction),\n/* harmony export */   createScheduledTransactionStartFromAccountTransaction: () => (/* binding */ createScheduledTransactionStartFromAccountTransaction),\n/* harmony export */   destroyScheduledNeonEvmMultipleTransaction: () => (/* binding */ destroyScheduledNeonEvmMultipleTransaction),\n/* harmony export */   executeScheduledTransactionFromAccount: () => (/* binding */ executeScheduledTransactionFromAccount),\n/* harmony export */   executeTransactionStepsFromAccount: () => (/* binding */ executeTransactionStepsFromAccount),\n/* harmony export */   prepareSolanaInstruction: () => (/* binding */ prepareSolanaInstruction),\n/* harmony export */   prepareSolanaInstructions: () => (/* binding */ prepareSolanaInstructions),\n/* harmony export */   prepareSolanaTransaction: () => (/* binding */ prepareSolanaTransaction),\n/* harmony export */   selectMultipleTransactionMethod: () => (/* binding */ selectMultipleTransactionMethod),\n/* harmony export */   writeTransactionToHoldAccount: () => (/* binding */ writeTransactionToHoldAccount)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/spl-token */ \"(ssr)/./node_modules/@solana/spl-token/lib/esm/state/mint.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/crypto/keccak.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/src/esm/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n/* harmony import */ var _account__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/account.js\");\n/* harmony import */ var _instructions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instructions */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/instructions.js\");\n/* harmony import */ var _neon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../neon */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/index.js\");\n\n\n\n\n\n\n\n\n/**\n * Creates a **Solana transaction** to initialize a balance account for a given **Neon EVM wallet**.\n *\n * This function generates a transaction that contains an **instruction** to create a **balance account**,\n * ensuring that the specified **Neon address** has a corresponding balance tracking account on **Solana**.\n *\n * @param {PublicKey} neonEvmProgram - The public key of the **Neon EVM program**.\n * @param {PublicKey} solanaWallet - The public key of the **Solana wallet** initiating the transaction.\n * @param {NeonAddress} neonAddress - The **Neon EVM wallet address** associated with this balance account.\n * @param {number} chainId - The **chain ID** representing the network where the transaction is executed.\n * @returns {Transaction} A **Solana `Transaction` object**, ready to be signed and sent.\n *\n * @example\n * ```typescript\n * const transaction = createBalanceAccountTransaction(\n *   neonEvmProgram,\n *   solanaWallet,\n *   \"0xNeonWalletAddress\",\n *   245022926\n * );\n * transaction.recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n * const signature = await connection.sendTransaction(transaction, [signer]);\n * ```\n */\nfunction createBalanceAccountTransaction(neonEvmProgram, solanaWallet, neonAddress, chainId) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n    transaction.add((0,_instructions__WEBPACK_IMPORTED_MODULE_4__.createBalanceAccountInstruction)(neonEvmProgram, solanaWallet, neonAddress, chainId));\n    return transaction;\n}\n/**\n * Creates a **Solana transaction** to initialize a **holder account**.\n *\n * This function constructs a transaction containing:\n * - An instruction to **create an account with a deterministic seed**.\n * - An instruction to **initialize the holder account** within the **Neon EVM program**.\n *\n * The **holder account** is used for **storing temporary transaction data** and **processing Neon EVM transactions**.\n *\n * @param {PublicKey} neonEvmProgram - The public key of the **Neon EVM program**.\n * @param {PublicKey} solanaWallet - The public key of the **Solana wallet** initiating the transaction.\n * @param {PublicKey} holderAccount - The **public key of the holder account** to be created.\n * @param {string} holderSeed - The **unique seed** used to derive the holder account address.\n * @returns {Promise<Transaction>} A **Solana `Transaction` object**, ready to be signed and sent.\n *\n * @example\n * ```typescript\n * const transaction = await createHolderAccountTransaction(\n *   neonEvmProgram,\n *   solanaWallet,\n *   holderAccount,\n *   \"unique-holder-seed\"\n * );\n * transaction.recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n * const signature = await connection.sendTransaction(transaction, [signer]);\n * ```\n */\nasync function createHolderAccountTransaction(neonEvmProgram, solanaWallet, holderAccount, holderSeed) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n    transaction.add((0,_instructions__WEBPACK_IMPORTED_MODULE_4__.createAccountWithSeedInstruction)(neonEvmProgram, solanaWallet, holderAccount, holderSeed, 128 * 1024, 1e9));\n    transaction.add((0,_instructions__WEBPACK_IMPORTED_MODULE_4__.createHolderAccountInstruction)(neonEvmProgram, solanaWallet, holderAccount, holderSeed));\n    return transaction;\n}\n/**\n * Creates a **Solana transaction** to schedule a **Neon EVM transaction**, enabling the execution of a **Neon Transaction tree**.\n *\n * This functionality allows for the **automatic splitting of large Ethereum-like transactions** into **smaller, independent Neon transactions**.\n * In this model, an individual Neon transaction **may fail without affecting the entire transaction flow**, as the results of executed Neon transactions can be **aggregated and handled**.\n *\n * @param {CreateScheduledTransactionData} transactionData - The structured data required to create a scheduled Neon EVM transaction.\n * @param {number} transactionData.chainId - The **chain ID** representing the target blockchain network.\n * @param {PublicKey} transactionData.signerAddress - The **public key** of the **signing account** responsible for initiating the transaction.\n * @param {PublicKey} transactionData.tokenMintAddress - The **public key** of the **token mint account** associated with the transaction.\n * @param {PublicKey} transactionData.neonEvmProgram - The **Neon EVM program ID** used for transaction execution.\n * @param {NeonAddress} transactionData.neonWallet - The **Neon wallet address** associated with the transaction.\n * @param {number} transactionData.neonWalletNonce - A **nonce value** of the root **Neon transaction** in the tree of scheduled Neon transactions.\n * @param {string} transactionData.neonTransaction - The **raw Neon EVM transaction data**.\n * @param {boolean} transactionData.isMultiple - A **flag indicating whether multiple transactions are scheduled together**.\n * @returns {Transaction} A **Solana `Transaction` object**, ready to be signed and sent.\n */\nfunction createScheduledNeonEvmTransaction(transactionData) {\n    const { chainId, signerAddress, tokenMintAddress, neonEvmProgram, neonWallet, neonWalletNonce, neonTransaction, isMultiple } = transactionData;\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n    const [balanceAddress] = (0,_account__WEBPACK_IMPORTED_MODULE_3__.neonBalanceProgramAddressSync)(neonWallet, neonEvmProgram, chainId);\n    const [treeAccountAddress] = (0,_account__WEBPACK_IMPORTED_MODULE_3__.neonTreeAccountAddressSync)(neonWallet, neonEvmProgram, chainId, neonWalletNonce);\n    const [authorityPoolAddress] = (0,_account__WEBPACK_IMPORTED_MODULE_3__.neonAuthorityPoolAddressSync)(neonEvmProgram);\n    const associatedTokenAddress = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_6__.getAssociatedTokenAddressSync)(tokenMintAddress, authorityPoolAddress, true);\n    transaction.add((0,_instructions__WEBPACK_IMPORTED_MODULE_4__.createScheduledTransactionInstruction)({\n        neonEvmProgram,\n        signerAddress,\n        balanceAddress,\n        treeAccountAddress,\n        associatedTokenAddress,\n        neonTransaction,\n        isMultiple\n    }));\n    return transaction;\n}\n/**\n * Creates a **Solana transaction** to schedule multiple **Neon EVM transactions** as part of a **Neon transaction tree execution**.\n *\n * This function wraps `createScheduledNeonEvmTransaction` but explicitly sets `isMultiple: true`,\n * allowing the execution of **multiple dependent transactions** within the same scheduled process.\n *\n * @param {CreateScheduledTransactionData} transactionData - The structured data required to create a scheduled Neon EVM transaction.\n * @param {number} transactionData.chainId - The **chain ID** representing the target blockchain network.\n * @param {PublicKey} transactionData.signerAddress - The **public key** of the **signing account** responsible for initiating the transaction.\n * @param {PublicKey} transactionData.tokenMintAddress - The **public key** of the **token mint account** associated with the transaction.\n * @param {PublicKey} transactionData.neonEvmProgram - The **Neon EVM program ID** used for transaction execution.\n * @param {NeonAddress} transactionData.neonWallet - The **Neon wallet address** associated with the transaction.\n * @param {number} transactionData.neonWalletNonce - A **nonce value** of the root **Neon transaction** in the tree of scheduled Neon transactions.\n * @param {string} transactionData.neonTransaction - The **raw Neon EVM transaction data**.\n * @returns {Promise<Transaction>} A **Solana `Transaction` object**, ready to be signed and sent.\n */\nfunction createScheduledNeonEvmMultipleTransaction(transactionData) {\n    const { chainId, signerAddress, tokenMintAddress, neonEvmProgram, neonWallet, neonWalletNonce, neonTransaction } = transactionData;\n    return createScheduledNeonEvmTransaction({\n        chainId,\n        signerAddress,\n        tokenMintAddress,\n        neonEvmProgram,\n        neonWallet,\n        neonWalletNonce,\n        neonTransaction,\n        isMultiple: true\n    });\n}\n/**\n * Creates a **Solana transaction** to **destroy a scheduled Neon EVM TreeAccount**.\n *\n * This function removes a previously scheduled **Neon EVM transaction** by destroying its **TreeAccount**,\n * ensuring proper cleanup and returning unspent fees to the appropriate accounts.\n *\n * ### **Conditions for Destroying a TreeAccount:**\n * - The **TreeAccount** must not have any **active** transactions being processed.\n * - The **TreeAccount** can be destroyed if:\n *   - There are **no unprocessed Neon transactions** in the account.\n *   - The **last transaction slot** is **at least 9000 slots old** (~1 hour).\n *\n * ### **Fund Distribution Upon Destruction:**\n * - **Rent-exempt SOL** is returned to the **TreasuryAccount**.\n * - The remaining **gas tokens** are transferred to the **payer's balance account**.\n *\n * @param {DestroyScheduledTransactionData} transactionData - The structured data required to destroy a scheduled transaction.\n * @param {PublicKey} transactionData.signerAddress - The **public key** of the **Neon Operator** responsible for destruction.\n * @param {PublicKey} transactionData.neonEvmProgram - The **Neon EVM program ID** where the scheduled transaction exists.\n * @param {PublicKey} transactionData.balanceAddress - The **public key** of the **payer's balance account**.\n * @param {PublicKey} transactionData.treeAccountAddress - The **public key** of the **TreeAccount** being destroyed.\n * @returns {Transaction} A **Solana `Transaction` object**, ready to be signed and sent.\n */\nfunction destroyScheduledNeonEvmMultipleTransaction(transactionData) {\n    const { signerAddress, neonEvmProgram, balanceAddress, treeAccountAddress } = transactionData;\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n    transaction.add((0,_instructions__WEBPACK_IMPORTED_MODULE_4__.destroyScheduledTransactionInstruction)({\n        neonEvmProgram,\n        signerAddress,\n        balanceAddress,\n        treeAccountAddress\n    }));\n    return transaction;\n}\n/**\n * Writes a **scheduled Neon EVM transaction** into a **Solana holder account** by splitting it into chunks.\n *\n * Since Solana transactions have a **size limit**, this function **splits a scheduled Neon transaction**\n * into smaller **chunks** and sequentially writes them into the **holder account**.\n *\n * @param {Connection} connection - The **Solana connection instance** to interact with the blockchain.\n * @param {PublicKey} neonEvmProgram - The **Neon EVM program** managing the scheduled transaction.\n * @param {SolanaNeonAccount} solanaUser - The **Solana account** signing and funding the transaction associated with the Neon wallet.\n * @param {PublicKey} holderAddress - The **public key of the holder account** where transaction data is stored.\n * @param {ScheduledTransaction} scheduledTransaction - The **Neon transaction** to be written into the holder account.\n * @returns {Promise<any>} A promise resolving once the transaction is fully written.\n *\n * ### **How It Works**\n * 1. **Hashes the scheduled Neon transaction** using `keccak256`.\n * 2. **Splits the transaction data** into **chunks of 920 bytes**.\n * 3. **Writes each chunk sequentially** into the **holder account**.\n * 4. **Sends multiple transactions** in parallel to ensure fast execution.\n * 5. **Logs each transaction signature** for debugging purposes.\n *\n * ### **Example**\n * ```typescript\n * await writeTransactionToHoldAccount(\n *   connection,\n *   neonEvmProgram,\n *   solanaUser,\n *   holderAddress,\n *   scheduledTransaction\n * );\n * ```\n */\nasync function writeTransactionToHoldAccount(connection, neonEvmProgram, solanaUser, holderAddress, scheduledTransaction) {\n    const receipts = [];\n    const scheduledTransactionHash = `0x${scheduledTransaction.serialize}`;\n    const transactionHash = (0,ethers__WEBPACK_IMPORTED_MODULE_7__.keccak256)(scheduledTransactionHash);\n    let rest = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.hexToBuffer)(scheduledTransactionHash);\n    let offset = 0;\n    while (rest.length) {\n        const part = rest.slice(0, 920);\n        rest = rest.slice(920);\n        const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n        transaction.feePayer = solanaUser.publicKey;\n        transaction.add((0,_instructions__WEBPACK_IMPORTED_MODULE_4__.createWriteToHolderAccountInstruction)(neonEvmProgram, solanaUser.publicKey, holderAddress, transactionHash, part, offset));\n        receipts.push((0,_utils__WEBPACK_IMPORTED_MODULE_2__.sendSolanaTransaction)(connection, transaction, [solanaUser.signer], false, { preflightCommitment: 'confirmed' }, `rest`));\n        offset += part.length;\n    }\n    for (const receipt of receipts) {\n        const { signature, blockhash, lastValidBlockHeight } = await receipt;\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.log)(signature, blockhash, lastValidBlockHeight);\n    }\n}\n/**\n * Executes a **scheduled Neon EVM transaction** from a **Solana holder account**.\n *\n * This function **retrieves and executes** a previously scheduled Neon transaction by creating\n * and sending an **on-chain transaction** from a **Solana holder account**.\n *\n * @param {Connection} connection - The **Solana connection instance** to interact with the blockchain.\n * @param {PublicKey} neonEvmProgram - The **Neon EVM program ID** managing the scheduled transaction.\n * @param {SolanaNeonAccount} solanaUser - The **Solana account** that will execute the transaction.\n * @param {PublicKey} holderAddress - The **public key of the holder account** storing the scheduled transaction.\n * @param {PublicKey} treeAddress - The **public key of the transaction tree account** linked to the execution.\n * @param {number} nonce - A **nonce value** of the root **Neon transaction** in the tree of scheduled Neon transactions.\n * @returns {Promise<void>} A promise resolving once the transaction is executed.\n */\nasync function executeScheduledTransactionFromAccount(connection, neonEvmProgram, solanaUser, holderAddress, treeAddress, nonce) {\n    const transaction = createScheduledTransactionStartFromAccountTransaction(neonEvmProgram, solanaUser.publicKey, solanaUser.balanceAddress, holderAddress, treeAddress, nonce);\n    transaction.feePayer = solanaUser.publicKey;\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sendSolanaTransaction)(connection, transaction, [solanaUser.signer], false, { preflightCommitment: 'confirmed' }, `rest`);\n}\n/**\n * Executes a scheduled **Neon EVM transaction** step-by-step from a **Solana holder account**.\n *\n * This function **iteratively processes** a large Ethereum-like transaction by breaking it into smaller\n * execution steps (EVM steps) and executing them sequentially on Solana.\n * It ensures that **each step is confirmed before proceeding** to the next one.\n *\n * @param {Connection} connection - The **Solana connection instance** to interact with the blockchain.\n * @param {PublicKey} neonEvmProgram - The **Neon EVM program ID** managing the execution of the transaction.\n * @param {SolanaNeonAccount} solanaUser - The **Solana account** that will execute the transaction.\n * @param {PublicKey} holderAddress - The **public key of the holder account** storing the scheduled transaction.\n * @param {TreasuryPoolAddress} treasuryPoolAddress - The **address of the treasury pool** used for transaction fees.\n * @param {PublicKey} storageAccount - The **public key of the storage account** linked to transaction execution.\n * @param {PublicKey[]} [additionalAccounts=[]] - An optional array of **additional accounts** required for execution.\n * @returns {Promise<any>} A promise resolving with the **receipt of the executed transaction**.\n *\n * ### **How It Works**\n * 1. **Creates a transaction step-by-step**, executing the Ethereum-like transaction in smaller **EVM steps**.\n * 2. **Sends each step to the Solana blockchain** until the transaction is fully executed.\n * 3. **Waits for confirmation** of each step before proceeding to the next step.\n * 4. **Logs and returns the final transaction receipt** after full execution.\n */\nasync function executeTransactionStepsFromAccount(connection, neonEvmProgram, solanaUser, holderAddress, treasuryPoolAddress, storageAccount, additionalAccounts = []) {\n    let index = 0;\n    let receipt = null;\n    while (!receipt) {\n        const transaction = createPartialCallOrContinueFromRawEthereumTransaction(index, _utils__WEBPACK_IMPORTED_MODULE_2__.EVM_STEPS, neonEvmProgram, solanaUser, holderAddress, treasuryPoolAddress, ``, additionalAccounts);\n        const { signature } = await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sendSolanaTransaction)(connection, transaction, [solanaUser.signer], false, { preflightCommitment: 'confirmed' }, `execute ${index}`);\n        await (0,_utils__WEBPACK_IMPORTED_MODULE_2__.delay)(2e3);\n        receipt = await connection.getParsedTransaction(signature, { commitment: 'confirmed' });\n        index += 1;\n    }\n    (0,_utils__WEBPACK_IMPORTED_MODULE_2__.log)(receipt);\n    return receipt;\n}\n/**\n * Creates a **Solana transaction** to start the execution of a **scheduled Neon EVM transaction**\n * from a **Solana holder account**.\n *\n * This function prepares and returns a **Solana transaction** that initiates a scheduled Neon transaction,\n * enabling step-by-step execution.\n *\n * @param {PublicKey} neonEvmProgram - The **Neon EVM program ID** managing the execution of the transaction.\n * @param {PublicKey} operator - The **Solana account (operator) responsible for executing the transaction**.\n * @param {PublicKey} balanceAddress - The **public key of the balance account** associated with the transaction.\n * @param {PublicKey} holderAddress - The **public key of the holder account** storing the scheduled transaction.\n * @param {PublicKey} treeAddress - The **public key of the transaction tree account** used in execution.\n * @param {number} index - The **transaction index** in the scheduled transaction queue.\n * @param {PublicKey[]} [additionAccounts=[]] - An optional array of **additional accounts** required for execution.\n * @returns {Transaction} A **Solana `Transaction` object**, ready to be signed and sent.\n *\n * ### **How It Works**\n * 1. **Requests a compute heap frame** of `256 KB` to allocate enough memory for processing.\n * 2. **Sets the compute unit price** to ensure priority execution.\n * 3. **Adds an instruction** to initiate the scheduled Neon transaction from the Solana holder account.\n * 4. **Returns the constructed transaction** ready for submission.\n *\n * ### **Example**\n * ```typescript\n * const transaction = createScheduledTransactionStartFromAccountTransaction(\n *   neonEvmProgram,\n *   operator,\n *   balanceAddress,\n *   holderAddress,\n *   treeAddress,\n *   0 // First transaction index\n * );\n * ```\n */\nfunction createScheduledTransactionStartFromAccountTransaction(neonEvmProgram, operator, balanceAddress, holderAddress, treeAddress, index, additionAccounts = []) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n    transaction.add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.ComputeBudgetProgram.requestHeapFrame({ bytes: 256 * 1024 }));\n    transaction.add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.ComputeBudgetProgram.setComputeUnitPrice({ microLamports: 1000000 }));\n    transaction.add((0,_instructions__WEBPACK_IMPORTED_MODULE_4__.createScheduledTransactionStartFromAccountInstruction)(neonEvmProgram, operator, balanceAddress, holderAddress, treeAddress, index, additionAccounts));\n    return transaction;\n}\n/**\n * Creates a **Solana transaction instruction** to execute a **partial call or continue execution**\n * of a **Neon EVM transaction**.\n *\n * This function is responsible for **processing large Ethereum-like transactions** on **Neon EVM**\n * by breaking them down into **smaller execution steps (EVM steps)** and **handling partial execution**.\n *\n * @param {number} index - The **current step index** in the transaction execution.\n * @param {number} stepCount - The **total number of execution steps** to be processed.\n * @param {PublicKey} neonEvmProgram - The **Neon EVM program ID** managing the execution of the transaction.\n * @param {PublicKey} operator - The **Solana account (operator) initiating the transaction**.\n * @param {PublicKey} balanceAddress - The **public key of the balance program address for the Neon wallet** used for gas and execution fees.\n * @param {PublicKey} holderAddress - The **public key of the holder account** storing the transaction.\n * @param {TreasuryPoolAddress} treasuryPoolAddress - The **address of the treasury pool** used for transaction fees.\n * @param {PublicKey[]} additionalAccounts - An array of **additional accounts** required for execution.\n * @param {HexString} instruction - The **raw transaction data** for the specific execution step.\n * @param {number} [type=InstructionTag.TransactionStepFromInstruction] - The **instruction type** (defaults to 0x34).\n * @param {PublicKey} [systemProgram=SystemProgram.programId] - The **public key of the Solana system program**.\n * @returns {TransactionInstruction} A **Solana `TransactionInstruction` object**, ready to be included in a transaction.\n *\n * ### **Example**\n * ```typescript\n * const instruction = createPartialCallOrContinueFromRawEthereumInstruction(\n *   0, // First step\n *   100, // Total steps\n *   neonEvmProgram,\n *   solanaUser.publicKey,\n *   balanceAddress,\n *   holderAddress,\n *   treasuryPoolAddress,\n *   [],\n *   \"0xTransactionPart\"\n * );\n * ```\n */\nfunction createPartialCallOrContinueFromRawEthereumInstruction(index, stepCount, neonEvmProgram, operator, balanceAddress, holderAddress, treasuryPoolAddress, additionalAccounts, instruction, type = 52 /* InstructionTag.TransactionStepFromInstruction */, // TransactionStepFromInstruction\nsystemProgram = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.programId) {\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.bufferConcat)([\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.numberToBuffer)(type),\n        treasuryPoolAddress.buffer,\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.toBytes64LE)(stepCount, 4),\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.toBytes64LE)(index, 4),\n        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.hexToBuffer)(instruction)\n    ]);\n    const keys = [\n        { pubkey: holderAddress, isSigner: false, isWritable: true },\n        { pubkey: operator, isSigner: true, isWritable: true },\n        { pubkey: treasuryPoolAddress.publicKey, isSigner: false, isWritable: true },\n        { pubkey: balanceAddress, isSigner: false, isWritable: true },\n        { pubkey: systemProgram, isSigner: false, isWritable: true }\n    ];\n    for (const acc of additionalAccounts) {\n        keys.push({ pubkey: acc, isSigner: false, isWritable: true });\n    }\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({ programId: neonEvmProgram, keys, data });\n}\n/**\n * Creates a **Solana transaction** to execute a **partial call or continue execution** of a **Neon EVM transaction**.\n *\n * This function is responsible for **processing large Ethereum-like transactions** on **Neon EVM**\n * by breaking them down into **smaller execution steps (EVM steps)** and **handling partial execution**.\n *\n * @param {number} index - The **current step index** in the transaction execution.\n * @param {number} stepCount - The **total number of execution steps** to be processed.\n * @param {PublicKey} neonEvmProgram - The **Neon EVM program ID** managing the execution of the transaction.\n * @param {SolanaNeonAccount} solanaUser - The **Solana account** executing the transaction.\n * @param {PublicKey} holderAddress - The **public key of the holder account** storing the transaction.\n * @param {TreasuryPoolAddress} treasuryPoolAddress - The **address of the treasury pool** used for transaction fees.\n * @param {HexString} transactionPart - The **raw transaction data** for the specific execution step.\n * @param {PublicKey[]} [additionAccounts=[]] - An optional array of **additional accounts** required for execution.\n * @returns {Transaction} A **Solana `Transaction` object**, ready to be signed and sent.\n *\n * ### **How It Works**\n * 1. **Requests a compute heap frame** of `256 KB` to allocate enough memory for processing.\n * 2. **Sets the compute unit price** to ensure priority execution.\n * 3. **Adds an instruction** to execute the partial call or continue processing from the last step.\n * 4. **Returns the constructed transaction** ready for submission.\n */\nfunction createPartialCallOrContinueFromRawEthereumTransaction(index, stepCount, neonEvmProgram, solanaUser, holderAddress, treasuryPoolAddress, transactionPart, additionAccounts = []) {\n    const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n    transaction.add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.ComputeBudgetProgram.requestHeapFrame({ bytes: 256 * 1024 }));\n    transaction.add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.ComputeBudgetProgram.setComputeUnitPrice({ microLamports: 1000000 }));\n    transaction.add(createPartialCallOrContinueFromRawEthereumInstruction(index, stepCount, neonEvmProgram, solanaUser.publicKey, solanaUser.balanceAddress, holderAddress, treasuryPoolAddress, additionAccounts, transactionPart));\n    return transaction;\n}\n/**\n * Prepare a Solana Instruction for the NeonProxyRpcApi.estimateScheduledTransactionGas() method\n * @param {TransactionInstruction} instruction - The **Solana instruction** data\n **/\nfunction prepareSolanaInstruction(instruction) {\n    const data = bs58__WEBPACK_IMPORTED_MODULE_1__[\"default\"].encode(instruction.data);\n    const programId = instruction.programId.toBase58();\n    const accounts = [];\n    for (const { pubkey, isSigner, isWritable } of instruction.keys) {\n        accounts.push({ address: pubkey.toBase58(), isSigner, isWritable });\n    }\n    return { programId, data, accounts };\n}\n/**\n * Prepare a Solana Instructions for the NeonProxyRpcApi.estimateScheduledTransactionGas() method\n * @param {TransactionInstruction[]} instructions - The **Solana instructions** data\n */\nfunction prepareSolanaInstructions(instructions) {\n    const result = [];\n    for (const instruction of instructions) {\n        result.push(prepareSolanaInstruction(instruction));\n    }\n    return result;\n}\n/**\n * Prepare a Solana Instructions for the NeonProxyRpcApi.estimateScheduledTransactionGas() method from {Transaction} data\n * @param {Transaction} transaction - The **Solana transaction** data that contain transaction instructions for prepare\n */\nfunction prepareSolanaTransaction(transaction) {\n    const instructions = [];\n    for (const instruction of transaction.instructions) {\n        instructions.push(prepareSolanaInstruction(instruction));\n    }\n    return { instructions };\n}\n/**\n * Creates a {MultipleTransaction} containing one or more {ScheduledTransaction}\n * instances that will be executed sequentially.\n * Used in the {NeonProxyRpcApi.createMultipleTransaction} method.\n *\n * @param {MultipleTransactionData} multipleData - the data used to create the MultipleTransaction.\n */\nconst createMultipleTransactionSequential = (multipleData) => {\n    const { nonce, chainId, transactionsData, transactionGas } = multipleData;\n    const { maxFeePerGas, maxPriorityFeePerGas, gasLimit } = transactionGas;\n    const multiple = new _neon__WEBPACK_IMPORTED_MODULE_5__.MultipleTransaction(nonce, maxFeePerGas, maxPriorityFeePerGas);\n    const transactions = [];\n    for (let index = 0; index < transactionsData.length; index++) {\n        const { from, to, data } = transactionsData[index];\n        const scheduledTransaction = new _neon__WEBPACK_IMPORTED_MODULE_5__.ScheduledTransaction({\n            index,\n            nonce,\n            chainId,\n            from,\n            to,\n            data,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit: gasLimit[index]\n        });\n        const childIndex = index === transactionsData.length - 1 ? _utils__WEBPACK_IMPORTED_MODULE_2__.NO_CHILD_INDEX : index + 1;\n        const successLimit = index === 0 ? 0 : 1;\n        multiple.addTransaction(scheduledTransaction, childIndex, successLimit);\n        transactions.push(scheduledTransaction);\n    }\n    return { multiple, transactions };\n};\n/**\n * Creates a {MultipleTransaction} containing one or more {ScheduledTransaction}\n * instances that will be executed parallel.\n * Used in the {NeonProxyRpcApi.createMultipleTransaction} method.\n *\n * @param {MultipleTransactionData} multipleData - the data used to create the MultipleTransaction\n */\nconst createMultipleTransactionParallel = (multipleData) => {\n    const { nonce, chainId, transactionsData, transactionGas } = multipleData;\n    const { maxFeePerGas, maxPriorityFeePerGas, gasLimit } = transactionGas;\n    const multiple = new _neon__WEBPACK_IMPORTED_MODULE_5__.MultipleTransaction(nonce, maxFeePerGas, maxPriorityFeePerGas);\n    const transactions = [];\n    for (let index = 0; index < transactionsData.length; index++) {\n        const { from, to, data } = transactionsData[index];\n        const scheduledTransaction = new _neon__WEBPACK_IMPORTED_MODULE_5__.ScheduledTransaction({\n            index,\n            nonce,\n            chainId,\n            from,\n            to,\n            data,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit: gasLimit[index]\n        });\n        multiple.addTransaction(scheduledTransaction, _utils__WEBPACK_IMPORTED_MODULE_2__.NO_CHILD_INDEX, 0);\n        transactions.push(scheduledTransaction);\n    }\n    return { multiple, transactions };\n};\n/**\n * Creates a {MultipleTransaction} containing one or more {ScheduledTransaction} instances,\n * where all transactions will be executed in parallel after the last transaction in the list is completed.\n * Used in the {NeonProxyRpcApi.createMultipleTransaction} method.\n *\n * @param {MultipleTransactionData} multipleData - the data used to create the MultipleTransaction\n */\nconst createMultipleTransactionDependLast = (multipleData) => {\n    const { nonce, chainId, transactionsData, transactionGas } = multipleData;\n    const { maxFeePerGas, maxPriorityFeePerGas, gasLimit } = transactionGas;\n    const multiple = new _neon__WEBPACK_IMPORTED_MODULE_5__.MultipleTransaction(nonce, maxFeePerGas, maxPriorityFeePerGas);\n    const transactions = [];\n    for (let index = 0; index < transactionsData.length - 1; index++) {\n        const { from, to, data } = transactionsData[index];\n        const scheduledTransaction = new _neon__WEBPACK_IMPORTED_MODULE_5__.ScheduledTransaction({\n            index,\n            nonce,\n            chainId,\n            from,\n            to,\n            data,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit: gasLimit[index]\n        });\n        const childIndex = transactionsData.length - 1;\n        const successLimit = 0;\n        multiple.addTransaction(scheduledTransaction, childIndex, successLimit);\n        transactions.push(scheduledTransaction);\n    }\n    const index = transactionsData.length - 1;\n    const { from, to, data } = transactionsData[index];\n    const scheduledTransaction = new _neon__WEBPACK_IMPORTED_MODULE_5__.ScheduledTransaction({\n        index,\n        nonce,\n        chainId,\n        from,\n        to,\n        data,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        gasLimit: gasLimit[index]\n    });\n    multiple.addTransaction(scheduledTransaction, _utils__WEBPACK_IMPORTED_MODULE_2__.NO_CHILD_INDEX, index);\n    transactions.push(scheduledTransaction);\n    return { multiple, transactions };\n};\n/**\n * Selects one of the transaction execution strategies (DependLast, Parallel, Sequential).\n *\n * @param {MultipleTransactionType} type - enum indicating the intended transaction execution type (defaults to sequential)\n */\nfunction selectMultipleTransactionMethod(type) {\n    switch (type) {\n        case 2 /* MultipleTransactionType.DependLast */:\n            return createMultipleTransactionDependLast;\n        case 1 /* MultipleTransactionType.Parallel */:\n            return createMultipleTransactionParallel;\n        case 0 /* MultipleTransactionType.Sequential */:\n        default:\n            return createMultipleTransactionSequential;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vc29sYW5hL3RyYW5zYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEyRztBQUN6QztBQUMvQjtBQUNYO0FBQ3dIO0FBQzVCO0FBQzRMO0FBQzVPO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsV0FBVztBQUN0QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxhQUFhO0FBQ3hCLFdBQVcsUUFBUTtBQUNuQixhQUFhLGFBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDRCQUE0Qix3REFBVztBQUN2QyxvQkFBb0IsOEVBQStCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFdBQVc7QUFDdEIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsV0FBVztBQUN0QixXQUFXLFFBQVE7QUFDbkIsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDRCQUE0Qix3REFBVztBQUN2QyxvQkFBb0IsK0VBQWdDO0FBQ3BELG9CQUFvQiw2RUFBOEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0NBQWdDO0FBQzNDLFdBQVcsUUFBUTtBQUNuQixXQUFXLFdBQVc7QUFDdEIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsV0FBVztBQUN0QixXQUFXLGFBQWE7QUFDeEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEIsYUFBYSxhQUFhO0FBQzFCO0FBQ087QUFDUCxZQUFZLHFIQUFxSDtBQUNqSSw0QkFBNEIsd0RBQVc7QUFDdkMsNkJBQTZCLHVFQUE2QjtBQUMxRCxpQ0FBaUMsb0VBQTBCO0FBQzNELG1DQUFtQyxzRUFBNEI7QUFDL0QsbUNBQW1DLGdGQUE2QjtBQUNoRSxvQkFBb0Isb0ZBQXFDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdDQUFnQztBQUMzQyxXQUFXLFFBQVE7QUFDbkIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsV0FBVztBQUN0QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxhQUFhO0FBQ3hCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxzQkFBc0I7QUFDbkM7QUFDTztBQUNQLFlBQVkseUdBQXlHO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQ0FBaUM7QUFDNUMsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsV0FBVztBQUN0QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxXQUFXO0FBQ3RCLGFBQWEsYUFBYTtBQUMxQjtBQUNPO0FBQ1AsWUFBWSxvRUFBb0U7QUFDaEYsNEJBQTRCLHdEQUFXO0FBQ3ZDLG9CQUFvQixxRkFBc0M7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsc0JBQXNCO0FBQ2pDLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSwwQ0FBMEMsK0JBQStCO0FBQ3pFLDRCQUE0QixpREFBUztBQUNyQyxlQUFlLG1EQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHdEQUFXO0FBQzNDO0FBQ0Esd0JBQXdCLG9GQUFxQztBQUM3RCxzQkFBc0IsNkRBQXFCLHdEQUF3RCxrQ0FBa0M7QUFDckk7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZDQUE2QztBQUM3RCxRQUFRLDJDQUFHO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsV0FBVztBQUN0QixXQUFXLFFBQVE7QUFDbkIsYUFBYSxlQUFlO0FBQzVCO0FBQ087QUFDUDtBQUNBO0FBQ0EsVUFBVSw2REFBcUIsd0RBQXdELGtDQUFrQztBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsV0FBVztBQUN0QixXQUFXLG1CQUFtQjtBQUM5QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxxQkFBcUI7QUFDaEMsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsYUFBYTtBQUN4QixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHlGQUF5Riw2Q0FBUztBQUNsRyxnQkFBZ0IsWUFBWSxRQUFRLDZEQUFxQix3REFBd0Qsa0NBQWtDLGFBQWEsTUFBTTtBQUN0SyxjQUFjLDZDQUFLO0FBQ25CLHFFQUFxRSx5QkFBeUI7QUFDOUY7QUFDQTtBQUNBLElBQUksMkNBQUc7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFdBQVc7QUFDdEIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsV0FBVztBQUN0QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsUUFBUTtBQUNuQixXQUFXLGFBQWE7QUFDeEIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw0QkFBNEIsd0RBQVc7QUFDdkMsb0JBQW9CLGlFQUFvQixvQkFBb0IsbUJBQW1CO0FBQy9FLG9CQUFvQixpRUFBb0IsdUJBQXVCLHdCQUF3QjtBQUN2RixvQkFBb0Isb0dBQXFEO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsV0FBVztBQUN0QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcscUJBQXFCO0FBQ2hDLFdBQVcsYUFBYTtBQUN4QixXQUFXLFdBQVc7QUFDdEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsV0FBVztBQUN0QixhQUFhLHdCQUF3QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0JBQWdCLDBEQUFhO0FBQzdCLGlCQUFpQixvREFBWTtBQUM3QixRQUFRLHNEQUFjO0FBQ3RCO0FBQ0EsUUFBUSxtREFBVztBQUNuQixRQUFRLG1EQUFXO0FBQ25CLFFBQVEsbURBQVc7QUFDbkI7QUFDQTtBQUNBLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsMEVBQTBFO0FBQ3BGLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVU7QUFDVjtBQUNBO0FBQ0Esb0JBQW9CLGdEQUFnRDtBQUNwRTtBQUNBLGVBQWUsbUVBQXNCLEdBQUcsdUNBQXVDO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFdBQVc7QUFDdEIsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcscUJBQXFCO0FBQ2hDLFdBQVcsV0FBVztBQUN0QixXQUFXLGFBQWE7QUFDeEIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw0QkFBNEIsd0RBQVc7QUFDdkMsb0JBQW9CLGlFQUFvQixvQkFBb0IsbUJBQW1CO0FBQy9FLG9CQUFvQixpRUFBb0IsdUJBQXVCLHdCQUF3QjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3QkFBd0I7QUFDbkM7QUFDTztBQUNQLGlCQUFpQiw0Q0FBSTtBQUNyQjtBQUNBO0FBQ0EsaUJBQWlCLCtCQUErQjtBQUNoRCx3QkFBd0Isa0RBQWtEO0FBQzFFO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdHQUF3RyxhQUFhO0FBQ3JILFdBQVcsYUFBYTtBQUN4QjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGNBQWMscUJBQXFCLHdCQUF3QjtBQUMzRDtBQUNBLGdCQUFnQiwyQ0FBMkM7QUFDM0Q7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQztBQUNPO0FBQ1AsWUFBWSxtREFBbUQ7QUFDL0QsWUFBWSwrQ0FBK0M7QUFDM0QseUJBQXlCLHNEQUFtQjtBQUM1QztBQUNBLHdCQUF3QixpQ0FBaUM7QUFDekQsZ0JBQWdCLGlCQUFpQjtBQUNqQyx5Q0FBeUMsdURBQW9CO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxtRUFBbUUsa0RBQWM7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGNBQWMscUJBQXFCLHdCQUF3QjtBQUMzRDtBQUNBLGdCQUFnQiwyQ0FBMkM7QUFDM0Q7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQztBQUNPO0FBQ1AsWUFBWSxtREFBbUQ7QUFDL0QsWUFBWSwrQ0FBK0M7QUFDM0QseUJBQXlCLHNEQUFtQjtBQUM1QztBQUNBLHdCQUF3QixpQ0FBaUM7QUFDekQsZ0JBQWdCLGlCQUFpQjtBQUNqQyx5Q0FBeUMsdURBQW9CO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxzREFBc0Qsa0RBQWM7QUFDcEU7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsY0FBYyxxQkFBcUIsd0JBQXdCLHNCQUFzQjtBQUNqRjtBQUNBLGdCQUFnQiwyQ0FBMkM7QUFDM0Q7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQztBQUNPO0FBQ1AsWUFBWSxtREFBbUQ7QUFDL0QsWUFBWSwrQ0FBK0M7QUFDM0QseUJBQXlCLHNEQUFtQjtBQUM1QztBQUNBLHdCQUF3QixxQ0FBcUM7QUFDN0QsZ0JBQWdCLGlCQUFpQjtBQUNqQyx5Q0FBeUMsdURBQW9CO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlCQUFpQjtBQUM3QixxQ0FBcUMsdURBQW9CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxrREFBa0Qsa0RBQWM7QUFDaEU7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQztBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBjYXJkLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BuZW9uZXZtL3NvbGFuYS1zaWduL2Rpc3QvZXNtL3NvbGFuYS90cmFuc2FjdGlvbnMuanM/ZDUxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wdXRlQnVkZ2V0UHJvZ3JhbSwgU3lzdGVtUHJvZ3JhbSwgVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IHsgZ2V0QXNzb2NpYXRlZFRva2VuQWRkcmVzc1N5bmMgfSBmcm9tICdAc29sYW5hL3NwbC10b2tlbic7XG5pbXBvcnQgeyBrZWNjYWsyNTYgfSBmcm9tICdldGhlcnMnO1xuaW1wb3J0IGJzNTggZnJvbSAnYnM1OCc7XG5pbXBvcnQgeyBidWZmZXJDb25jYXQsIGRlbGF5LCBFVk1fU1RFUFMsIGhleFRvQnVmZmVyLCBsb2csIE5PX0NISUxEX0lOREVYLCBudW1iZXJUb0J1ZmZlciwgc2VuZFNvbGFuYVRyYW5zYWN0aW9uLCB0b0J5dGVzNjRMRSB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7IG5lb25BdXRob3JpdHlQb29sQWRkcmVzc1N5bmMsIG5lb25CYWxhbmNlUHJvZ3JhbUFkZHJlc3NTeW5jLCBuZW9uVHJlZUFjY291bnRBZGRyZXNzU3luYyB9IGZyb20gJy4vYWNjb3VudCc7XG5pbXBvcnQgeyBjcmVhdGVBY2NvdW50V2l0aFNlZWRJbnN0cnVjdGlvbiwgY3JlYXRlQmFsYW5jZUFjY291bnRJbnN0cnVjdGlvbiwgY3JlYXRlSG9sZGVyQWNjb3VudEluc3RydWN0aW9uLCBjcmVhdGVTY2hlZHVsZWRUcmFuc2FjdGlvbkluc3RydWN0aW9uLCBjcmVhdGVTY2hlZHVsZWRUcmFuc2FjdGlvblN0YXJ0RnJvbUFjY291bnRJbnN0cnVjdGlvbiwgY3JlYXRlV3JpdGVUb0hvbGRlckFjY291bnRJbnN0cnVjdGlvbiwgZGVzdHJveVNjaGVkdWxlZFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24gfSBmcm9tICcuL2luc3RydWN0aW9ucyc7XG5pbXBvcnQgeyBNdWx0aXBsZVRyYW5zYWN0aW9uLCBTY2hlZHVsZWRUcmFuc2FjdGlvbiB9IGZyb20gJy4uL25lb24nO1xuLyoqXG4gKiBDcmVhdGVzIGEgKipTb2xhbmEgdHJhbnNhY3Rpb24qKiB0byBpbml0aWFsaXplIGEgYmFsYW5jZSBhY2NvdW50IGZvciBhIGdpdmVuICoqTmVvbiBFVk0gd2FsbGV0KiouXG4gKlxuICogVGhpcyBmdW5jdGlvbiBnZW5lcmF0ZXMgYSB0cmFuc2FjdGlvbiB0aGF0IGNvbnRhaW5zIGFuICoqaW5zdHJ1Y3Rpb24qKiB0byBjcmVhdGUgYSAqKmJhbGFuY2UgYWNjb3VudCoqLFxuICogZW5zdXJpbmcgdGhhdCB0aGUgc3BlY2lmaWVkICoqTmVvbiBhZGRyZXNzKiogaGFzIGEgY29ycmVzcG9uZGluZyBiYWxhbmNlIHRyYWNraW5nIGFjY291bnQgb24gKipTb2xhbmEqKi5cbiAqXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gbmVvbkV2bVByb2dyYW0gLSBUaGUgcHVibGljIGtleSBvZiB0aGUgKipOZW9uIEVWTSBwcm9ncmFtKiouXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gc29sYW5hV2FsbGV0IC0gVGhlIHB1YmxpYyBrZXkgb2YgdGhlICoqU29sYW5hIHdhbGxldCoqIGluaXRpYXRpbmcgdGhlIHRyYW5zYWN0aW9uLlxuICogQHBhcmFtIHtOZW9uQWRkcmVzc30gbmVvbkFkZHJlc3MgLSBUaGUgKipOZW9uIEVWTSB3YWxsZXQgYWRkcmVzcyoqIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGJhbGFuY2UgYWNjb3VudC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBjaGFpbklkIC0gVGhlICoqY2hhaW4gSUQqKiByZXByZXNlbnRpbmcgdGhlIG5ldHdvcmsgd2hlcmUgdGhlIHRyYW5zYWN0aW9uIGlzIGV4ZWN1dGVkLlxuICogQHJldHVybnMge1RyYW5zYWN0aW9ufSBBICoqU29sYW5hIGBUcmFuc2FjdGlvbmAgb2JqZWN0KiosIHJlYWR5IHRvIGJlIHNpZ25lZCBhbmQgc2VudC5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogY29uc3QgdHJhbnNhY3Rpb24gPSBjcmVhdGVCYWxhbmNlQWNjb3VudFRyYW5zYWN0aW9uKFxuICogICBuZW9uRXZtUHJvZ3JhbSxcbiAqICAgc29sYW5hV2FsbGV0LFxuICogICBcIjB4TmVvbldhbGxldEFkZHJlc3NcIixcbiAqICAgMjQ1MDIyOTI2XG4gKiApO1xuICogdHJhbnNhY3Rpb24ucmVjZW50QmxvY2toYXNoID0gKGF3YWl0IGNvbm5lY3Rpb24uZ2V0TGF0ZXN0QmxvY2toYXNoKCkpLmJsb2NraGFzaDtcbiAqIGNvbnN0IHNpZ25hdHVyZSA9IGF3YWl0IGNvbm5lY3Rpb24uc2VuZFRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uLCBbc2lnbmVyXSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJhbGFuY2VBY2NvdW50VHJhbnNhY3Rpb24obmVvbkV2bVByb2dyYW0sIHNvbGFuYVdhbGxldCwgbmVvbkFkZHJlc3MsIGNoYWluSWQpIHtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpO1xuICAgIHRyYW5zYWN0aW9uLmFkZChjcmVhdGVCYWxhbmNlQWNjb3VudEluc3RydWN0aW9uKG5lb25Fdm1Qcm9ncmFtLCBzb2xhbmFXYWxsZXQsIG5lb25BZGRyZXNzLCBjaGFpbklkKSk7XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgKipTb2xhbmEgdHJhbnNhY3Rpb24qKiB0byBpbml0aWFsaXplIGEgKipob2xkZXIgYWNjb3VudCoqLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gY29uc3RydWN0cyBhIHRyYW5zYWN0aW9uIGNvbnRhaW5pbmc6XG4gKiAtIEFuIGluc3RydWN0aW9uIHRvICoqY3JlYXRlIGFuIGFjY291bnQgd2l0aCBhIGRldGVybWluaXN0aWMgc2VlZCoqLlxuICogLSBBbiBpbnN0cnVjdGlvbiB0byAqKmluaXRpYWxpemUgdGhlIGhvbGRlciBhY2NvdW50Kiogd2l0aGluIHRoZSAqKk5lb24gRVZNIHByb2dyYW0qKi5cbiAqXG4gKiBUaGUgKipob2xkZXIgYWNjb3VudCoqIGlzIHVzZWQgZm9yICoqc3RvcmluZyB0ZW1wb3JhcnkgdHJhbnNhY3Rpb24gZGF0YSoqIGFuZCAqKnByb2Nlc3NpbmcgTmVvbiBFVk0gdHJhbnNhY3Rpb25zKiouXG4gKlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IG5lb25Fdm1Qcm9ncmFtIC0gVGhlIHB1YmxpYyBrZXkgb2YgdGhlICoqTmVvbiBFVk0gcHJvZ3JhbSoqLlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IHNvbGFuYVdhbGxldCAtIFRoZSBwdWJsaWMga2V5IG9mIHRoZSAqKlNvbGFuYSB3YWxsZXQqKiBpbml0aWF0aW5nIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBob2xkZXJBY2NvdW50IC0gVGhlICoqcHVibGljIGtleSBvZiB0aGUgaG9sZGVyIGFjY291bnQqKiB0byBiZSBjcmVhdGVkLlxuICogQHBhcmFtIHtzdHJpbmd9IGhvbGRlclNlZWQgLSBUaGUgKip1bmlxdWUgc2VlZCoqIHVzZWQgdG8gZGVyaXZlIHRoZSBob2xkZXIgYWNjb3VudCBhZGRyZXNzLlxuICogQHJldHVybnMge1Byb21pc2U8VHJhbnNhY3Rpb24+fSBBICoqU29sYW5hIGBUcmFuc2FjdGlvbmAgb2JqZWN0KiosIHJlYWR5IHRvIGJlIHNpZ25lZCBhbmQgc2VudC5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogY29uc3QgdHJhbnNhY3Rpb24gPSBhd2FpdCBjcmVhdGVIb2xkZXJBY2NvdW50VHJhbnNhY3Rpb24oXG4gKiAgIG5lb25Fdm1Qcm9ncmFtLFxuICogICBzb2xhbmFXYWxsZXQsXG4gKiAgIGhvbGRlckFjY291bnQsXG4gKiAgIFwidW5pcXVlLWhvbGRlci1zZWVkXCJcbiAqICk7XG4gKiB0cmFuc2FjdGlvbi5yZWNlbnRCbG9ja2hhc2ggPSAoYXdhaXQgY29ubmVjdGlvbi5nZXRMYXRlc3RCbG9ja2hhc2goKSkuYmxvY2toYXNoO1xuICogY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgY29ubmVjdGlvbi5zZW5kVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24sIFtzaWduZXJdKTtcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlSG9sZGVyQWNjb3VudFRyYW5zYWN0aW9uKG5lb25Fdm1Qcm9ncmFtLCBzb2xhbmFXYWxsZXQsIGhvbGRlckFjY291bnQsIGhvbGRlclNlZWQpIHtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpO1xuICAgIHRyYW5zYWN0aW9uLmFkZChjcmVhdGVBY2NvdW50V2l0aFNlZWRJbnN0cnVjdGlvbihuZW9uRXZtUHJvZ3JhbSwgc29sYW5hV2FsbGV0LCBob2xkZXJBY2NvdW50LCBob2xkZXJTZWVkLCAxMjggKiAxMDI0LCAxZTkpKTtcbiAgICB0cmFuc2FjdGlvbi5hZGQoY3JlYXRlSG9sZGVyQWNjb3VudEluc3RydWN0aW9uKG5lb25Fdm1Qcm9ncmFtLCBzb2xhbmFXYWxsZXQsIGhvbGRlckFjY291bnQsIGhvbGRlclNlZWQpKTtcbiAgICByZXR1cm4gdHJhbnNhY3Rpb247XG59XG4vKipcbiAqIENyZWF0ZXMgYSAqKlNvbGFuYSB0cmFuc2FjdGlvbioqIHRvIHNjaGVkdWxlIGEgKipOZW9uIEVWTSB0cmFuc2FjdGlvbioqLCBlbmFibGluZyB0aGUgZXhlY3V0aW9uIG9mIGEgKipOZW9uIFRyYW5zYWN0aW9uIHRyZWUqKi5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uYWxpdHkgYWxsb3dzIGZvciB0aGUgKiphdXRvbWF0aWMgc3BsaXR0aW5nIG9mIGxhcmdlIEV0aGVyZXVtLWxpa2UgdHJhbnNhY3Rpb25zKiogaW50byAqKnNtYWxsZXIsIGluZGVwZW5kZW50IE5lb24gdHJhbnNhY3Rpb25zKiouXG4gKiBJbiB0aGlzIG1vZGVsLCBhbiBpbmRpdmlkdWFsIE5lb24gdHJhbnNhY3Rpb24gKiptYXkgZmFpbCB3aXRob3V0IGFmZmVjdGluZyB0aGUgZW50aXJlIHRyYW5zYWN0aW9uIGZsb3cqKiwgYXMgdGhlIHJlc3VsdHMgb2YgZXhlY3V0ZWQgTmVvbiB0cmFuc2FjdGlvbnMgY2FuIGJlICoqYWdncmVnYXRlZCBhbmQgaGFuZGxlZCoqLlxuICpcbiAqIEBwYXJhbSB7Q3JlYXRlU2NoZWR1bGVkVHJhbnNhY3Rpb25EYXRhfSB0cmFuc2FjdGlvbkRhdGEgLSBUaGUgc3RydWN0dXJlZCBkYXRhIHJlcXVpcmVkIHRvIGNyZWF0ZSBhIHNjaGVkdWxlZCBOZW9uIEVWTSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7bnVtYmVyfSB0cmFuc2FjdGlvbkRhdGEuY2hhaW5JZCAtIFRoZSAqKmNoYWluIElEKiogcmVwcmVzZW50aW5nIHRoZSB0YXJnZXQgYmxvY2tjaGFpbiBuZXR3b3JrLlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IHRyYW5zYWN0aW9uRGF0YS5zaWduZXJBZGRyZXNzIC0gVGhlICoqcHVibGljIGtleSoqIG9mIHRoZSAqKnNpZ25pbmcgYWNjb3VudCoqIHJlc3BvbnNpYmxlIGZvciBpbml0aWF0aW5nIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSB0cmFuc2FjdGlvbkRhdGEudG9rZW5NaW50QWRkcmVzcyAtIFRoZSAqKnB1YmxpYyBrZXkqKiBvZiB0aGUgKip0b2tlbiBtaW50IGFjY291bnQqKiBhc3NvY2lhdGVkIHdpdGggdGhlIHRyYW5zYWN0aW9uLlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IHRyYW5zYWN0aW9uRGF0YS5uZW9uRXZtUHJvZ3JhbSAtIFRoZSAqKk5lb24gRVZNIHByb2dyYW0gSUQqKiB1c2VkIGZvciB0cmFuc2FjdGlvbiBleGVjdXRpb24uXG4gKiBAcGFyYW0ge05lb25BZGRyZXNzfSB0cmFuc2FjdGlvbkRhdGEubmVvbldhbGxldCAtIFRoZSAqKk5lb24gd2FsbGV0IGFkZHJlc3MqKiBhc3NvY2lhdGVkIHdpdGggdGhlIHRyYW5zYWN0aW9uLlxuICogQHBhcmFtIHtudW1iZXJ9IHRyYW5zYWN0aW9uRGF0YS5uZW9uV2FsbGV0Tm9uY2UgLSBBICoqbm9uY2UgdmFsdWUqKiBvZiB0aGUgcm9vdCAqKk5lb24gdHJhbnNhY3Rpb24qKiBpbiB0aGUgdHJlZSBvZiBzY2hlZHVsZWQgTmVvbiB0cmFuc2FjdGlvbnMuXG4gKiBAcGFyYW0ge3N0cmluZ30gdHJhbnNhY3Rpb25EYXRhLm5lb25UcmFuc2FjdGlvbiAtIFRoZSAqKnJhdyBOZW9uIEVWTSB0cmFuc2FjdGlvbiBkYXRhKiouXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHRyYW5zYWN0aW9uRGF0YS5pc011bHRpcGxlIC0gQSAqKmZsYWcgaW5kaWNhdGluZyB3aGV0aGVyIG11bHRpcGxlIHRyYW5zYWN0aW9ucyBhcmUgc2NoZWR1bGVkIHRvZ2V0aGVyKiouXG4gKiBAcmV0dXJucyB7VHJhbnNhY3Rpb259IEEgKipTb2xhbmEgYFRyYW5zYWN0aW9uYCBvYmplY3QqKiwgcmVhZHkgdG8gYmUgc2lnbmVkIGFuZCBzZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2NoZWR1bGVkTmVvbkV2bVRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uRGF0YSkge1xuICAgIGNvbnN0IHsgY2hhaW5JZCwgc2lnbmVyQWRkcmVzcywgdG9rZW5NaW50QWRkcmVzcywgbmVvbkV2bVByb2dyYW0sIG5lb25XYWxsZXQsIG5lb25XYWxsZXROb25jZSwgbmVvblRyYW5zYWN0aW9uLCBpc011bHRpcGxlIH0gPSB0cmFuc2FjdGlvbkRhdGE7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKTtcbiAgICBjb25zdCBbYmFsYW5jZUFkZHJlc3NdID0gbmVvbkJhbGFuY2VQcm9ncmFtQWRkcmVzc1N5bmMobmVvbldhbGxldCwgbmVvbkV2bVByb2dyYW0sIGNoYWluSWQpO1xuICAgIGNvbnN0IFt0cmVlQWNjb3VudEFkZHJlc3NdID0gbmVvblRyZWVBY2NvdW50QWRkcmVzc1N5bmMobmVvbldhbGxldCwgbmVvbkV2bVByb2dyYW0sIGNoYWluSWQsIG5lb25XYWxsZXROb25jZSk7XG4gICAgY29uc3QgW2F1dGhvcml0eVBvb2xBZGRyZXNzXSA9IG5lb25BdXRob3JpdHlQb29sQWRkcmVzc1N5bmMobmVvbkV2bVByb2dyYW0pO1xuICAgIGNvbnN0IGFzc29jaWF0ZWRUb2tlbkFkZHJlc3MgPSBnZXRBc3NvY2lhdGVkVG9rZW5BZGRyZXNzU3luYyh0b2tlbk1pbnRBZGRyZXNzLCBhdXRob3JpdHlQb29sQWRkcmVzcywgdHJ1ZSk7XG4gICAgdHJhbnNhY3Rpb24uYWRkKGNyZWF0ZVNjaGVkdWxlZFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oe1xuICAgICAgICBuZW9uRXZtUHJvZ3JhbSxcbiAgICAgICAgc2lnbmVyQWRkcmVzcyxcbiAgICAgICAgYmFsYW5jZUFkZHJlc3MsXG4gICAgICAgIHRyZWVBY2NvdW50QWRkcmVzcyxcbiAgICAgICAgYXNzb2NpYXRlZFRva2VuQWRkcmVzcyxcbiAgICAgICAgbmVvblRyYW5zYWN0aW9uLFxuICAgICAgICBpc011bHRpcGxlXG4gICAgfSkpO1xuICAgIHJldHVybiB0cmFuc2FjdGlvbjtcbn1cbi8qKlxuICogQ3JlYXRlcyBhICoqU29sYW5hIHRyYW5zYWN0aW9uKiogdG8gc2NoZWR1bGUgbXVsdGlwbGUgKipOZW9uIEVWTSB0cmFuc2FjdGlvbnMqKiBhcyBwYXJ0IG9mIGEgKipOZW9uIHRyYW5zYWN0aW9uIHRyZWUgZXhlY3V0aW9uKiouXG4gKlxuICogVGhpcyBmdW5jdGlvbiB3cmFwcyBgY3JlYXRlU2NoZWR1bGVkTmVvbkV2bVRyYW5zYWN0aW9uYCBidXQgZXhwbGljaXRseSBzZXRzIGBpc011bHRpcGxlOiB0cnVlYCxcbiAqIGFsbG93aW5nIHRoZSBleGVjdXRpb24gb2YgKiptdWx0aXBsZSBkZXBlbmRlbnQgdHJhbnNhY3Rpb25zKiogd2l0aGluIHRoZSBzYW1lIHNjaGVkdWxlZCBwcm9jZXNzLlxuICpcbiAqIEBwYXJhbSB7Q3JlYXRlU2NoZWR1bGVkVHJhbnNhY3Rpb25EYXRhfSB0cmFuc2FjdGlvbkRhdGEgLSBUaGUgc3RydWN0dXJlZCBkYXRhIHJlcXVpcmVkIHRvIGNyZWF0ZSBhIHNjaGVkdWxlZCBOZW9uIEVWTSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7bnVtYmVyfSB0cmFuc2FjdGlvbkRhdGEuY2hhaW5JZCAtIFRoZSAqKmNoYWluIElEKiogcmVwcmVzZW50aW5nIHRoZSB0YXJnZXQgYmxvY2tjaGFpbiBuZXR3b3JrLlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IHRyYW5zYWN0aW9uRGF0YS5zaWduZXJBZGRyZXNzIC0gVGhlICoqcHVibGljIGtleSoqIG9mIHRoZSAqKnNpZ25pbmcgYWNjb3VudCoqIHJlc3BvbnNpYmxlIGZvciBpbml0aWF0aW5nIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSB0cmFuc2FjdGlvbkRhdGEudG9rZW5NaW50QWRkcmVzcyAtIFRoZSAqKnB1YmxpYyBrZXkqKiBvZiB0aGUgKip0b2tlbiBtaW50IGFjY291bnQqKiBhc3NvY2lhdGVkIHdpdGggdGhlIHRyYW5zYWN0aW9uLlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IHRyYW5zYWN0aW9uRGF0YS5uZW9uRXZtUHJvZ3JhbSAtIFRoZSAqKk5lb24gRVZNIHByb2dyYW0gSUQqKiB1c2VkIGZvciB0cmFuc2FjdGlvbiBleGVjdXRpb24uXG4gKiBAcGFyYW0ge05lb25BZGRyZXNzfSB0cmFuc2FjdGlvbkRhdGEubmVvbldhbGxldCAtIFRoZSAqKk5lb24gd2FsbGV0IGFkZHJlc3MqKiBhc3NvY2lhdGVkIHdpdGggdGhlIHRyYW5zYWN0aW9uLlxuICogQHBhcmFtIHtudW1iZXJ9IHRyYW5zYWN0aW9uRGF0YS5uZW9uV2FsbGV0Tm9uY2UgLSBBICoqbm9uY2UgdmFsdWUqKiBvZiB0aGUgcm9vdCAqKk5lb24gdHJhbnNhY3Rpb24qKiBpbiB0aGUgdHJlZSBvZiBzY2hlZHVsZWQgTmVvbiB0cmFuc2FjdGlvbnMuXG4gKiBAcGFyYW0ge3N0cmluZ30gdHJhbnNhY3Rpb25EYXRhLm5lb25UcmFuc2FjdGlvbiAtIFRoZSAqKnJhdyBOZW9uIEVWTSB0cmFuc2FjdGlvbiBkYXRhKiouXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxUcmFuc2FjdGlvbj59IEEgKipTb2xhbmEgYFRyYW5zYWN0aW9uYCBvYmplY3QqKiwgcmVhZHkgdG8gYmUgc2lnbmVkIGFuZCBzZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2NoZWR1bGVkTmVvbkV2bU11bHRpcGxlVHJhbnNhY3Rpb24odHJhbnNhY3Rpb25EYXRhKSB7XG4gICAgY29uc3QgeyBjaGFpbklkLCBzaWduZXJBZGRyZXNzLCB0b2tlbk1pbnRBZGRyZXNzLCBuZW9uRXZtUHJvZ3JhbSwgbmVvbldhbGxldCwgbmVvbldhbGxldE5vbmNlLCBuZW9uVHJhbnNhY3Rpb24gfSA9IHRyYW5zYWN0aW9uRGF0YTtcbiAgICByZXR1cm4gY3JlYXRlU2NoZWR1bGVkTmVvbkV2bVRyYW5zYWN0aW9uKHtcbiAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgc2lnbmVyQWRkcmVzcyxcbiAgICAgICAgdG9rZW5NaW50QWRkcmVzcyxcbiAgICAgICAgbmVvbkV2bVByb2dyYW0sXG4gICAgICAgIG5lb25XYWxsZXQsXG4gICAgICAgIG5lb25XYWxsZXROb25jZSxcbiAgICAgICAgbmVvblRyYW5zYWN0aW9uLFxuICAgICAgICBpc011bHRpcGxlOiB0cnVlXG4gICAgfSk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSAqKlNvbGFuYSB0cmFuc2FjdGlvbioqIHRvICoqZGVzdHJveSBhIHNjaGVkdWxlZCBOZW9uIEVWTSBUcmVlQWNjb3VudCoqLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gcmVtb3ZlcyBhIHByZXZpb3VzbHkgc2NoZWR1bGVkICoqTmVvbiBFVk0gdHJhbnNhY3Rpb24qKiBieSBkZXN0cm95aW5nIGl0cyAqKlRyZWVBY2NvdW50KiosXG4gKiBlbnN1cmluZyBwcm9wZXIgY2xlYW51cCBhbmQgcmV0dXJuaW5nIHVuc3BlbnQgZmVlcyB0byB0aGUgYXBwcm9wcmlhdGUgYWNjb3VudHMuXG4gKlxuICogIyMjICoqQ29uZGl0aW9ucyBmb3IgRGVzdHJveWluZyBhIFRyZWVBY2NvdW50OioqXG4gKiAtIFRoZSAqKlRyZWVBY2NvdW50KiogbXVzdCBub3QgaGF2ZSBhbnkgKiphY3RpdmUqKiB0cmFuc2FjdGlvbnMgYmVpbmcgcHJvY2Vzc2VkLlxuICogLSBUaGUgKipUcmVlQWNjb3VudCoqIGNhbiBiZSBkZXN0cm95ZWQgaWY6XG4gKiAgIC0gVGhlcmUgYXJlICoqbm8gdW5wcm9jZXNzZWQgTmVvbiB0cmFuc2FjdGlvbnMqKiBpbiB0aGUgYWNjb3VudC5cbiAqICAgLSBUaGUgKipsYXN0IHRyYW5zYWN0aW9uIHNsb3QqKiBpcyAqKmF0IGxlYXN0IDkwMDAgc2xvdHMgb2xkKiogKH4xIGhvdXIpLlxuICpcbiAqICMjIyAqKkZ1bmQgRGlzdHJpYnV0aW9uIFVwb24gRGVzdHJ1Y3Rpb246KipcbiAqIC0gKipSZW50LWV4ZW1wdCBTT0wqKiBpcyByZXR1cm5lZCB0byB0aGUgKipUcmVhc3VyeUFjY291bnQqKi5cbiAqIC0gVGhlIHJlbWFpbmluZyAqKmdhcyB0b2tlbnMqKiBhcmUgdHJhbnNmZXJyZWQgdG8gdGhlICoqcGF5ZXIncyBiYWxhbmNlIGFjY291bnQqKi5cbiAqXG4gKiBAcGFyYW0ge0Rlc3Ryb3lTY2hlZHVsZWRUcmFuc2FjdGlvbkRhdGF9IHRyYW5zYWN0aW9uRGF0YSAtIFRoZSBzdHJ1Y3R1cmVkIGRhdGEgcmVxdWlyZWQgdG8gZGVzdHJveSBhIHNjaGVkdWxlZCB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSB0cmFuc2FjdGlvbkRhdGEuc2lnbmVyQWRkcmVzcyAtIFRoZSAqKnB1YmxpYyBrZXkqKiBvZiB0aGUgKipOZW9uIE9wZXJhdG9yKiogcmVzcG9uc2libGUgZm9yIGRlc3RydWN0aW9uLlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IHRyYW5zYWN0aW9uRGF0YS5uZW9uRXZtUHJvZ3JhbSAtIFRoZSAqKk5lb24gRVZNIHByb2dyYW0gSUQqKiB3aGVyZSB0aGUgc2NoZWR1bGVkIHRyYW5zYWN0aW9uIGV4aXN0cy5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSB0cmFuc2FjdGlvbkRhdGEuYmFsYW5jZUFkZHJlc3MgLSBUaGUgKipwdWJsaWMga2V5Kiogb2YgdGhlICoqcGF5ZXIncyBiYWxhbmNlIGFjY291bnQqKi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSB0cmFuc2FjdGlvbkRhdGEudHJlZUFjY291bnRBZGRyZXNzIC0gVGhlICoqcHVibGljIGtleSoqIG9mIHRoZSAqKlRyZWVBY2NvdW50KiogYmVpbmcgZGVzdHJveWVkLlxuICogQHJldHVybnMge1RyYW5zYWN0aW9ufSBBICoqU29sYW5hIGBUcmFuc2FjdGlvbmAgb2JqZWN0KiosIHJlYWR5IHRvIGJlIHNpZ25lZCBhbmQgc2VudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlc3Ryb3lTY2hlZHVsZWROZW9uRXZtTXVsdGlwbGVUcmFuc2FjdGlvbih0cmFuc2FjdGlvbkRhdGEpIHtcbiAgICBjb25zdCB7IHNpZ25lckFkZHJlc3MsIG5lb25Fdm1Qcm9ncmFtLCBiYWxhbmNlQWRkcmVzcywgdHJlZUFjY291bnRBZGRyZXNzIH0gPSB0cmFuc2FjdGlvbkRhdGE7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKTtcbiAgICB0cmFuc2FjdGlvbi5hZGQoZGVzdHJveVNjaGVkdWxlZFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oe1xuICAgICAgICBuZW9uRXZtUHJvZ3JhbSxcbiAgICAgICAgc2lnbmVyQWRkcmVzcyxcbiAgICAgICAgYmFsYW5jZUFkZHJlc3MsXG4gICAgICAgIHRyZWVBY2NvdW50QWRkcmVzc1xuICAgIH0pKTtcbiAgICByZXR1cm4gdHJhbnNhY3Rpb247XG59XG4vKipcbiAqIFdyaXRlcyBhICoqc2NoZWR1bGVkIE5lb24gRVZNIHRyYW5zYWN0aW9uKiogaW50byBhICoqU29sYW5hIGhvbGRlciBhY2NvdW50KiogYnkgc3BsaXR0aW5nIGl0IGludG8gY2h1bmtzLlxuICpcbiAqIFNpbmNlIFNvbGFuYSB0cmFuc2FjdGlvbnMgaGF2ZSBhICoqc2l6ZSBsaW1pdCoqLCB0aGlzIGZ1bmN0aW9uICoqc3BsaXRzIGEgc2NoZWR1bGVkIE5lb24gdHJhbnNhY3Rpb24qKlxuICogaW50byBzbWFsbGVyICoqY2h1bmtzKiogYW5kIHNlcXVlbnRpYWxseSB3cml0ZXMgdGhlbSBpbnRvIHRoZSAqKmhvbGRlciBhY2NvdW50KiouXG4gKlxuICogQHBhcmFtIHtDb25uZWN0aW9ufSBjb25uZWN0aW9uIC0gVGhlICoqU29sYW5hIGNvbm5lY3Rpb24gaW5zdGFuY2UqKiB0byBpbnRlcmFjdCB3aXRoIHRoZSBibG9ja2NoYWluLlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IG5lb25Fdm1Qcm9ncmFtIC0gVGhlICoqTmVvbiBFVk0gcHJvZ3JhbSoqIG1hbmFnaW5nIHRoZSBzY2hlZHVsZWQgdHJhbnNhY3Rpb24uXG4gKiBAcGFyYW0ge1NvbGFuYU5lb25BY2NvdW50fSBzb2xhbmFVc2VyIC0gVGhlICoqU29sYW5hIGFjY291bnQqKiBzaWduaW5nIGFuZCBmdW5kaW5nIHRoZSB0cmFuc2FjdGlvbiBhc3NvY2lhdGVkIHdpdGggdGhlIE5lb24gd2FsbGV0LlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IGhvbGRlckFkZHJlc3MgLSBUaGUgKipwdWJsaWMga2V5IG9mIHRoZSBob2xkZXIgYWNjb3VudCoqIHdoZXJlIHRyYW5zYWN0aW9uIGRhdGEgaXMgc3RvcmVkLlxuICogQHBhcmFtIHtTY2hlZHVsZWRUcmFuc2FjdGlvbn0gc2NoZWR1bGVkVHJhbnNhY3Rpb24gLSBUaGUgKipOZW9uIHRyYW5zYWN0aW9uKiogdG8gYmUgd3JpdHRlbiBpbnRvIHRoZSBob2xkZXIgYWNjb3VudC5cbiAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IEEgcHJvbWlzZSByZXNvbHZpbmcgb25jZSB0aGUgdHJhbnNhY3Rpb24gaXMgZnVsbHkgd3JpdHRlbi5cbiAqXG4gKiAjIyMgKipIb3cgSXQgV29ya3MqKlxuICogMS4gKipIYXNoZXMgdGhlIHNjaGVkdWxlZCBOZW9uIHRyYW5zYWN0aW9uKiogdXNpbmcgYGtlY2NhazI1NmAuXG4gKiAyLiAqKlNwbGl0cyB0aGUgdHJhbnNhY3Rpb24gZGF0YSoqIGludG8gKipjaHVua3Mgb2YgOTIwIGJ5dGVzKiouXG4gKiAzLiAqKldyaXRlcyBlYWNoIGNodW5rIHNlcXVlbnRpYWxseSoqIGludG8gdGhlICoqaG9sZGVyIGFjY291bnQqKi5cbiAqIDQuICoqU2VuZHMgbXVsdGlwbGUgdHJhbnNhY3Rpb25zKiogaW4gcGFyYWxsZWwgdG8gZW5zdXJlIGZhc3QgZXhlY3V0aW9uLlxuICogNS4gKipMb2dzIGVhY2ggdHJhbnNhY3Rpb24gc2lnbmF0dXJlKiogZm9yIGRlYnVnZ2luZyBwdXJwb3Nlcy5cbiAqXG4gKiAjIyMgKipFeGFtcGxlKipcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGF3YWl0IHdyaXRlVHJhbnNhY3Rpb25Ub0hvbGRBY2NvdW50KFxuICogICBjb25uZWN0aW9uLFxuICogICBuZW9uRXZtUHJvZ3JhbSxcbiAqICAgc29sYW5hVXNlcixcbiAqICAgaG9sZGVyQWRkcmVzcyxcbiAqICAgc2NoZWR1bGVkVHJhbnNhY3Rpb25cbiAqICk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHdyaXRlVHJhbnNhY3Rpb25Ub0hvbGRBY2NvdW50KGNvbm5lY3Rpb24sIG5lb25Fdm1Qcm9ncmFtLCBzb2xhbmFVc2VyLCBob2xkZXJBZGRyZXNzLCBzY2hlZHVsZWRUcmFuc2FjdGlvbikge1xuICAgIGNvbnN0IHJlY2VpcHRzID0gW107XG4gICAgY29uc3Qgc2NoZWR1bGVkVHJhbnNhY3Rpb25IYXNoID0gYDB4JHtzY2hlZHVsZWRUcmFuc2FjdGlvbi5zZXJpYWxpemV9YDtcbiAgICBjb25zdCB0cmFuc2FjdGlvbkhhc2ggPSBrZWNjYWsyNTYoc2NoZWR1bGVkVHJhbnNhY3Rpb25IYXNoKTtcbiAgICBsZXQgcmVzdCA9IGhleFRvQnVmZmVyKHNjaGVkdWxlZFRyYW5zYWN0aW9uSGFzaCk7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgd2hpbGUgKHJlc3QubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IHBhcnQgPSByZXN0LnNsaWNlKDAsIDkyMCk7XG4gICAgICAgIHJlc3QgPSByZXN0LnNsaWNlKDkyMCk7XG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKCk7XG4gICAgICAgIHRyYW5zYWN0aW9uLmZlZVBheWVyID0gc29sYW5hVXNlci5wdWJsaWNLZXk7XG4gICAgICAgIHRyYW5zYWN0aW9uLmFkZChjcmVhdGVXcml0ZVRvSG9sZGVyQWNjb3VudEluc3RydWN0aW9uKG5lb25Fdm1Qcm9ncmFtLCBzb2xhbmFVc2VyLnB1YmxpY0tleSwgaG9sZGVyQWRkcmVzcywgdHJhbnNhY3Rpb25IYXNoLCBwYXJ0LCBvZmZzZXQpKTtcbiAgICAgICAgcmVjZWlwdHMucHVzaChzZW5kU29sYW5hVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIFtzb2xhbmFVc2VyLnNpZ25lcl0sIGZhbHNlLCB7IHByZWZsaWdodENvbW1pdG1lbnQ6ICdjb25maXJtZWQnIH0sIGByZXN0YCkpO1xuICAgICAgICBvZmZzZXQgKz0gcGFydC5sZW5ndGg7XG4gICAgfVxuICAgIGZvciAoY29uc3QgcmVjZWlwdCBvZiByZWNlaXB0cykge1xuICAgICAgICBjb25zdCB7IHNpZ25hdHVyZSwgYmxvY2toYXNoLCBsYXN0VmFsaWRCbG9ja0hlaWdodCB9ID0gYXdhaXQgcmVjZWlwdDtcbiAgICAgICAgbG9nKHNpZ25hdHVyZSwgYmxvY2toYXNoLCBsYXN0VmFsaWRCbG9ja0hlaWdodCk7XG4gICAgfVxufVxuLyoqXG4gKiBFeGVjdXRlcyBhICoqc2NoZWR1bGVkIE5lb24gRVZNIHRyYW5zYWN0aW9uKiogZnJvbSBhICoqU29sYW5hIGhvbGRlciBhY2NvdW50KiouXG4gKlxuICogVGhpcyBmdW5jdGlvbiAqKnJldHJpZXZlcyBhbmQgZXhlY3V0ZXMqKiBhIHByZXZpb3VzbHkgc2NoZWR1bGVkIE5lb24gdHJhbnNhY3Rpb24gYnkgY3JlYXRpbmdcbiAqIGFuZCBzZW5kaW5nIGFuICoqb24tY2hhaW4gdHJhbnNhY3Rpb24qKiBmcm9tIGEgKipTb2xhbmEgaG9sZGVyIGFjY291bnQqKi5cbiAqXG4gKiBAcGFyYW0ge0Nvbm5lY3Rpb259IGNvbm5lY3Rpb24gLSBUaGUgKipTb2xhbmEgY29ubmVjdGlvbiBpbnN0YW5jZSoqIHRvIGludGVyYWN0IHdpdGggdGhlIGJsb2NrY2hhaW4uXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gbmVvbkV2bVByb2dyYW0gLSBUaGUgKipOZW9uIEVWTSBwcm9ncmFtIElEKiogbWFuYWdpbmcgdGhlIHNjaGVkdWxlZCB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7U29sYW5hTmVvbkFjY291bnR9IHNvbGFuYVVzZXIgLSBUaGUgKipTb2xhbmEgYWNjb3VudCoqIHRoYXQgd2lsbCBleGVjdXRlIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBob2xkZXJBZGRyZXNzIC0gVGhlICoqcHVibGljIGtleSBvZiB0aGUgaG9sZGVyIGFjY291bnQqKiBzdG9yaW5nIHRoZSBzY2hlZHVsZWQgdHJhbnNhY3Rpb24uXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gdHJlZUFkZHJlc3MgLSBUaGUgKipwdWJsaWMga2V5IG9mIHRoZSB0cmFuc2FjdGlvbiB0cmVlIGFjY291bnQqKiBsaW5rZWQgdG8gdGhlIGV4ZWN1dGlvbi5cbiAqIEBwYXJhbSB7bnVtYmVyfSBub25jZSAtIEEgKipub25jZSB2YWx1ZSoqIG9mIHRoZSByb290ICoqTmVvbiB0cmFuc2FjdGlvbioqIGluIHRoZSB0cmVlIG9mIHNjaGVkdWxlZCBOZW9uIHRyYW5zYWN0aW9ucy5cbiAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fSBBIHByb21pc2UgcmVzb2x2aW5nIG9uY2UgdGhlIHRyYW5zYWN0aW9uIGlzIGV4ZWN1dGVkLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZVNjaGVkdWxlZFRyYW5zYWN0aW9uRnJvbUFjY291bnQoY29ubmVjdGlvbiwgbmVvbkV2bVByb2dyYW0sIHNvbGFuYVVzZXIsIGhvbGRlckFkZHJlc3MsIHRyZWVBZGRyZXNzLCBub25jZSkge1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gY3JlYXRlU2NoZWR1bGVkVHJhbnNhY3Rpb25TdGFydEZyb21BY2NvdW50VHJhbnNhY3Rpb24obmVvbkV2bVByb2dyYW0sIHNvbGFuYVVzZXIucHVibGljS2V5LCBzb2xhbmFVc2VyLmJhbGFuY2VBZGRyZXNzLCBob2xkZXJBZGRyZXNzLCB0cmVlQWRkcmVzcywgbm9uY2UpO1xuICAgIHRyYW5zYWN0aW9uLmZlZVBheWVyID0gc29sYW5hVXNlci5wdWJsaWNLZXk7XG4gICAgYXdhaXQgc2VuZFNvbGFuYVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbc29sYW5hVXNlci5zaWduZXJdLCBmYWxzZSwgeyBwcmVmbGlnaHRDb21taXRtZW50OiAnY29uZmlybWVkJyB9LCBgcmVzdGApO1xufVxuLyoqXG4gKiBFeGVjdXRlcyBhIHNjaGVkdWxlZCAqKk5lb24gRVZNIHRyYW5zYWN0aW9uKiogc3RlcC1ieS1zdGVwIGZyb20gYSAqKlNvbGFuYSBob2xkZXIgYWNjb3VudCoqLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gKippdGVyYXRpdmVseSBwcm9jZXNzZXMqKiBhIGxhcmdlIEV0aGVyZXVtLWxpa2UgdHJhbnNhY3Rpb24gYnkgYnJlYWtpbmcgaXQgaW50byBzbWFsbGVyXG4gKiBleGVjdXRpb24gc3RlcHMgKEVWTSBzdGVwcykgYW5kIGV4ZWN1dGluZyB0aGVtIHNlcXVlbnRpYWxseSBvbiBTb2xhbmEuXG4gKiBJdCBlbnN1cmVzIHRoYXQgKiplYWNoIHN0ZXAgaXMgY29uZmlybWVkIGJlZm9yZSBwcm9jZWVkaW5nKiogdG8gdGhlIG5leHQgb25lLlxuICpcbiAqIEBwYXJhbSB7Q29ubmVjdGlvbn0gY29ubmVjdGlvbiAtIFRoZSAqKlNvbGFuYSBjb25uZWN0aW9uIGluc3RhbmNlKiogdG8gaW50ZXJhY3Qgd2l0aCB0aGUgYmxvY2tjaGFpbi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBuZW9uRXZtUHJvZ3JhbSAtIFRoZSAqKk5lb24gRVZNIHByb2dyYW0gSUQqKiBtYW5hZ2luZyB0aGUgZXhlY3V0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7U29sYW5hTmVvbkFjY291bnR9IHNvbGFuYVVzZXIgLSBUaGUgKipTb2xhbmEgYWNjb3VudCoqIHRoYXQgd2lsbCBleGVjdXRlIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBob2xkZXJBZGRyZXNzIC0gVGhlICoqcHVibGljIGtleSBvZiB0aGUgaG9sZGVyIGFjY291bnQqKiBzdG9yaW5nIHRoZSBzY2hlZHVsZWQgdHJhbnNhY3Rpb24uXG4gKiBAcGFyYW0ge1RyZWFzdXJ5UG9vbEFkZHJlc3N9IHRyZWFzdXJ5UG9vbEFkZHJlc3MgLSBUaGUgKiphZGRyZXNzIG9mIHRoZSB0cmVhc3VyeSBwb29sKiogdXNlZCBmb3IgdHJhbnNhY3Rpb24gZmVlcy5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBzdG9yYWdlQWNjb3VudCAtIFRoZSAqKnB1YmxpYyBrZXkgb2YgdGhlIHN0b3JhZ2UgYWNjb3VudCoqIGxpbmtlZCB0byB0cmFuc2FjdGlvbiBleGVjdXRpb24uXG4gKiBAcGFyYW0ge1B1YmxpY0tleVtdfSBbYWRkaXRpb25hbEFjY291bnRzPVtdXSAtIEFuIG9wdGlvbmFsIGFycmF5IG9mICoqYWRkaXRpb25hbCBhY2NvdW50cyoqIHJlcXVpcmVkIGZvciBleGVjdXRpb24uXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBBIHByb21pc2UgcmVzb2x2aW5nIHdpdGggdGhlICoqcmVjZWlwdCBvZiB0aGUgZXhlY3V0ZWQgdHJhbnNhY3Rpb24qKi5cbiAqXG4gKiAjIyMgKipIb3cgSXQgV29ya3MqKlxuICogMS4gKipDcmVhdGVzIGEgdHJhbnNhY3Rpb24gc3RlcC1ieS1zdGVwKiosIGV4ZWN1dGluZyB0aGUgRXRoZXJldW0tbGlrZSB0cmFuc2FjdGlvbiBpbiBzbWFsbGVyICoqRVZNIHN0ZXBzKiouXG4gKiAyLiAqKlNlbmRzIGVhY2ggc3RlcCB0byB0aGUgU29sYW5hIGJsb2NrY2hhaW4qKiB1bnRpbCB0aGUgdHJhbnNhY3Rpb24gaXMgZnVsbHkgZXhlY3V0ZWQuXG4gKiAzLiAqKldhaXRzIGZvciBjb25maXJtYXRpb24qKiBvZiBlYWNoIHN0ZXAgYmVmb3JlIHByb2NlZWRpbmcgdG8gdGhlIG5leHQgc3RlcC5cbiAqIDQuICoqTG9ncyBhbmQgcmV0dXJucyB0aGUgZmluYWwgdHJhbnNhY3Rpb24gcmVjZWlwdCoqIGFmdGVyIGZ1bGwgZXhlY3V0aW9uLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZVRyYW5zYWN0aW9uU3RlcHNGcm9tQWNjb3VudChjb25uZWN0aW9uLCBuZW9uRXZtUHJvZ3JhbSwgc29sYW5hVXNlciwgaG9sZGVyQWRkcmVzcywgdHJlYXN1cnlQb29sQWRkcmVzcywgc3RvcmFnZUFjY291bnQsIGFkZGl0aW9uYWxBY2NvdW50cyA9IFtdKSB7XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBsZXQgcmVjZWlwdCA9IG51bGw7XG4gICAgd2hpbGUgKCFyZWNlaXB0KSB7XG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gY3JlYXRlUGFydGlhbENhbGxPckNvbnRpbnVlRnJvbVJhd0V0aGVyZXVtVHJhbnNhY3Rpb24oaW5kZXgsIEVWTV9TVEVQUywgbmVvbkV2bVByb2dyYW0sIHNvbGFuYVVzZXIsIGhvbGRlckFkZHJlc3MsIHRyZWFzdXJ5UG9vbEFkZHJlc3MsIGBgLCBhZGRpdGlvbmFsQWNjb3VudHMpO1xuICAgICAgICBjb25zdCB7IHNpZ25hdHVyZSB9ID0gYXdhaXQgc2VuZFNvbGFuYVRyYW5zYWN0aW9uKGNvbm5lY3Rpb24sIHRyYW5zYWN0aW9uLCBbc29sYW5hVXNlci5zaWduZXJdLCBmYWxzZSwgeyBwcmVmbGlnaHRDb21taXRtZW50OiAnY29uZmlybWVkJyB9LCBgZXhlY3V0ZSAke2luZGV4fWApO1xuICAgICAgICBhd2FpdCBkZWxheSgyZTMpO1xuICAgICAgICByZWNlaXB0ID0gYXdhaXQgY29ubmVjdGlvbi5nZXRQYXJzZWRUcmFuc2FjdGlvbihzaWduYXR1cmUsIHsgY29tbWl0bWVudDogJ2NvbmZpcm1lZCcgfSk7XG4gICAgICAgIGluZGV4ICs9IDE7XG4gICAgfVxuICAgIGxvZyhyZWNlaXB0KTtcbiAgICByZXR1cm4gcmVjZWlwdDtcbn1cbi8qKlxuICogQ3JlYXRlcyBhICoqU29sYW5hIHRyYW5zYWN0aW9uKiogdG8gc3RhcnQgdGhlIGV4ZWN1dGlvbiBvZiBhICoqc2NoZWR1bGVkIE5lb24gRVZNIHRyYW5zYWN0aW9uKipcbiAqIGZyb20gYSAqKlNvbGFuYSBob2xkZXIgYWNjb3VudCoqLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gcHJlcGFyZXMgYW5kIHJldHVybnMgYSAqKlNvbGFuYSB0cmFuc2FjdGlvbioqIHRoYXQgaW5pdGlhdGVzIGEgc2NoZWR1bGVkIE5lb24gdHJhbnNhY3Rpb24sXG4gKiBlbmFibGluZyBzdGVwLWJ5LXN0ZXAgZXhlY3V0aW9uLlxuICpcbiAqIEBwYXJhbSB7UHVibGljS2V5fSBuZW9uRXZtUHJvZ3JhbSAtIFRoZSAqKk5lb24gRVZNIHByb2dyYW0gSUQqKiBtYW5hZ2luZyB0aGUgZXhlY3V0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBvcGVyYXRvciAtIFRoZSAqKlNvbGFuYSBhY2NvdW50IChvcGVyYXRvcikgcmVzcG9uc2libGUgZm9yIGV4ZWN1dGluZyB0aGUgdHJhbnNhY3Rpb24qKi5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBiYWxhbmNlQWRkcmVzcyAtIFRoZSAqKnB1YmxpYyBrZXkgb2YgdGhlIGJhbGFuY2UgYWNjb3VudCoqIGFzc29jaWF0ZWQgd2l0aCB0aGUgdHJhbnNhY3Rpb24uXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gaG9sZGVyQWRkcmVzcyAtIFRoZSAqKnB1YmxpYyBrZXkgb2YgdGhlIGhvbGRlciBhY2NvdW50Kiogc3RvcmluZyB0aGUgc2NoZWR1bGVkIHRyYW5zYWN0aW9uLlxuICogQHBhcmFtIHtQdWJsaWNLZXl9IHRyZWVBZGRyZXNzIC0gVGhlICoqcHVibGljIGtleSBvZiB0aGUgdHJhbnNhY3Rpb24gdHJlZSBhY2NvdW50KiogdXNlZCBpbiBleGVjdXRpb24uXG4gKiBAcGFyYW0ge251bWJlcn0gaW5kZXggLSBUaGUgKip0cmFuc2FjdGlvbiBpbmRleCoqIGluIHRoZSBzY2hlZHVsZWQgdHJhbnNhY3Rpb24gcXVldWUuXG4gKiBAcGFyYW0ge1B1YmxpY0tleVtdfSBbYWRkaXRpb25BY2NvdW50cz1bXV0gLSBBbiBvcHRpb25hbCBhcnJheSBvZiAqKmFkZGl0aW9uYWwgYWNjb3VudHMqKiByZXF1aXJlZCBmb3IgZXhlY3V0aW9uLlxuICogQHJldHVybnMge1RyYW5zYWN0aW9ufSBBICoqU29sYW5hIGBUcmFuc2FjdGlvbmAgb2JqZWN0KiosIHJlYWR5IHRvIGJlIHNpZ25lZCBhbmQgc2VudC5cbiAqXG4gKiAjIyMgKipIb3cgSXQgV29ya3MqKlxuICogMS4gKipSZXF1ZXN0cyBhIGNvbXB1dGUgaGVhcCBmcmFtZSoqIG9mIGAyNTYgS0JgIHRvIGFsbG9jYXRlIGVub3VnaCBtZW1vcnkgZm9yIHByb2Nlc3NpbmcuXG4gKiAyLiAqKlNldHMgdGhlIGNvbXB1dGUgdW5pdCBwcmljZSoqIHRvIGVuc3VyZSBwcmlvcml0eSBleGVjdXRpb24uXG4gKiAzLiAqKkFkZHMgYW4gaW5zdHJ1Y3Rpb24qKiB0byBpbml0aWF0ZSB0aGUgc2NoZWR1bGVkIE5lb24gdHJhbnNhY3Rpb24gZnJvbSB0aGUgU29sYW5hIGhvbGRlciBhY2NvdW50LlxuICogNC4gKipSZXR1cm5zIHRoZSBjb25zdHJ1Y3RlZCB0cmFuc2FjdGlvbioqIHJlYWR5IGZvciBzdWJtaXNzaW9uLlxuICpcbiAqICMjIyAqKkV4YW1wbGUqKlxuICogYGBgdHlwZXNjcmlwdFxuICogY29uc3QgdHJhbnNhY3Rpb24gPSBjcmVhdGVTY2hlZHVsZWRUcmFuc2FjdGlvblN0YXJ0RnJvbUFjY291bnRUcmFuc2FjdGlvbihcbiAqICAgbmVvbkV2bVByb2dyYW0sXG4gKiAgIG9wZXJhdG9yLFxuICogICBiYWxhbmNlQWRkcmVzcyxcbiAqICAgaG9sZGVyQWRkcmVzcyxcbiAqICAgdHJlZUFkZHJlc3MsXG4gKiAgIDAgLy8gRmlyc3QgdHJhbnNhY3Rpb24gaW5kZXhcbiAqICk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNjaGVkdWxlZFRyYW5zYWN0aW9uU3RhcnRGcm9tQWNjb3VudFRyYW5zYWN0aW9uKG5lb25Fdm1Qcm9ncmFtLCBvcGVyYXRvciwgYmFsYW5jZUFkZHJlc3MsIGhvbGRlckFkZHJlc3MsIHRyZWVBZGRyZXNzLCBpbmRleCwgYWRkaXRpb25BY2NvdW50cyA9IFtdKSB7XG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oKTtcbiAgICB0cmFuc2FjdGlvbi5hZGQoQ29tcHV0ZUJ1ZGdldFByb2dyYW0ucmVxdWVzdEhlYXBGcmFtZSh7IGJ5dGVzOiAyNTYgKiAxMDI0IH0pKTtcbiAgICB0cmFuc2FjdGlvbi5hZGQoQ29tcHV0ZUJ1ZGdldFByb2dyYW0uc2V0Q29tcHV0ZVVuaXRQcmljZSh7IG1pY3JvTGFtcG9ydHM6IDEwMDAwMDAgfSkpO1xuICAgIHRyYW5zYWN0aW9uLmFkZChjcmVhdGVTY2hlZHVsZWRUcmFuc2FjdGlvblN0YXJ0RnJvbUFjY291bnRJbnN0cnVjdGlvbihuZW9uRXZtUHJvZ3JhbSwgb3BlcmF0b3IsIGJhbGFuY2VBZGRyZXNzLCBob2xkZXJBZGRyZXNzLCB0cmVlQWRkcmVzcywgaW5kZXgsIGFkZGl0aW9uQWNjb3VudHMpKTtcbiAgICByZXR1cm4gdHJhbnNhY3Rpb247XG59XG4vKipcbiAqIENyZWF0ZXMgYSAqKlNvbGFuYSB0cmFuc2FjdGlvbiBpbnN0cnVjdGlvbioqIHRvIGV4ZWN1dGUgYSAqKnBhcnRpYWwgY2FsbCBvciBjb250aW51ZSBleGVjdXRpb24qKlxuICogb2YgYSAqKk5lb24gRVZNIHRyYW5zYWN0aW9uKiouXG4gKlxuICogVGhpcyBmdW5jdGlvbiBpcyByZXNwb25zaWJsZSBmb3IgKipwcm9jZXNzaW5nIGxhcmdlIEV0aGVyZXVtLWxpa2UgdHJhbnNhY3Rpb25zKiogb24gKipOZW9uIEVWTSoqXG4gKiBieSBicmVha2luZyB0aGVtIGRvd24gaW50byAqKnNtYWxsZXIgZXhlY3V0aW9uIHN0ZXBzIChFVk0gc3RlcHMpKiogYW5kICoqaGFuZGxpbmcgcGFydGlhbCBleGVjdXRpb24qKi5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gaW5kZXggLSBUaGUgKipjdXJyZW50IHN0ZXAgaW5kZXgqKiBpbiB0aGUgdHJhbnNhY3Rpb24gZXhlY3V0aW9uLlxuICogQHBhcmFtIHtudW1iZXJ9IHN0ZXBDb3VudCAtIFRoZSAqKnRvdGFsIG51bWJlciBvZiBleGVjdXRpb24gc3RlcHMqKiB0byBiZSBwcm9jZXNzZWQuXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gbmVvbkV2bVByb2dyYW0gLSBUaGUgKipOZW9uIEVWTSBwcm9ncmFtIElEKiogbWFuYWdpbmcgdGhlIGV4ZWN1dGlvbiBvZiB0aGUgdHJhbnNhY3Rpb24uXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gb3BlcmF0b3IgLSBUaGUgKipTb2xhbmEgYWNjb3VudCAob3BlcmF0b3IpIGluaXRpYXRpbmcgdGhlIHRyYW5zYWN0aW9uKiouXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gYmFsYW5jZUFkZHJlc3MgLSBUaGUgKipwdWJsaWMga2V5IG9mIHRoZSBiYWxhbmNlIHByb2dyYW0gYWRkcmVzcyBmb3IgdGhlIE5lb24gd2FsbGV0KiogdXNlZCBmb3IgZ2FzIGFuZCBleGVjdXRpb24gZmVlcy5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBob2xkZXJBZGRyZXNzIC0gVGhlICoqcHVibGljIGtleSBvZiB0aGUgaG9sZGVyIGFjY291bnQqKiBzdG9yaW5nIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7VHJlYXN1cnlQb29sQWRkcmVzc30gdHJlYXN1cnlQb29sQWRkcmVzcyAtIFRoZSAqKmFkZHJlc3Mgb2YgdGhlIHRyZWFzdXJ5IHBvb2wqKiB1c2VkIGZvciB0cmFuc2FjdGlvbiBmZWVzLlxuICogQHBhcmFtIHtQdWJsaWNLZXlbXX0gYWRkaXRpb25hbEFjY291bnRzIC0gQW4gYXJyYXkgb2YgKiphZGRpdGlvbmFsIGFjY291bnRzKiogcmVxdWlyZWQgZm9yIGV4ZWN1dGlvbi5cbiAqIEBwYXJhbSB7SGV4U3RyaW5nfSBpbnN0cnVjdGlvbiAtIFRoZSAqKnJhdyB0cmFuc2FjdGlvbiBkYXRhKiogZm9yIHRoZSBzcGVjaWZpYyBleGVjdXRpb24gc3RlcC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbdHlwZT1JbnN0cnVjdGlvblRhZy5UcmFuc2FjdGlvblN0ZXBGcm9tSW5zdHJ1Y3Rpb25dIC0gVGhlICoqaW5zdHJ1Y3Rpb24gdHlwZSoqIChkZWZhdWx0cyB0byAweDM0KS5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBbc3lzdGVtUHJvZ3JhbT1TeXN0ZW1Qcm9ncmFtLnByb2dyYW1JZF0gLSBUaGUgKipwdWJsaWMga2V5IG9mIHRoZSBTb2xhbmEgc3lzdGVtIHByb2dyYW0qKi5cbiAqIEByZXR1cm5zIHtUcmFuc2FjdGlvbkluc3RydWN0aW9ufSBBICoqU29sYW5hIGBUcmFuc2FjdGlvbkluc3RydWN0aW9uYCBvYmplY3QqKiwgcmVhZHkgdG8gYmUgaW5jbHVkZWQgaW4gYSB0cmFuc2FjdGlvbi5cbiAqXG4gKiAjIyMgKipFeGFtcGxlKipcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGNvbnN0IGluc3RydWN0aW9uID0gY3JlYXRlUGFydGlhbENhbGxPckNvbnRpbnVlRnJvbVJhd0V0aGVyZXVtSW5zdHJ1Y3Rpb24oXG4gKiAgIDAsIC8vIEZpcnN0IHN0ZXBcbiAqICAgMTAwLCAvLyBUb3RhbCBzdGVwc1xuICogICBuZW9uRXZtUHJvZ3JhbSxcbiAqICAgc29sYW5hVXNlci5wdWJsaWNLZXksXG4gKiAgIGJhbGFuY2VBZGRyZXNzLFxuICogICBob2xkZXJBZGRyZXNzLFxuICogICB0cmVhc3VyeVBvb2xBZGRyZXNzLFxuICogICBbXSxcbiAqICAgXCIweFRyYW5zYWN0aW9uUGFydFwiXG4gKiApO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQYXJ0aWFsQ2FsbE9yQ29udGludWVGcm9tUmF3RXRoZXJldW1JbnN0cnVjdGlvbihpbmRleCwgc3RlcENvdW50LCBuZW9uRXZtUHJvZ3JhbSwgb3BlcmF0b3IsIGJhbGFuY2VBZGRyZXNzLCBob2xkZXJBZGRyZXNzLCB0cmVhc3VyeVBvb2xBZGRyZXNzLCBhZGRpdGlvbmFsQWNjb3VudHMsIGluc3RydWN0aW9uLCB0eXBlID0gNTIgLyogSW5zdHJ1Y3Rpb25UYWcuVHJhbnNhY3Rpb25TdGVwRnJvbUluc3RydWN0aW9uICovLCAvLyBUcmFuc2FjdGlvblN0ZXBGcm9tSW5zdHJ1Y3Rpb25cbnN5c3RlbVByb2dyYW0gPSBTeXN0ZW1Qcm9ncmFtLnByb2dyYW1JZCkge1xuICAgIGNvbnN0IGRhdGEgPSBidWZmZXJDb25jYXQoW1xuICAgICAgICBudW1iZXJUb0J1ZmZlcih0eXBlKSxcbiAgICAgICAgdHJlYXN1cnlQb29sQWRkcmVzcy5idWZmZXIsXG4gICAgICAgIHRvQnl0ZXM2NExFKHN0ZXBDb3VudCwgNCksXG4gICAgICAgIHRvQnl0ZXM2NExFKGluZGV4LCA0KSxcbiAgICAgICAgaGV4VG9CdWZmZXIoaW5zdHJ1Y3Rpb24pXG4gICAgXSk7XG4gICAgY29uc3Qga2V5cyA9IFtcbiAgICAgICAgeyBwdWJrZXk6IGhvbGRlckFkZHJlc3MsIGlzU2lnbmVyOiBmYWxzZSwgaXNXcml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICB7IHB1YmtleTogb3BlcmF0b3IsIGlzU2lnbmVyOiB0cnVlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiB0cmVhc3VyeVBvb2xBZGRyZXNzLnB1YmxpY0tleSwgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBiYWxhbmNlQWRkcmVzcywgaXNTaWduZXI6IGZhbHNlLCBpc1dyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgIHsgcHVia2V5OiBzeXN0ZW1Qcm9ncmFtLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfVxuICAgIF07XG4gICAgZm9yIChjb25zdCBhY2Mgb2YgYWRkaXRpb25hbEFjY291bnRzKSB7XG4gICAgICAgIGtleXMucHVzaCh7IHB1YmtleTogYWNjLCBpc1NpZ25lcjogZmFsc2UsIGlzV3JpdGFibGU6IHRydWUgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7IHByb2dyYW1JZDogbmVvbkV2bVByb2dyYW0sIGtleXMsIGRhdGEgfSk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSAqKlNvbGFuYSB0cmFuc2FjdGlvbioqIHRvIGV4ZWN1dGUgYSAqKnBhcnRpYWwgY2FsbCBvciBjb250aW51ZSBleGVjdXRpb24qKiBvZiBhICoqTmVvbiBFVk0gdHJhbnNhY3Rpb24qKi5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIHJlc3BvbnNpYmxlIGZvciAqKnByb2Nlc3NpbmcgbGFyZ2UgRXRoZXJldW0tbGlrZSB0cmFuc2FjdGlvbnMqKiBvbiAqKk5lb24gRVZNKipcbiAqIGJ5IGJyZWFraW5nIHRoZW0gZG93biBpbnRvICoqc21hbGxlciBleGVjdXRpb24gc3RlcHMgKEVWTSBzdGVwcykqKiBhbmQgKipoYW5kbGluZyBwYXJ0aWFsIGV4ZWN1dGlvbioqLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleCAtIFRoZSAqKmN1cnJlbnQgc3RlcCBpbmRleCoqIGluIHRoZSB0cmFuc2FjdGlvbiBleGVjdXRpb24uXG4gKiBAcGFyYW0ge251bWJlcn0gc3RlcENvdW50IC0gVGhlICoqdG90YWwgbnVtYmVyIG9mIGV4ZWN1dGlvbiBzdGVwcyoqIHRvIGJlIHByb2Nlc3NlZC5cbiAqIEBwYXJhbSB7UHVibGljS2V5fSBuZW9uRXZtUHJvZ3JhbSAtIFRoZSAqKk5lb24gRVZNIHByb2dyYW0gSUQqKiBtYW5hZ2luZyB0aGUgZXhlY3V0aW9uIG9mIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSB7U29sYW5hTmVvbkFjY291bnR9IHNvbGFuYVVzZXIgLSBUaGUgKipTb2xhbmEgYWNjb3VudCoqIGV4ZWN1dGluZyB0aGUgdHJhbnNhY3Rpb24uXG4gKiBAcGFyYW0ge1B1YmxpY0tleX0gaG9sZGVyQWRkcmVzcyAtIFRoZSAqKnB1YmxpYyBrZXkgb2YgdGhlIGhvbGRlciBhY2NvdW50Kiogc3RvcmluZyB0aGUgdHJhbnNhY3Rpb24uXG4gKiBAcGFyYW0ge1RyZWFzdXJ5UG9vbEFkZHJlc3N9IHRyZWFzdXJ5UG9vbEFkZHJlc3MgLSBUaGUgKiphZGRyZXNzIG9mIHRoZSB0cmVhc3VyeSBwb29sKiogdXNlZCBmb3IgdHJhbnNhY3Rpb24gZmVlcy5cbiAqIEBwYXJhbSB7SGV4U3RyaW5nfSB0cmFuc2FjdGlvblBhcnQgLSBUaGUgKipyYXcgdHJhbnNhY3Rpb24gZGF0YSoqIGZvciB0aGUgc3BlY2lmaWMgZXhlY3V0aW9uIHN0ZXAuXG4gKiBAcGFyYW0ge1B1YmxpY0tleVtdfSBbYWRkaXRpb25BY2NvdW50cz1bXV0gLSBBbiBvcHRpb25hbCBhcnJheSBvZiAqKmFkZGl0aW9uYWwgYWNjb3VudHMqKiByZXF1aXJlZCBmb3IgZXhlY3V0aW9uLlxuICogQHJldHVybnMge1RyYW5zYWN0aW9ufSBBICoqU29sYW5hIGBUcmFuc2FjdGlvbmAgb2JqZWN0KiosIHJlYWR5IHRvIGJlIHNpZ25lZCBhbmQgc2VudC5cbiAqXG4gKiAjIyMgKipIb3cgSXQgV29ya3MqKlxuICogMS4gKipSZXF1ZXN0cyBhIGNvbXB1dGUgaGVhcCBmcmFtZSoqIG9mIGAyNTYgS0JgIHRvIGFsbG9jYXRlIGVub3VnaCBtZW1vcnkgZm9yIHByb2Nlc3NpbmcuXG4gKiAyLiAqKlNldHMgdGhlIGNvbXB1dGUgdW5pdCBwcmljZSoqIHRvIGVuc3VyZSBwcmlvcml0eSBleGVjdXRpb24uXG4gKiAzLiAqKkFkZHMgYW4gaW5zdHJ1Y3Rpb24qKiB0byBleGVjdXRlIHRoZSBwYXJ0aWFsIGNhbGwgb3IgY29udGludWUgcHJvY2Vzc2luZyBmcm9tIHRoZSBsYXN0IHN0ZXAuXG4gKiA0LiAqKlJldHVybnMgdGhlIGNvbnN0cnVjdGVkIHRyYW5zYWN0aW9uKiogcmVhZHkgZm9yIHN1Ym1pc3Npb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQYXJ0aWFsQ2FsbE9yQ29udGludWVGcm9tUmF3RXRoZXJldW1UcmFuc2FjdGlvbihpbmRleCwgc3RlcENvdW50LCBuZW9uRXZtUHJvZ3JhbSwgc29sYW5hVXNlciwgaG9sZGVyQWRkcmVzcywgdHJlYXN1cnlQb29sQWRkcmVzcywgdHJhbnNhY3Rpb25QYXJ0LCBhZGRpdGlvbkFjY291bnRzID0gW10pIHtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpO1xuICAgIHRyYW5zYWN0aW9uLmFkZChDb21wdXRlQnVkZ2V0UHJvZ3JhbS5yZXF1ZXN0SGVhcEZyYW1lKHsgYnl0ZXM6IDI1NiAqIDEwMjQgfSkpO1xuICAgIHRyYW5zYWN0aW9uLmFkZChDb21wdXRlQnVkZ2V0UHJvZ3JhbS5zZXRDb21wdXRlVW5pdFByaWNlKHsgbWljcm9MYW1wb3J0czogMTAwMDAwMCB9KSk7XG4gICAgdHJhbnNhY3Rpb24uYWRkKGNyZWF0ZVBhcnRpYWxDYWxsT3JDb250aW51ZUZyb21SYXdFdGhlcmV1bUluc3RydWN0aW9uKGluZGV4LCBzdGVwQ291bnQsIG5lb25Fdm1Qcm9ncmFtLCBzb2xhbmFVc2VyLnB1YmxpY0tleSwgc29sYW5hVXNlci5iYWxhbmNlQWRkcmVzcywgaG9sZGVyQWRkcmVzcywgdHJlYXN1cnlQb29sQWRkcmVzcywgYWRkaXRpb25BY2NvdW50cywgdHJhbnNhY3Rpb25QYXJ0KSk7XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uO1xufVxuLyoqXG4gKiBQcmVwYXJlIGEgU29sYW5hIEluc3RydWN0aW9uIGZvciB0aGUgTmVvblByb3h5UnBjQXBpLmVzdGltYXRlU2NoZWR1bGVkVHJhbnNhY3Rpb25HYXMoKSBtZXRob2RcbiAqIEBwYXJhbSB7VHJhbnNhY3Rpb25JbnN0cnVjdGlvbn0gaW5zdHJ1Y3Rpb24gLSBUaGUgKipTb2xhbmEgaW5zdHJ1Y3Rpb24qKiBkYXRhXG4gKiovXG5leHBvcnQgZnVuY3Rpb24gcHJlcGFyZVNvbGFuYUluc3RydWN0aW9uKGluc3RydWN0aW9uKSB7XG4gICAgY29uc3QgZGF0YSA9IGJzNTguZW5jb2RlKGluc3RydWN0aW9uLmRhdGEpO1xuICAgIGNvbnN0IHByb2dyYW1JZCA9IGluc3RydWN0aW9uLnByb2dyYW1JZC50b0Jhc2U1OCgpO1xuICAgIGNvbnN0IGFjY291bnRzID0gW107XG4gICAgZm9yIChjb25zdCB7IHB1YmtleSwgaXNTaWduZXIsIGlzV3JpdGFibGUgfSBvZiBpbnN0cnVjdGlvbi5rZXlzKSB7XG4gICAgICAgIGFjY291bnRzLnB1c2goeyBhZGRyZXNzOiBwdWJrZXkudG9CYXNlNTgoKSwgaXNTaWduZXIsIGlzV3JpdGFibGUgfSk7XG4gICAgfVxuICAgIHJldHVybiB7IHByb2dyYW1JZCwgZGF0YSwgYWNjb3VudHMgfTtcbn1cbi8qKlxuICogUHJlcGFyZSBhIFNvbGFuYSBJbnN0cnVjdGlvbnMgZm9yIHRoZSBOZW9uUHJveHlScGNBcGkuZXN0aW1hdGVTY2hlZHVsZWRUcmFuc2FjdGlvbkdhcygpIG1ldGhvZFxuICogQHBhcmFtIHtUcmFuc2FjdGlvbkluc3RydWN0aW9uW119IGluc3RydWN0aW9ucyAtIFRoZSAqKlNvbGFuYSBpbnN0cnVjdGlvbnMqKiBkYXRhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmVwYXJlU29sYW5hSW5zdHJ1Y3Rpb25zKGluc3RydWN0aW9ucykge1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgIGZvciAoY29uc3QgaW5zdHJ1Y3Rpb24gb2YgaW5zdHJ1Y3Rpb25zKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHByZXBhcmVTb2xhbmFJbnN0cnVjdGlvbihpbnN0cnVjdGlvbikpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQcmVwYXJlIGEgU29sYW5hIEluc3RydWN0aW9ucyBmb3IgdGhlIE5lb25Qcm94eVJwY0FwaS5lc3RpbWF0ZVNjaGVkdWxlZFRyYW5zYWN0aW9uR2FzKCkgbWV0aG9kIGZyb20ge1RyYW5zYWN0aW9ufSBkYXRhXG4gKiBAcGFyYW0ge1RyYW5zYWN0aW9ufSB0cmFuc2FjdGlvbiAtIFRoZSAqKlNvbGFuYSB0cmFuc2FjdGlvbioqIGRhdGEgdGhhdCBjb250YWluIHRyYW5zYWN0aW9uIGluc3RydWN0aW9ucyBmb3IgcHJlcGFyZVxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJlcGFyZVNvbGFuYVRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKSB7XG4gICAgY29uc3QgaW5zdHJ1Y3Rpb25zID0gW107XG4gICAgZm9yIChjb25zdCBpbnN0cnVjdGlvbiBvZiB0cmFuc2FjdGlvbi5pbnN0cnVjdGlvbnMpIHtcbiAgICAgICAgaW5zdHJ1Y3Rpb25zLnB1c2gocHJlcGFyZVNvbGFuYUluc3RydWN0aW9uKGluc3RydWN0aW9uKSk7XG4gICAgfVxuICAgIHJldHVybiB7IGluc3RydWN0aW9ucyB9O1xufVxuLyoqXG4gKiBDcmVhdGVzIGEge011bHRpcGxlVHJhbnNhY3Rpb259IGNvbnRhaW5pbmcgb25lIG9yIG1vcmUge1NjaGVkdWxlZFRyYW5zYWN0aW9ufVxuICogaW5zdGFuY2VzIHRoYXQgd2lsbCBiZSBleGVjdXRlZCBzZXF1ZW50aWFsbHkuXG4gKiBVc2VkIGluIHRoZSB7TmVvblByb3h5UnBjQXBpLmNyZWF0ZU11bHRpcGxlVHJhbnNhY3Rpb259IG1ldGhvZC5cbiAqXG4gKiBAcGFyYW0ge011bHRpcGxlVHJhbnNhY3Rpb25EYXRhfSBtdWx0aXBsZURhdGEgLSB0aGUgZGF0YSB1c2VkIHRvIGNyZWF0ZSB0aGUgTXVsdGlwbGVUcmFuc2FjdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZU11bHRpcGxlVHJhbnNhY3Rpb25TZXF1ZW50aWFsID0gKG11bHRpcGxlRGF0YSkgPT4ge1xuICAgIGNvbnN0IHsgbm9uY2UsIGNoYWluSWQsIHRyYW5zYWN0aW9uc0RhdGEsIHRyYW5zYWN0aW9uR2FzIH0gPSBtdWx0aXBsZURhdGE7XG4gICAgY29uc3QgeyBtYXhGZWVQZXJHYXMsIG1heFByaW9yaXR5RmVlUGVyR2FzLCBnYXNMaW1pdCB9ID0gdHJhbnNhY3Rpb25HYXM7XG4gICAgY29uc3QgbXVsdGlwbGUgPSBuZXcgTXVsdGlwbGVUcmFuc2FjdGlvbihub25jZSwgbWF4RmVlUGVyR2FzLCBtYXhQcmlvcml0eUZlZVBlckdhcyk7XG4gICAgY29uc3QgdHJhbnNhY3Rpb25zID0gW107XG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRyYW5zYWN0aW9uc0RhdGEubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgIGNvbnN0IHsgZnJvbSwgdG8sIGRhdGEgfSA9IHRyYW5zYWN0aW9uc0RhdGFbaW5kZXhdO1xuICAgICAgICBjb25zdCBzY2hlZHVsZWRUcmFuc2FjdGlvbiA9IG5ldyBTY2hlZHVsZWRUcmFuc2FjdGlvbih7XG4gICAgICAgICAgICBpbmRleCxcbiAgICAgICAgICAgIG5vbmNlLFxuICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgIGZyb20sXG4gICAgICAgICAgICB0byxcbiAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICBtYXhGZWVQZXJHYXMsXG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhcyxcbiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdFtpbmRleF1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGNoaWxkSW5kZXggPSBpbmRleCA9PT0gdHJhbnNhY3Rpb25zRGF0YS5sZW5ndGggLSAxID8gTk9fQ0hJTERfSU5ERVggOiBpbmRleCArIDE7XG4gICAgICAgIGNvbnN0IHN1Y2Nlc3NMaW1pdCA9IGluZGV4ID09PSAwID8gMCA6IDE7XG4gICAgICAgIG11bHRpcGxlLmFkZFRyYW5zYWN0aW9uKHNjaGVkdWxlZFRyYW5zYWN0aW9uLCBjaGlsZEluZGV4LCBzdWNjZXNzTGltaXQpO1xuICAgICAgICB0cmFuc2FjdGlvbnMucHVzaChzY2hlZHVsZWRUcmFuc2FjdGlvbik7XG4gICAgfVxuICAgIHJldHVybiB7IG11bHRpcGxlLCB0cmFuc2FjdGlvbnMgfTtcbn07XG4vKipcbiAqIENyZWF0ZXMgYSB7TXVsdGlwbGVUcmFuc2FjdGlvbn0gY29udGFpbmluZyBvbmUgb3IgbW9yZSB7U2NoZWR1bGVkVHJhbnNhY3Rpb259XG4gKiBpbnN0YW5jZXMgdGhhdCB3aWxsIGJlIGV4ZWN1dGVkIHBhcmFsbGVsLlxuICogVXNlZCBpbiB0aGUge05lb25Qcm94eVJwY0FwaS5jcmVhdGVNdWx0aXBsZVRyYW5zYWN0aW9ufSBtZXRob2QuXG4gKlxuICogQHBhcmFtIHtNdWx0aXBsZVRyYW5zYWN0aW9uRGF0YX0gbXVsdGlwbGVEYXRhIC0gdGhlIGRhdGEgdXNlZCB0byBjcmVhdGUgdGhlIE11bHRpcGxlVHJhbnNhY3Rpb25cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZU11bHRpcGxlVHJhbnNhY3Rpb25QYXJhbGxlbCA9IChtdWx0aXBsZURhdGEpID0+IHtcbiAgICBjb25zdCB7IG5vbmNlLCBjaGFpbklkLCB0cmFuc2FjdGlvbnNEYXRhLCB0cmFuc2FjdGlvbkdhcyB9ID0gbXVsdGlwbGVEYXRhO1xuICAgIGNvbnN0IHsgbWF4RmVlUGVyR2FzLCBtYXhQcmlvcml0eUZlZVBlckdhcywgZ2FzTGltaXQgfSA9IHRyYW5zYWN0aW9uR2FzO1xuICAgIGNvbnN0IG11bHRpcGxlID0gbmV3IE11bHRpcGxlVHJhbnNhY3Rpb24obm9uY2UsIG1heEZlZVBlckdhcywgbWF4UHJpb3JpdHlGZWVQZXJHYXMpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9ucyA9IFtdO1xuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0cmFuc2FjdGlvbnNEYXRhLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBjb25zdCB7IGZyb20sIHRvLCBkYXRhIH0gPSB0cmFuc2FjdGlvbnNEYXRhW2luZGV4XTtcbiAgICAgICAgY29uc3Qgc2NoZWR1bGVkVHJhbnNhY3Rpb24gPSBuZXcgU2NoZWR1bGVkVHJhbnNhY3Rpb24oe1xuICAgICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgICBub25jZSxcbiAgICAgICAgICAgIGNoYWluSWQsXG4gICAgICAgICAgICBmcm9tLFxuICAgICAgICAgICAgdG8sXG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgbWF4RmVlUGVyR2FzLFxuICAgICAgICAgICAgbWF4UHJpb3JpdHlGZWVQZXJHYXMsXG4gICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXRbaW5kZXhdXG4gICAgICAgIH0pO1xuICAgICAgICBtdWx0aXBsZS5hZGRUcmFuc2FjdGlvbihzY2hlZHVsZWRUcmFuc2FjdGlvbiwgTk9fQ0hJTERfSU5ERVgsIDApO1xuICAgICAgICB0cmFuc2FjdGlvbnMucHVzaChzY2hlZHVsZWRUcmFuc2FjdGlvbik7XG4gICAgfVxuICAgIHJldHVybiB7IG11bHRpcGxlLCB0cmFuc2FjdGlvbnMgfTtcbn07XG4vKipcbiAqIENyZWF0ZXMgYSB7TXVsdGlwbGVUcmFuc2FjdGlvbn0gY29udGFpbmluZyBvbmUgb3IgbW9yZSB7U2NoZWR1bGVkVHJhbnNhY3Rpb259IGluc3RhbmNlcyxcbiAqIHdoZXJlIGFsbCB0cmFuc2FjdGlvbnMgd2lsbCBiZSBleGVjdXRlZCBpbiBwYXJhbGxlbCBhZnRlciB0aGUgbGFzdCB0cmFuc2FjdGlvbiBpbiB0aGUgbGlzdCBpcyBjb21wbGV0ZWQuXG4gKiBVc2VkIGluIHRoZSB7TmVvblByb3h5UnBjQXBpLmNyZWF0ZU11bHRpcGxlVHJhbnNhY3Rpb259IG1ldGhvZC5cbiAqXG4gKiBAcGFyYW0ge011bHRpcGxlVHJhbnNhY3Rpb25EYXRhfSBtdWx0aXBsZURhdGEgLSB0aGUgZGF0YSB1c2VkIHRvIGNyZWF0ZSB0aGUgTXVsdGlwbGVUcmFuc2FjdGlvblxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlTXVsdGlwbGVUcmFuc2FjdGlvbkRlcGVuZExhc3QgPSAobXVsdGlwbGVEYXRhKSA9PiB7XG4gICAgY29uc3QgeyBub25jZSwgY2hhaW5JZCwgdHJhbnNhY3Rpb25zRGF0YSwgdHJhbnNhY3Rpb25HYXMgfSA9IG11bHRpcGxlRGF0YTtcbiAgICBjb25zdCB7IG1heEZlZVBlckdhcywgbWF4UHJpb3JpdHlGZWVQZXJHYXMsIGdhc0xpbWl0IH0gPSB0cmFuc2FjdGlvbkdhcztcbiAgICBjb25zdCBtdWx0aXBsZSA9IG5ldyBNdWx0aXBsZVRyYW5zYWN0aW9uKG5vbmNlLCBtYXhGZWVQZXJHYXMsIG1heFByaW9yaXR5RmVlUGVyR2FzKTtcbiAgICBjb25zdCB0cmFuc2FjdGlvbnMgPSBbXTtcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdHJhbnNhY3Rpb25zRGF0YS5sZW5ndGggLSAxOyBpbmRleCsrKSB7XG4gICAgICAgIGNvbnN0IHsgZnJvbSwgdG8sIGRhdGEgfSA9IHRyYW5zYWN0aW9uc0RhdGFbaW5kZXhdO1xuICAgICAgICBjb25zdCBzY2hlZHVsZWRUcmFuc2FjdGlvbiA9IG5ldyBTY2hlZHVsZWRUcmFuc2FjdGlvbih7XG4gICAgICAgICAgICBpbmRleCxcbiAgICAgICAgICAgIG5vbmNlLFxuICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgIGZyb20sXG4gICAgICAgICAgICB0byxcbiAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICBtYXhGZWVQZXJHYXMsXG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhcyxcbiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdFtpbmRleF1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGNoaWxkSW5kZXggPSB0cmFuc2FjdGlvbnNEYXRhLmxlbmd0aCAtIDE7XG4gICAgICAgIGNvbnN0IHN1Y2Nlc3NMaW1pdCA9IDA7XG4gICAgICAgIG11bHRpcGxlLmFkZFRyYW5zYWN0aW9uKHNjaGVkdWxlZFRyYW5zYWN0aW9uLCBjaGlsZEluZGV4LCBzdWNjZXNzTGltaXQpO1xuICAgICAgICB0cmFuc2FjdGlvbnMucHVzaChzY2hlZHVsZWRUcmFuc2FjdGlvbik7XG4gICAgfVxuICAgIGNvbnN0IGluZGV4ID0gdHJhbnNhY3Rpb25zRGF0YS5sZW5ndGggLSAxO1xuICAgIGNvbnN0IHsgZnJvbSwgdG8sIGRhdGEgfSA9IHRyYW5zYWN0aW9uc0RhdGFbaW5kZXhdO1xuICAgIGNvbnN0IHNjaGVkdWxlZFRyYW5zYWN0aW9uID0gbmV3IFNjaGVkdWxlZFRyYW5zYWN0aW9uKHtcbiAgICAgICAgaW5kZXgsXG4gICAgICAgIG5vbmNlLFxuICAgICAgICBjaGFpbklkLFxuICAgICAgICBmcm9tLFxuICAgICAgICB0byxcbiAgICAgICAgZGF0YSxcbiAgICAgICAgbWF4RmVlUGVyR2FzLFxuICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhcyxcbiAgICAgICAgZ2FzTGltaXQ6IGdhc0xpbWl0W2luZGV4XVxuICAgIH0pO1xuICAgIG11bHRpcGxlLmFkZFRyYW5zYWN0aW9uKHNjaGVkdWxlZFRyYW5zYWN0aW9uLCBOT19DSElMRF9JTkRFWCwgaW5kZXgpO1xuICAgIHRyYW5zYWN0aW9ucy5wdXNoKHNjaGVkdWxlZFRyYW5zYWN0aW9uKTtcbiAgICByZXR1cm4geyBtdWx0aXBsZSwgdHJhbnNhY3Rpb25zIH07XG59O1xuLyoqXG4gKiBTZWxlY3RzIG9uZSBvZiB0aGUgdHJhbnNhY3Rpb24gZXhlY3V0aW9uIHN0cmF0ZWdpZXMgKERlcGVuZExhc3QsIFBhcmFsbGVsLCBTZXF1ZW50aWFsKS5cbiAqXG4gKiBAcGFyYW0ge011bHRpcGxlVHJhbnNhY3Rpb25UeXBlfSB0eXBlIC0gZW51bSBpbmRpY2F0aW5nIHRoZSBpbnRlbmRlZCB0cmFuc2FjdGlvbiBleGVjdXRpb24gdHlwZSAoZGVmYXVsdHMgdG8gc2VxdWVudGlhbClcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdE11bHRpcGxlVHJhbnNhY3Rpb25NZXRob2QodHlwZSkge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIDIgLyogTXVsdGlwbGVUcmFuc2FjdGlvblR5cGUuRGVwZW5kTGFzdCAqLzpcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVNdWx0aXBsZVRyYW5zYWN0aW9uRGVwZW5kTGFzdDtcbiAgICAgICAgY2FzZSAxIC8qIE11bHRpcGxlVHJhbnNhY3Rpb25UeXBlLlBhcmFsbGVsICovOlxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU11bHRpcGxlVHJhbnNhY3Rpb25QYXJhbGxlbDtcbiAgICAgICAgY2FzZSAwIC8qIE11bHRpcGxlVHJhbnNhY3Rpb25UeXBlLlNlcXVlbnRpYWwgKi86XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlTXVsdGlwbGVUcmFuc2FjdGlvblNlcXVlbnRpYWw7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/transactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/buffer.js":
/*!********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/buffer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58ToHex: () => (/* binding */ base58ToHex),\n/* harmony export */   bufferAlloc: () => (/* binding */ bufferAlloc),\n/* harmony export */   bufferConcat: () => (/* binding */ bufferConcat),\n/* harmony export */   bufferToHex: () => (/* binding */ bufferToHex),\n/* harmony export */   hexToBuffer: () => (/* binding */ hexToBuffer),\n/* harmony export */   isValidHex: () => (/* binding */ isValidHex),\n/* harmony export */   numberToBuffer: () => (/* binding */ numberToBuffer),\n/* harmony export */   stringToBuffer: () => (/* binding */ stringToBuffer),\n/* harmony export */   toBytes16LE: () => (/* binding */ toBytes16LE),\n/* harmony export */   toBytes64BE: () => (/* binding */ toBytes64BE),\n/* harmony export */   toBytes64LE: () => (/* binding */ toBytes64LE),\n/* harmony export */   toBytesInt32: () => (/* binding */ toBytesInt32),\n/* harmony export */   toU256BE: () => (/* binding */ toU256BE)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/src/esm/index.js\");\n\nfunction base58ToHex(mint) {\n    const bytes = bs58__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(mint);\n    const bytes32Value = Buffer.from(bytes);\n    return `0x${bytes32Value.toString('hex')}`;\n}\nfunction isValidHex(hex) {\n    const isHexStrict = /^(0x)?[0-9a-f]*$/i.test(hex.toString());\n    if (!isHexStrict) {\n        throw new Error(`Given value \"${hex}\" is not a valid hex string.`);\n    }\n    return isHexStrict;\n}\nfunction bufferAlloc(size) {\n    return Buffer.alloc(size);\n}\nfunction hexToBuffer(hex) {\n    const _hex = isValidHex(hex) ? hex.replace(/^0x/i, '') : hex;\n    return Buffer.from(_hex, 'hex');\n}\nfunction bufferToHex(data) {\n    return Buffer.from(data).toString('hex');\n}\nfunction numberToBuffer(size) {\n    return Buffer.from([size]);\n}\nfunction stringToBuffer(str, encoding = 'utf8') {\n    return Buffer.from(str, encoding);\n}\nfunction bufferConcat(list, totalLength) {\n    return Buffer.concat(list, totalLength);\n}\nfunction toU256BE(bigIntNumber) {\n    if (bigIntNumber < BigInt(0) || bigIntNumber > BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF')) {\n        throw new Error('Number out of range for U256BE');\n    }\n    const buffer = new ArrayBuffer(32); // 256 bits = 32 bytes\n    const view = new DataView(buffer);\n    // Loop through each byte and set it from the start to maintain big-endian order\n    for (let i = 0; i < 32; i++) {\n        // Extract each byte of the BigInt number\n        const byte = Number((bigIntNumber >> BigInt(8 * (31 - i))) & BigInt(0xFF));\n        view.setUint8(i, byte);\n    }\n    return new Uint8Array(buffer);\n}\nfunction toBytesInt32(number, littleEndian = true) {\n    const arrayBuffer = new ArrayBuffer(4); // an Int32 takes 4 bytes\n    const dataView = new DataView(arrayBuffer);\n    dataView.setUint32(0, number, littleEndian); // byteOffset = 0; litteEndian = false\n    return arrayBuffer;\n}\nfunction toBytes64LE(num, size) {\n    const buffer = Buffer.alloc(size);\n    buffer.writeBigUInt64LE(BigInt(num), 0);\n    return buffer;\n}\nfunction toBytes64BE(num, size, offset = 0) {\n    const buffer = Buffer.alloc(size);\n    buffer.writeBigUInt64BE(BigInt(num), offset);\n    return buffer;\n}\nfunction toBytes16LE(num, size, offset = 0) {\n    const buffer = Buffer.alloc(size);\n    buffer.writeUInt16LE(num, offset);\n    return buffer;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvYnVmZmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdCO0FBQ2pCO0FBQ1Asa0JBQWtCLDRDQUFJO0FBQ3RCO0FBQ0EsZ0JBQWdCLDZCQUE2QjtBQUM3QztBQUNPO0FBQ1A7QUFDQTtBQUNBLHdDQUF3QyxJQUFJO0FBQzVDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNENBQTRDO0FBQzVDO0FBQ0EsaURBQWlELG1CQUFtQjtBQUNwRTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwY2FyZC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AbmVvbmV2bS9zb2xhbmEtc2lnbi9kaXN0L2VzbS91dGlscy9idWZmZXIuanM/ZDA0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYnM1OCBmcm9tICdiczU4JztcbmV4cG9ydCBmdW5jdGlvbiBiYXNlNThUb0hleChtaW50KSB7XG4gICAgY29uc3QgYnl0ZXMgPSBiczU4LmRlY29kZShtaW50KTtcbiAgICBjb25zdCBieXRlczMyVmFsdWUgPSBCdWZmZXIuZnJvbShieXRlcyk7XG4gICAgcmV0dXJuIGAweCR7Ynl0ZXMzMlZhbHVlLnRvU3RyaW5nKCdoZXgnKX1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRIZXgoaGV4KSB7XG4gICAgY29uc3QgaXNIZXhTdHJpY3QgPSAvXigweCk/WzAtOWEtZl0qJC9pLnRlc3QoaGV4LnRvU3RyaW5nKCkpO1xuICAgIGlmICghaXNIZXhTdHJpY3QpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBHaXZlbiB2YWx1ZSBcIiR7aGV4fVwiIGlzIG5vdCBhIHZhbGlkIGhleCBzdHJpbmcuYCk7XG4gICAgfVxuICAgIHJldHVybiBpc0hleFN0cmljdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBidWZmZXJBbGxvYyhzaXplKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5hbGxvYyhzaXplKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoZXhUb0J1ZmZlcihoZXgpIHtcbiAgICBjb25zdCBfaGV4ID0gaXNWYWxpZEhleChoZXgpID8gaGV4LnJlcGxhY2UoL14weC9pLCAnJykgOiBoZXg7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKF9oZXgsICdoZXgnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBidWZmZXJUb0hleChkYXRhKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGRhdGEpLnRvU3RyaW5nKCdoZXgnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBudW1iZXJUb0J1ZmZlcihzaXplKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKFtzaXplXSk7XG59XG5leHBvcnQgZnVuY3Rpb24gc3RyaW5nVG9CdWZmZXIoc3RyLCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShzdHIsIGVuY29kaW5nKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBidWZmZXJDb25jYXQobGlzdCwgdG90YWxMZW5ndGgpIHtcbiAgICByZXR1cm4gQnVmZmVyLmNvbmNhdChsaXN0LCB0b3RhbExlbmd0aCk7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9VMjU2QkUoYmlnSW50TnVtYmVyKSB7XG4gICAgaWYgKGJpZ0ludE51bWJlciA8IEJpZ0ludCgwKSB8fCBiaWdJbnROdW1iZXIgPiBCaWdJbnQoJzB4RkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRicpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTnVtYmVyIG91dCBvZiByYW5nZSBmb3IgVTI1NkJFJyk7XG4gICAgfVxuICAgIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcigzMik7IC8vIDI1NiBiaXRzID0gMzIgYnl0ZXNcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG4gICAgLy8gTG9vcCB0aHJvdWdoIGVhY2ggYnl0ZSBhbmQgc2V0IGl0IGZyb20gdGhlIHN0YXJ0IHRvIG1haW50YWluIGJpZy1lbmRpYW4gb3JkZXJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDMyOyBpKyspIHtcbiAgICAgICAgLy8gRXh0cmFjdCBlYWNoIGJ5dGUgb2YgdGhlIEJpZ0ludCBudW1iZXJcbiAgICAgICAgY29uc3QgYnl0ZSA9IE51bWJlcigoYmlnSW50TnVtYmVyID4+IEJpZ0ludCg4ICogKDMxIC0gaSkpKSAmIEJpZ0ludCgweEZGKSk7XG4gICAgICAgIHZpZXcuc2V0VWludDgoaSwgYnl0ZSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWZmZXIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvQnl0ZXNJbnQzMihudW1iZXIsIGxpdHRsZUVuZGlhbiA9IHRydWUpIHtcbiAgICBjb25zdCBhcnJheUJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcig0KTsgLy8gYW4gSW50MzIgdGFrZXMgNCBieXRlc1xuICAgIGNvbnN0IGRhdGFWaWV3ID0gbmV3IERhdGFWaWV3KGFycmF5QnVmZmVyKTtcbiAgICBkYXRhVmlldy5zZXRVaW50MzIoMCwgbnVtYmVyLCBsaXR0bGVFbmRpYW4pOyAvLyBieXRlT2Zmc2V0ID0gMDsgbGl0dGVFbmRpYW4gPSBmYWxzZVxuICAgIHJldHVybiBhcnJheUJ1ZmZlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0J5dGVzNjRMRShudW0sIHNpemUpIHtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2Moc2l6ZSk7XG4gICAgYnVmZmVyLndyaXRlQmlnVUludDY0TEUoQmlnSW50KG51bSksIDApO1xuICAgIHJldHVybiBidWZmZXI7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9CeXRlczY0QkUobnVtLCBzaXplLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKHNpemUpO1xuICAgIGJ1ZmZlci53cml0ZUJpZ1VJbnQ2NEJFKEJpZ0ludChudW0pLCBvZmZzZXQpO1xuICAgIHJldHVybiBidWZmZXI7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9CeXRlczE2TEUobnVtLCBzaXplLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKHNpemUpO1xuICAgIGJ1ZmZlci53cml0ZVVJbnQxNkxFKG51bSwgb2Zmc2V0KTtcbiAgICByZXR1cm4gYnVmZmVyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/consts.js":
/*!********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/consts.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EVM_STEPS: () => (/* binding */ EVM_STEPS),\n/* harmony export */   NEON_TREASURY_POOL_COUNT: () => (/* binding */ NEON_TREASURY_POOL_COUNT),\n/* harmony export */   NO_CHILD_INDEX: () => (/* binding */ NO_CHILD_INDEX)\n/* harmony export */ });\nconst EVM_STEPS = 500;\nconst NEON_TREASURY_POOL_COUNT = 128;\nconst NO_CHILD_INDEX = 0xffff;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvY29uc3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvY29uc3RzLmpzPzJiNTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEVWTV9TVEVQUyA9IDUwMDtcbmV4cG9ydCBjb25zdCBORU9OX1RSRUFTVVJZX1BPT0xfQ09VTlQgPSAxMjg7XG5leHBvcnQgY29uc3QgTk9fQ0hJTERfSU5ERVggPSAweGZmZmY7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/consts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/delay.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/delay.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   delay: () => (/* binding */ delay)\n/* harmony export */ });\nasync function delay(timestamp) {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(), timestamp);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvZGVsYXkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvZGVsYXkuanM/Nzc4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsYXkodGltZXN0YW1wKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZSgpLCB0aW1lc3RhbXApO1xuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/delay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/faucet.js":
/*!********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/faucet.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FaucetDropper: () => (/* binding */ FaucetDropper),\n/* harmony export */   neonAirdrop: () => (/* binding */ neonAirdrop),\n/* harmony export */   solanaAirdrop: () => (/* binding */ solanaAirdrop)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/log.js\");\n/* harmony import */ var _delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./delay */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/delay.js\");\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rest */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/rest.js\");\n\n\n\n\nclass FaucetDropper {\n    url;\n    constructor(url) {\n        this.url = url;\n    }\n    async requestERC20(wallet, address_spl, amount) {\n        try {\n            return (0,_rest__WEBPACK_IMPORTED_MODULE_3__.post)(`${this.url}/request_erc20`, { amount, wallet, address_spl });\n        }\n        catch (e) {\n            return 0;\n        }\n    }\n    async requestNeon(wallet, amount) {\n        try {\n            return await (0,_rest__WEBPACK_IMPORTED_MODULE_3__.post)(`${this.url}/request_neon`, { amount, wallet });\n        }\n        catch (e) {\n            return 0;\n        }\n    }\n}\nasync function neonAirdrop(provider, faucet, wallet, amount, tokenName = 'NEON', decimals = 18) {\n    let balance = await provider.getBalance(wallet);\n    if (balance < BigInt(amount) * BigInt(10 ** decimals)) {\n        const requestAmount = amount > 100 ? 100 : amount;\n        await faucet.requestNeon(wallet, requestAmount);\n        await (0,_delay__WEBPACK_IMPORTED_MODULE_2__.delay)(4e3);\n        return neonAirdrop(provider, faucet, wallet, amount, tokenName, decimals);\n    }\n    (0,_log__WEBPACK_IMPORTED_MODULE_1__.log)(`${wallet} balance: ${balance / BigInt(10 ** decimals)} ${tokenName}`);\n    return balance;\n}\nasync function solanaAirdrop(connection, publicKey, lamports, commitment = 'finalized') {\n    let balance = await connection.getBalance(publicKey);\n    if (balance < lamports) {\n        const signature = await connection.requestAirdrop(publicKey, lamports);\n        const { blockhash, lastValidBlockHeight } = await connection.getLatestBlockhash();\n        await connection.confirmTransaction({ blockhash, lastValidBlockHeight, signature }, commitment);\n        balance = await connection.getBalance(publicKey);\n    }\n    (0,_log__WEBPACK_IMPORTED_MODULE_1__.log)(`${publicKey.toBase58()} balance: ${balance / _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.LAMPORTS_PER_SOL} SOL`);\n    return balance;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvZmF1Y2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUQ7QUFDdkI7QUFDSTtBQUNGO0FBQ3ZCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDJDQUFJLElBQUksU0FBUyxtQkFBbUIsNkJBQTZCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJDQUFJLElBQUksU0FBUyxrQkFBa0IsZ0JBQWdCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDZDQUFLO0FBQ25CO0FBQ0E7QUFDQSxJQUFJLHlDQUFHLElBQUksUUFBUSxXQUFXLGtDQUFrQyxFQUFFLFVBQVU7QUFDNUU7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGtDQUFrQztBQUNsRCw4Q0FBOEMsNENBQTRDO0FBQzFGO0FBQ0E7QUFDQSxJQUFJLHlDQUFHLElBQUksc0JBQXNCLFdBQVcsVUFBVSw2REFBZ0IsRUFBRTtBQUN4RTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwY2FyZC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AbmVvbmV2bS9zb2xhbmEtc2lnbi9kaXN0L2VzbS91dGlscy9mYXVjZXQuanM/OTcwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMQU1QT1JUU19QRVJfU09MIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCB7IGxvZyB9IGZyb20gJy4vbG9nJztcbmltcG9ydCB7IGRlbGF5IH0gZnJvbSAnLi9kZWxheSc7XG5pbXBvcnQgeyBwb3N0IH0gZnJvbSAnLi9yZXN0JztcbmV4cG9ydCBjbGFzcyBGYXVjZXREcm9wcGVyIHtcbiAgICB1cmw7XG4gICAgY29uc3RydWN0b3IodXJsKSB7XG4gICAgICAgIHRoaXMudXJsID0gdXJsO1xuICAgIH1cbiAgICBhc3luYyByZXF1ZXN0RVJDMjAod2FsbGV0LCBhZGRyZXNzX3NwbCwgYW1vdW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gcG9zdChgJHt0aGlzLnVybH0vcmVxdWVzdF9lcmMyMGAsIHsgYW1vdW50LCB3YWxsZXQsIGFkZHJlc3Nfc3BsIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyByZXF1ZXN0TmVvbih3YWxsZXQsIGFtb3VudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHBvc3QoYCR7dGhpcy51cmx9L3JlcXVlc3RfbmVvbmAsIHsgYW1vdW50LCB3YWxsZXQgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG5lb25BaXJkcm9wKHByb3ZpZGVyLCBmYXVjZXQsIHdhbGxldCwgYW1vdW50LCB0b2tlbk5hbWUgPSAnTkVPTicsIGRlY2ltYWxzID0gMTgpIHtcbiAgICBsZXQgYmFsYW5jZSA9IGF3YWl0IHByb3ZpZGVyLmdldEJhbGFuY2Uod2FsbGV0KTtcbiAgICBpZiAoYmFsYW5jZSA8IEJpZ0ludChhbW91bnQpICogQmlnSW50KDEwICoqIGRlY2ltYWxzKSkge1xuICAgICAgICBjb25zdCByZXF1ZXN0QW1vdW50ID0gYW1vdW50ID4gMTAwID8gMTAwIDogYW1vdW50O1xuICAgICAgICBhd2FpdCBmYXVjZXQucmVxdWVzdE5lb24od2FsbGV0LCByZXF1ZXN0QW1vdW50KTtcbiAgICAgICAgYXdhaXQgZGVsYXkoNGUzKTtcbiAgICAgICAgcmV0dXJuIG5lb25BaXJkcm9wKHByb3ZpZGVyLCBmYXVjZXQsIHdhbGxldCwgYW1vdW50LCB0b2tlbk5hbWUsIGRlY2ltYWxzKTtcbiAgICB9XG4gICAgbG9nKGAke3dhbGxldH0gYmFsYW5jZTogJHtiYWxhbmNlIC8gQmlnSW50KDEwICoqIGRlY2ltYWxzKX0gJHt0b2tlbk5hbWV9YCk7XG4gICAgcmV0dXJuIGJhbGFuY2U7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc29sYW5hQWlyZHJvcChjb25uZWN0aW9uLCBwdWJsaWNLZXksIGxhbXBvcnRzLCBjb21taXRtZW50ID0gJ2ZpbmFsaXplZCcpIHtcbiAgICBsZXQgYmFsYW5jZSA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0QmFsYW5jZShwdWJsaWNLZXkpO1xuICAgIGlmIChiYWxhbmNlIDwgbGFtcG9ydHMpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgY29ubmVjdGlvbi5yZXF1ZXN0QWlyZHJvcChwdWJsaWNLZXksIGxhbXBvcnRzKTtcbiAgICAgICAgY29uc3QgeyBibG9ja2hhc2gsIGxhc3RWYWxpZEJsb2NrSGVpZ2h0IH0gPSBhd2FpdCBjb25uZWN0aW9uLmdldExhdGVzdEJsb2NraGFzaCgpO1xuICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmNvbmZpcm1UcmFuc2FjdGlvbih7IGJsb2NraGFzaCwgbGFzdFZhbGlkQmxvY2tIZWlnaHQsIHNpZ25hdHVyZSB9LCBjb21taXRtZW50KTtcbiAgICAgICAgYmFsYW5jZSA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0QmFsYW5jZShwdWJsaWNLZXkpO1xuICAgIH1cbiAgICBsb2coYCR7cHVibGljS2V5LnRvQmFzZTU4KCl9IGJhbGFuY2U6ICR7YmFsYW5jZSAvIExBTVBPUlRTX1BFUl9TT0x9IFNPTGApO1xuICAgIHJldHVybiBiYWxhbmNlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/faucet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EVM_STEPS: () => (/* reexport safe */ _consts__WEBPACK_IMPORTED_MODULE_1__.EVM_STEPS),\n/* harmony export */   FaucetDropper: () => (/* reexport safe */ _faucet__WEBPACK_IMPORTED_MODULE_3__.FaucetDropper),\n/* harmony export */   NEON_TREASURY_POOL_COUNT: () => (/* reexport safe */ _consts__WEBPACK_IMPORTED_MODULE_1__.NEON_TREASURY_POOL_COUNT),\n/* harmony export */   NO_CHILD_INDEX: () => (/* reexport safe */ _consts__WEBPACK_IMPORTED_MODULE_1__.NO_CHILD_INDEX),\n/* harmony export */   base58ToHex: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.base58ToHex),\n/* harmony export */   bufferAlloc: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.bufferAlloc),\n/* harmony export */   bufferConcat: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.bufferConcat),\n/* harmony export */   bufferToHex: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.bufferToHex),\n/* harmony export */   delay: () => (/* reexport safe */ _delay__WEBPACK_IMPORTED_MODULE_2__.delay),\n/* harmony export */   getGasToken: () => (/* reexport safe */ _proxy__WEBPACK_IMPORTED_MODULE_6__.getGasToken),\n/* harmony export */   hexToBuffer: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.hexToBuffer),\n/* harmony export */   isValidHex: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.isValidHex),\n/* harmony export */   log: () => (/* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_5__.log),\n/* harmony export */   logJson: () => (/* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_5__.logJson),\n/* harmony export */   neonAirdrop: () => (/* reexport safe */ _faucet__WEBPACK_IMPORTED_MODULE_3__.neonAirdrop),\n/* harmony export */   numberToBuffer: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.numberToBuffer),\n/* harmony export */   post: () => (/* reexport safe */ _rest__WEBPACK_IMPORTED_MODULE_7__.post),\n/* harmony export */   prepareHeaders: () => (/* reexport safe */ _rest__WEBPACK_IMPORTED_MODULE_7__.prepareHeaders),\n/* harmony export */   sendSolanaTransaction: () => (/* reexport safe */ _wallet__WEBPACK_IMPORTED_MODULE_9__.sendSolanaTransaction),\n/* harmony export */   solanaAirdrop: () => (/* reexport safe */ _faucet__WEBPACK_IMPORTED_MODULE_3__.solanaAirdrop),\n/* harmony export */   solanaTransactionLog: () => (/* reexport safe */ _transaction__WEBPACK_IMPORTED_MODULE_4__.solanaTransactionLog),\n/* harmony export */   stringToBuffer: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer),\n/* harmony export */   toBytes16LE: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.toBytes16LE),\n/* harmony export */   toBytes64BE: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.toBytes64BE),\n/* harmony export */   toBytes64LE: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.toBytes64LE),\n/* harmony export */   toBytesInt32: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.toBytesInt32),\n/* harmony export */   toSigner: () => (/* reexport safe */ _wallet__WEBPACK_IMPORTED_MODULE_9__.toSigner),\n/* harmony export */   toU256BE: () => (/* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_0__.toU256BE),\n/* harmony export */   uuid: () => (/* reexport safe */ _uuid__WEBPACK_IMPORTED_MODULE_8__.uuid)\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/buffer.js\");\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./consts */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/consts.js\");\n/* harmony import */ var _delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./delay */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/delay.js\");\n/* harmony import */ var _faucet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./faucet */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/faucet.js\");\n/* harmony import */ var _transaction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transaction */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/transaction.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/log.js\");\n/* harmony import */ var _proxy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./proxy */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/proxy.js\");\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rest */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/rest.js\");\n/* harmony import */ var _uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./uuid */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/uuid.js\");\n/* harmony import */ var _wallet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/wallet.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlCO0FBQ0E7QUFDRDtBQUNDO0FBQ0s7QUFDUjtBQUNFO0FBQ0Q7QUFDQTtBQUNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwY2FyZC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AbmVvbmV2bS9zb2xhbmEtc2lnbi9kaXN0L2VzbS91dGlscy9pbmRleC5qcz8xNTlmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYnVmZmVyJztcbmV4cG9ydCAqIGZyb20gJy4vY29uc3RzJztcbmV4cG9ydCAqIGZyb20gJy4vZGVsYXknO1xuZXhwb3J0ICogZnJvbSAnLi9mYXVjZXQnO1xuZXhwb3J0ICogZnJvbSAnLi90cmFuc2FjdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL2xvZyc7XG5leHBvcnQgKiBmcm9tICcuL3Byb3h5JztcbmV4cG9ydCAqIGZyb20gJy4vcmVzdCc7XG5leHBvcnQgKiBmcm9tICcuL3V1aWQnO1xuZXhwb3J0ICogZnJvbSAnLi93YWxsZXQnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/log.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/log.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   logJson: () => (/* binding */ logJson)\n/* harmony export */ });\nfunction log(...args) {\n    if (true) {\n        console.log(...args);\n    }\n}\nfunction logJson(obj) {\n    log(JSON.stringify(obj, null, 2));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvbG9nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUCxRQUFRLElBQXFDO0FBQzdDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvbG9nLmpzPzU2MWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGxvZyguLi5hcmdzKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgY29uc29sZS5sb2coLi4uYXJncyk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGxvZ0pzb24ob2JqKSB7XG4gICAgbG9nKEpTT04uc3RyaW5naWZ5KG9iaiwgbnVsbCwgMikpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/proxy.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/proxy.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGasToken: () => (/* binding */ getGasToken)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\nfunction getGasToken(tokenList, chainId) {\n    const gasToken = tokenList.find(i => parseInt(i.tokenChainId, 16) === chainId);\n    const tokenMintAddress = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(gasToken.tokenMint);\n    return { gasToken, tokenMintAddress };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvcHJveHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7QUFDckM7QUFDUDtBQUNBLGlDQUFpQyxzREFBUztBQUMxQyxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBjYXJkLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BuZW9uZXZtL3NvbGFuYS1zaWduL2Rpc3QvZXNtL3V0aWxzL3Byb3h5LmpzP2JmZjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRHYXNUb2tlbih0b2tlbkxpc3QsIGNoYWluSWQpIHtcbiAgICBjb25zdCBnYXNUb2tlbiA9IHRva2VuTGlzdC5maW5kKGkgPT4gcGFyc2VJbnQoaS50b2tlbkNoYWluSWQsIDE2KSA9PT0gY2hhaW5JZCk7XG4gICAgY29uc3QgdG9rZW5NaW50QWRkcmVzcyA9IG5ldyBQdWJsaWNLZXkoZ2FzVG9rZW4udG9rZW5NaW50KTtcbiAgICByZXR1cm4geyBnYXNUb2tlbiwgdG9rZW5NaW50QWRkcmVzcyB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/proxy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/rest.js":
/*!******************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/rest.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   post: () => (/* binding */ post),\n/* harmony export */   prepareHeaders: () => (/* binding */ prepareHeaders)\n/* harmony export */ });\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/log.js\");\n\nfunction prepareHeaders(headersData) {\n    const headers = new Headers();\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', 'application/json');\n    for (const key in headersData) {\n        if (headersData.hasOwnProperty(key)) {\n            headers.set(key, headersData[key]);\n        }\n    }\n    const h = [];\n    headers.forEach((value, key) => {\n        h.push(`-H '${key}: ${value}'`);\n    });\n    return [headers, h.join(' ')];\n}\nasync function post(url = '', data = {}, headersData = {}) {\n    const [headers, headersString] = prepareHeaders(headersData);\n    const body = JSON.stringify(data);\n    const fetchData = {\n        headers,\n        body,\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer'\n    };\n    (0,_log__WEBPACK_IMPORTED_MODULE_0__.log)(`curl ${url} -X POST ${headersString} -d '${body}' | jq .`);\n    const response = await fetch(url, fetchData);\n    const result = await response.text();\n    if (result) {\n        return JSON.parse(result);\n    }\n    return {};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvcmVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFDckI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixJQUFJLElBQUksTUFBTTtBQUNwQyxLQUFLO0FBQ0w7QUFDQTtBQUNPLHVDQUF1QyxrQkFBa0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx5Q0FBRyxTQUFTLEtBQUssVUFBVSxlQUFlLE1BQU0sS0FBSztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvcmVzdC5qcz9iMWY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZyB9IGZyb20gJy4vbG9nJztcbmV4cG9ydCBmdW5jdGlvbiBwcmVwYXJlSGVhZGVycyhoZWFkZXJzRGF0YSkge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICAgIGhlYWRlcnMuc2V0KCdBY2NlcHQnLCAnYXBwbGljYXRpb24vanNvbicpO1xuICAgIGhlYWRlcnMuc2V0KCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpO1xuICAgIGZvciAoY29uc3Qga2V5IGluIGhlYWRlcnNEYXRhKSB7XG4gICAgICAgIGlmIChoZWFkZXJzRGF0YS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICBoZWFkZXJzLnNldChrZXksIGhlYWRlcnNEYXRhW2tleV0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGggPSBbXTtcbiAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaC5wdXNoKGAtSCAnJHtrZXl9OiAke3ZhbHVlfSdgKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2hlYWRlcnMsIGguam9pbignICcpXTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwb3N0KHVybCA9ICcnLCBkYXRhID0ge30sIGhlYWRlcnNEYXRhID0ge30pIHtcbiAgICBjb25zdCBbaGVhZGVycywgaGVhZGVyc1N0cmluZ10gPSBwcmVwYXJlSGVhZGVycyhoZWFkZXJzRGF0YSk7XG4gICAgY29uc3QgYm9keSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgIGNvbnN0IGZldGNoRGF0YSA9IHtcbiAgICAgICAgaGVhZGVycyxcbiAgICAgICAgYm9keSxcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIG1vZGU6ICdjb3JzJyxcbiAgICAgICAgY2FjaGU6ICduby1jYWNoZScsXG4gICAgICAgIGNyZWRlbnRpYWxzOiAnc2FtZS1vcmlnaW4nLFxuICAgICAgICByZWRpcmVjdDogJ2ZvbGxvdycsXG4gICAgICAgIHJlZmVycmVyUG9saWN5OiAnbm8tcmVmZXJyZXInXG4gICAgfTtcbiAgICBsb2coYGN1cmwgJHt1cmx9IC1YIFBPU1QgJHtoZWFkZXJzU3RyaW5nfSAtZCAnJHtib2R5fScgfCBqcSAuYCk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIGZldGNoRGF0YSk7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UocmVzdWx0KTtcbiAgICB9XG4gICAgcmV0dXJuIHt9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/rest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/transaction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/transaction.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   solanaTransactionLog: () => (/* binding */ solanaTransactionLog)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/src/esm/index.js\");\n\nfunction solanaTransactionLog(transaction) {\n    console.log(transaction.instructions.map(({ programId, keys, data }, index) => {\n        return `[${index}] programId: ${programId.toBase58()}\nkeys:\n${keys.map(k => `${k.pubkey.toBase58()} [${k.isSigner ? 'signer' : ''}${k.isSigner && k.isWritable ? ', ' : ''}${k.isWritable ? 'writer' : ''}]`).join('\\n')}\ndata:\n${bs58__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(data)}\n0x${Buffer.from(data).toString('hex')}\n${JSON.stringify(data)}\n------------------------------`;\n    }).join('\\n\\n'));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0I7QUFDakI7QUFDUCxnREFBZ0QsdUJBQXVCO0FBQ3ZFLG1CQUFtQixNQUFNLGVBQWU7QUFDeEM7QUFDQSxFQUFFLGlCQUFpQixxQkFBcUIsR0FBRywyQkFBMkIsRUFBRSx1Q0FBdUMsRUFBRSw2QkFBNkI7QUFDOUk7QUFDQSxFQUFFLDRDQUFJO0FBQ04sSUFBSTtBQUNKLEVBQUU7QUFDRjtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvdHJhbnNhY3Rpb24uanM/Njc0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYnM1OCBmcm9tICdiczU4JztcbmV4cG9ydCBmdW5jdGlvbiBzb2xhbmFUcmFuc2FjdGlvbkxvZyh0cmFuc2FjdGlvbikge1xuICAgIGNvbnNvbGUubG9nKHRyYW5zYWN0aW9uLmluc3RydWN0aW9ucy5tYXAoKHsgcHJvZ3JhbUlkLCBrZXlzLCBkYXRhIH0sIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiBgWyR7aW5kZXh9XSBwcm9ncmFtSWQ6ICR7cHJvZ3JhbUlkLnRvQmFzZTU4KCl9XG5rZXlzOlxuJHtrZXlzLm1hcChrID0+IGAke2sucHVia2V5LnRvQmFzZTU4KCl9IFske2suaXNTaWduZXIgPyAnc2lnbmVyJyA6ICcnfSR7ay5pc1NpZ25lciAmJiBrLmlzV3JpdGFibGUgPyAnLCAnIDogJyd9JHtrLmlzV3JpdGFibGUgPyAnd3JpdGVyJyA6ICcnfV1gKS5qb2luKCdcXG4nKX1cbmRhdGE6XG4ke2JzNTguZW5jb2RlKGRhdGEpfVxuMHgke0J1ZmZlci5mcm9tKGRhdGEpLnRvU3RyaW5nKCdoZXgnKX1cbiR7SlNPTi5zdHJpbmdpZnkoZGF0YSl9XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1gO1xuICAgIH0pLmpvaW4oJ1xcblxcbicpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/uuid.js":
/*!******************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/uuid.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uuid: () => (/* binding */ uuid)\n/* harmony export */ });\nfunction uuid() {\n    return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, c => (+c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> +c / 4).toString(16));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvdXVpZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwY2FyZC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AbmVvbmV2bS9zb2xhbmEtc2lnbi9kaXN0L2VzbS91dGlscy91dWlkLmpzPzMxMTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHV1aWQoKSB7XG4gICAgcmV0dXJuICcxMDAwMDAwMC0xMDAwLTQwMDAtODAwMC0xMDAwMDAwMDAwMDAnLnJlcGxhY2UoL1swMThdL2csIGMgPT4gKCtjIF4gY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSgxKSlbMF0gJiAxNSA+PiArYyAvIDQpLnRvU3RyaW5nKDE2KSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/uuid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/wallet.js":
/*!********************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/utils/wallet.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendSolanaTransaction: () => (/* binding */ sendSolanaTransaction),\n/* harmony export */   toSigner: () => (/* binding */ toSigner)\n/* harmony export */ });\n/* harmony import */ var _neonevm_solana_sign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @neonevm/solana-sign */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/index.mjs\");\n\nfunction toSigner({ publicKey, secretKey }) {\n    return { publicKey, secretKey };\n}\nasync function sendSolanaTransaction(connection, transaction, signers, confirm = false, options, name = '') {\n    const { blockhash, lastValidBlockHeight } = await connection.getLatestBlockhash();\n    transaction.recentBlockhash = blockhash;\n    transaction.sign(...signers);\n    (0,_neonevm_solana_sign__WEBPACK_IMPORTED_MODULE_0__.solanaTransactionLog)(transaction);\n    const signature = await connection.sendRawTransaction(transaction.serialize(), options);\n    if (confirm) {\n        await connection.confirmTransaction({ blockhash, lastValidBlockHeight, signature });\n    }\n    (0,_neonevm_solana_sign__WEBPACK_IMPORTED_MODULE_0__.log)(`Transaction${name ? ` ${name}` : ''} signature: ${signature}`);\n    (0,_neonevm_solana_sign__WEBPACK_IMPORTED_MODULE_0__.log)(`https://explorer.solana.com/tx/${signature}?cluster=custom&customUrl=http://localhost:8899`);\n    return { signature, blockhash, lastValidBlockHeight };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvd2FsbGV0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRTtBQUMxRCxvQkFBb0Isc0JBQXNCO0FBQ2pELGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxrQ0FBa0M7QUFDOUM7QUFDQTtBQUNBLElBQUksMEVBQW9CO0FBQ3hCO0FBQ0E7QUFDQSw4Q0FBOEMsNENBQTRDO0FBQzFGO0FBQ0EsSUFBSSx5REFBRyxlQUFlLFdBQVcsS0FBSyxRQUFRLGFBQWEsVUFBVTtBQUNyRSxJQUFJLHlEQUFHLG1DQUFtQyxVQUFVO0FBQ3BELGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vdXRpbHMvd2FsbGV0LmpzP2I2OTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nLCBzb2xhbmFUcmFuc2FjdGlvbkxvZyB9IGZyb20gJ0BuZW9uZXZtL3NvbGFuYS1zaWduJztcbmV4cG9ydCBmdW5jdGlvbiB0b1NpZ25lcih7IHB1YmxpY0tleSwgc2VjcmV0S2V5IH0pIHtcbiAgICByZXR1cm4geyBwdWJsaWNLZXksIHNlY3JldEtleSB9O1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlbmRTb2xhbmFUcmFuc2FjdGlvbihjb25uZWN0aW9uLCB0cmFuc2FjdGlvbiwgc2lnbmVycywgY29uZmlybSA9IGZhbHNlLCBvcHRpb25zLCBuYW1lID0gJycpIHtcbiAgICBjb25zdCB7IGJsb2NraGFzaCwgbGFzdFZhbGlkQmxvY2tIZWlnaHQgfSA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0TGF0ZXN0QmxvY2toYXNoKCk7XG4gICAgdHJhbnNhY3Rpb24ucmVjZW50QmxvY2toYXNoID0gYmxvY2toYXNoO1xuICAgIHRyYW5zYWN0aW9uLnNpZ24oLi4uc2lnbmVycyk7XG4gICAgc29sYW5hVHJhbnNhY3Rpb25Mb2codHJhbnNhY3Rpb24pO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IGF3YWl0IGNvbm5lY3Rpb24uc2VuZFJhd1RyYW5zYWN0aW9uKHRyYW5zYWN0aW9uLnNlcmlhbGl6ZSgpLCBvcHRpb25zKTtcbiAgICBpZiAoY29uZmlybSkge1xuICAgICAgICBhd2FpdCBjb25uZWN0aW9uLmNvbmZpcm1UcmFuc2FjdGlvbih7IGJsb2NraGFzaCwgbGFzdFZhbGlkQmxvY2tIZWlnaHQsIHNpZ25hdHVyZSB9KTtcbiAgICB9XG4gICAgbG9nKGBUcmFuc2FjdGlvbiR7bmFtZSA/IGAgJHtuYW1lfWAgOiAnJ30gc2lnbmF0dXJlOiAke3NpZ25hdHVyZX1gKTtcbiAgICBsb2coYGh0dHBzOi8vZXhwbG9yZXIuc29sYW5hLmNvbS90eC8ke3NpZ25hdHVyZX0/Y2x1c3Rlcj1jdXN0b20mY3VzdG9tVXJsPWh0dHA6Ly9sb2NhbGhvc3Q6ODg5OWApO1xuICAgIHJldHVybiB7IHNpZ25hdHVyZSwgYmxvY2toYXNoLCBsYXN0VmFsaWRCbG9ja0hlaWdodCB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@neonevm/solana-sign/dist/esm/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BalanceAccountLayout: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.BalanceAccountLayout),\n/* harmony export */   EVM_STEPS: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.EVM_STEPS),\n/* harmony export */   FaucetDropper: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.FaucetDropper),\n/* harmony export */   GAS_LIMIT_DEFAULT: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.GAS_LIMIT_DEFAULT),\n/* harmony export */   MAX_FEE_PER_GAS_DEFAULT: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.MAX_FEE_PER_GAS_DEFAULT),\n/* harmony export */   MAX_PRIORITY_FEE_PER_GAS_DEFAULT: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.MAX_PRIORITY_FEE_PER_GAS_DEFAULT),\n/* harmony export */   MultipleTransaction: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.MultipleTransaction),\n/* harmony export */   MultipleTransactions: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.MultipleTransactions),\n/* harmony export */   NEON_TREASURY_POOL_COUNT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.NEON_TREASURY_POOL_COUNT),\n/* harmony export */   NO_CHILD_INDEX: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.NO_CHILD_INDEX),\n/* harmony export */   NeonClientApi: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.NeonClientApi),\n/* harmony export */   NeonProxyRpcApi: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.NeonProxyRpcApi),\n/* harmony export */   ScheduledTransaction: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.ScheduledTransaction),\n/* harmony export */   SolanaNeonAccount: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.SolanaNeonAccount),\n/* harmony export */   TreasuryPoolAddress: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.TreasuryPoolAddress),\n/* harmony export */   authAccountAddress: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.authAccountAddress),\n/* harmony export */   balanceAccountNonce: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.balanceAccountNonce),\n/* harmony export */   base58ToHex: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.base58ToHex),\n/* harmony export */   bufferAlloc: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.bufferAlloc),\n/* harmony export */   bufferConcat: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.bufferConcat),\n/* harmony export */   bufferToHex: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.bufferToHex),\n/* harmony export */   createAccountWithSeedInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createAccountWithSeedInstruction),\n/* harmony export */   createBalanceAccountInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createBalanceAccountInstruction),\n/* harmony export */   createBalanceAccountTransaction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createBalanceAccountTransaction),\n/* harmony export */   createHolderAccountInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createHolderAccountInstruction),\n/* harmony export */   createHolderAccountTransaction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createHolderAccountTransaction),\n/* harmony export */   createMultipleTransactionDependLast: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createMultipleTransactionDependLast),\n/* harmony export */   createMultipleTransactionParallel: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createMultipleTransactionParallel),\n/* harmony export */   createMultipleTransactionSequential: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createMultipleTransactionSequential),\n/* harmony export */   createPartialCallOrContinueFromRawEthereumInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createPartialCallOrContinueFromRawEthereumInstruction),\n/* harmony export */   createPartialCallOrContinueFromRawEthereumTransaction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createPartialCallOrContinueFromRawEthereumTransaction),\n/* harmony export */   createScheduledNeonEvmMultipleTransaction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createScheduledNeonEvmMultipleTransaction),\n/* harmony export */   createScheduledNeonEvmTransaction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createScheduledNeonEvmTransaction),\n/* harmony export */   createScheduledTransactionInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createScheduledTransactionInstruction),\n/* harmony export */   createScheduledTransactionStartFromAccountInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createScheduledTransactionStartFromAccountInstruction),\n/* harmony export */   createScheduledTransactionStartFromAccountTransaction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createScheduledTransactionStartFromAccountTransaction),\n/* harmony export */   createScheduledTransactionStartFromInstructionInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createScheduledTransactionStartFromInstructionInstruction),\n/* harmony export */   createWriteToHolderAccountInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.createWriteToHolderAccountInstruction),\n/* harmony export */   delay: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.delay),\n/* harmony export */   deleteHolderAccountInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.deleteHolderAccountInstruction),\n/* harmony export */   destroyScheduledNeonEvmMultipleTransaction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.destroyScheduledNeonEvmMultipleTransaction),\n/* harmony export */   destroyScheduledTransactionInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.destroyScheduledTransactionInstruction),\n/* harmony export */   executeScheduledTransactionFromAccount: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.executeScheduledTransactionFromAccount),\n/* harmony export */   executeTransactionStepsFromAccount: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.executeTransactionStepsFromAccount),\n/* harmony export */   finishScheduledTransactionInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.finishScheduledTransactionInstruction),\n/* harmony export */   getGasToken: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.getGasToken),\n/* harmony export */   getProxyState: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.getProxyState),\n/* harmony export */   getTransactionReceipt: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.getTransactionReceipt),\n/* harmony export */   hexStringLayout: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.hexStringLayout),\n/* harmony export */   hexToBuffer: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.hexToBuffer),\n/* harmony export */   holderAddressWithSeed: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.holderAddressWithSeed),\n/* harmony export */   isValidHex: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.isValidHex),\n/* harmony export */   log: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.log),\n/* harmony export */   logJson: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.logJson),\n/* harmony export */   neonAirdrop: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.neonAirdrop),\n/* harmony export */   neonAuthorityPoolAddressSync: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.neonAuthorityPoolAddressSync),\n/* harmony export */   neonBalanceProgramAddressSync: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.neonBalanceProgramAddressSync),\n/* harmony export */   neonTreeAccountAddressSync: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.neonTreeAccountAddressSync),\n/* harmony export */   neonWalletProgramAddress: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.neonWalletProgramAddress),\n/* harmony export */   numberToBuffer: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.numberToBuffer),\n/* harmony export */   post: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.post),\n/* harmony export */   prepareHeaders: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.prepareHeaders),\n/* harmony export */   prepareSolanaInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.prepareSolanaInstruction),\n/* harmony export */   prepareSolanaInstructions: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.prepareSolanaInstructions),\n/* harmony export */   prepareSolanaTransaction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.prepareSolanaTransaction),\n/* harmony export */   privateKeyFromWallet: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.privateKeyFromWallet),\n/* harmony export */   selectMultipleTransactionMethod: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.selectMultipleTransactionMethod),\n/* harmony export */   sendSolanaTransaction: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.sendSolanaTransaction),\n/* harmony export */   signNeonTransaction: () => (/* reexport safe */ _neon__WEBPACK_IMPORTED_MODULE_2__.signNeonTransaction),\n/* harmony export */   skipScheduledTransactionInstruction: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.skipScheduledTransactionInstruction),\n/* harmony export */   solanaAirdrop: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.solanaAirdrop),\n/* harmony export */   solanaToNeonAddress: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.solanaToNeonAddress),\n/* harmony export */   solanaTransactionLog: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.solanaTransactionLog),\n/* harmony export */   stringToBuffer: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.stringToBuffer),\n/* harmony export */   toBytes16LE: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.toBytes16LE),\n/* harmony export */   toBytes64BE: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.toBytes64BE),\n/* harmony export */   toBytes64LE: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.toBytes64LE),\n/* harmony export */   toBytesInt32: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.toBytesInt32),\n/* harmony export */   toSigner: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.toSigner),\n/* harmony export */   toU256BE: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.toU256BE),\n/* harmony export */   treasuryPoolAddressSync: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.treasuryPoolAddressSync),\n/* harmony export */   uuid: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.uuid),\n/* harmony export */   writeTransactionToHoldAccount: () => (/* reexport safe */ _solana__WEBPACK_IMPORTED_MODULE_3__.writeTransactionToHoldAccount)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/api/index.js\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/models/index.js\");\n/* harmony import */ var _neon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./neon */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/neon/index.js\");\n/* harmony import */ var _solana__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./solana */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/solana/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/utils/index.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0I7QUFDRztBQUNGO0FBQ0U7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcGNhcmQtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQG5lb25ldm0vc29sYW5hLXNpZ24vZGlzdC9lc20vaW5kZXgubWpzPzgzMzIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9hcGknO1xuZXhwb3J0ICogZnJvbSAnLi9tb2RlbHMnO1xuZXhwb3J0ICogZnJvbSAnLi9uZW9uJztcbmV4cG9ydCAqIGZyb20gJy4vc29sYW5hJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@neonevm/solana-sign/dist/esm/index.mjs\n");

/***/ })

};
;